{"version":3,"sources":["webpack:///./src/pages/sol-lewitt/wall-drawing-16.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js"],"names":["BAND_WIDTH","random","range","Sol16","canvas","React","createRef","componentDidMount","context","this","current","getContext","drawBand","paths","forEach","_ref","a","b","beginPath","moveTo","x","y","lineTo","strokeStyle","lineWidth","stroke","diagonalLength","Math","sqrt","push","makePaths","fillStyle","fillRect","save","translate","WIDTH","restore","rotate","PI","offset","render","Glamor","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_7__","style","textAlign","className","styles","art","ref","width","height","labelWrapper","label","artist","artwork","italic","medium","paragraph","instructionContent","Component","css","margin","display","justifyContent","marginBottom","padding","fontWeight","textDecoration","fontStyle","instruction","paddingLeft","borderLeft","fontFamily","fontSize","code","StaticQueryContext","createContext","StaticQuery","props","Consumer","staticQueryData","data","query","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","__webpack_exports__","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_3__","__Container","_header__WEBPACK_IMPORTED_MODULE_4__","title","site","siteMetadata","__Main","_footer__WEBPACK_IMPORTED_MODULE_5__","_public_static_d_3892401927_json__WEBPACK_IMPORTED_MODULE_1__","name","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","assign","json","shape","__Header","__Header_heading","gatsby__WEBPACK_IMPORTED_MODULE_2__","__Header_link","to","position","zIndex","maxWidth","color","__Footer","__Footer_emailLink","href","marginTop","letterSpacing"],"mappings":"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","file":"component---src-pages-sol-lewitt-wall-drawing-16-js-15011119db1b01fb048b.js","sourcesContent":["import React from 'react'\nimport { css } from 'glamor'\nimport random from 'canvas-sketch-util/random'\n\nimport Layout from '../../components/layout'\n\nconst LINE_SPACING = 5\nconst WIDTH = 512\nconst BAND_WIDTH = WIDTH / random.range(1.5, 3)\n\nclass Sol16 extends React.Component {\n  canvas = React.createRef()\n\n  componentDidMount () {\n    const canvas = this.canvas.current\n    const context = canvas.getContext('2d')\n\n    const makePaths = () => {\n      const paths = []\n      const diagonalLength = Math.sqrt(2 * WIDTH * WIDTH)\n\n      for (let x = 0; x <= diagonalLength; x += LINE_SPACING) {\n        const a = { x, y: 0 }\n        const b = { x, y: BAND_WIDTH }\n        paths.push([ a, b ])\n      }\n\n      return paths\n    }\n\n    const drawBand = () => {\n      paths.forEach(([ a, b ]) => {\n        context.beginPath()\n        context.moveTo(a.x, a.y)\n        context.lineTo(b.x, b.y)\n        context.strokeStyle = '#aaa'\n        context.lineWidth = 1\n        context.stroke()\n      })\n    }\n\n    const paths = makePaths()\n\n    context.fillStyle = 'white'\n    context.fillRect(0, 0, WIDTH, WIDTH)\n\n    context.save()\n    context.translate(0, WIDTH / 2 - BAND_WIDTH / 2)\n    drawBand()\n    context.restore()\n\n    context.save()\n    context.translate(WIDTH / 2 + BAND_WIDTH / 2, 0)\n    context.rotate(Math.PI / 2)\n    drawBand()\n    context.restore()\n\n    const offset = Math.sqrt(BAND_WIDTH * BAND_WIDTH / 2) / 2\n    context.translate(-offset, WIDTH - offset)\n    context.rotate(Math.PI / -4)\n    drawBand()\n  }\n\n  render () {\n    return (\n      <Layout>\n        <div>\n          <h2 style={{ textAlign: 'center' }}>\n            [Sol LeWitt] Wall Drawing #16 (1969)\n          </h2>\n\n          <div className={styles.art}>\n            <canvas\n              ref={this.canvas}\n              width={WIDTH}\n              height={WIDTH}\n            />\n          </div>\n\n          <div className={styles.labelWrapper}>\n            <div className={styles.label}>\n              <p className={styles.artist}>\n                SOL LEWITT\n              </p>\n              <p className={styles.artwork}>\n                <span className={styles.italic}>Wall drawing</span>\n                , dhk.party\n              </p>\n              <p className={styles.medium}>\n                Digital (HTML5 Canvas)\n              </p>\n            </div>\n          </div>\n\n          <p className={styles.paragraph}>\n            이 작품에 대한 솔 르윗의 지시사항은 다음과 같다.\n          </p>\n\n          <blockquote className={styles.instructionContent}>\n            Bands of lines 12 inches (30 cm) wide,<br />\n            in three directions (vertical, horizontal, diagonal right) intersecting.<br /><br />\n            세 가지 방향(수직, 수평, 우대각)으로 교차하는 30cm 폭의 줄무늬 띠.\n          </blockquote>\n\n          <p>\n            폭이 무작위로 정해지는 세 개의 줄무의 띠들이 벽면 정중앙에서 교차하도록 했다.\n          </p>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nconst styles = {\n  art: css({\n    margin: '40px 0',\n    textAlign: 'center',\n  }),\n  labelWrapper: css({\n    display: 'flex',\n    justifyContent: 'center',\n  }),\n  label: css({\n    marginBottom: '30px',\n  }),\n  artist: css({\n    margin: 0,\n    padding: 0,\n    fontWeight: 'bold',\n    textDecoration: 'underline',\n  }),\n  artwork: css({\n    margin: 0,\n    padding: 0,\n  }),\n  medium: css({\n    margin: 0,\n    padding: 0,\n  }),\n  italic: css({\n    fontStyle: 'italic',\n  }),\n  paragraph: css({\n\n  }),\n  instruction: css({\n  }),\n  instructionContent: css({\n    paddingLeft: '20px',\n    borderLeft: 'solid 7px #f1f3f5',\n    fontFamily: 'monospace',\n    fontSize: '1.1em',\n  }),\n  code: css({\n  })\n}\n\nexport default Sol16\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/** @jsx jsx */\nimport React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { jsx, css } from '@emotion/core';\n\nimport Header from './header';\nimport Footer from './footer';\n\nimport 'sanitize.css'\nimport '../styles/typography.css'\n\nexport default ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div css={__Container}>\n        <Header title={data.site.siteMetadata.title} />\n\n        <main css={__Main}>\n          {children}\n        </main>\n\n        <Footer />\n      </div>\n    )}\n  />\n)\n\nconst __Container = css({\n  display: 'flex',\n  minHeight: '100vh',\n  flexDirection: 'column',\n  margin: '0 auto',\n})\n\nconst __Main = css({\n  flex: 1,\n  margin: '0 auto',\n  padding: '0 1em',\n  width: '100%',\n  maxWidth: '960px',\n})\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { css } from 'glamor'\n\nexport default ({ title, children }) => (\n  <header className={__Header}>\n    <h1 className={__Header_heading}>\n      <Link className={__Header_link} to=\"/\">\n        {title}\n      </Link>\n    </h1>\n\n    {children}\n  </header>\n)\n\nconst __Header = css({\n  position: 'relative',\n  zIndex: 9,\n  margin: '1em auto',\n  padding: '0 1em',\n  width: '100%',\n  maxWidth: '960px',\n})\nconst __Header_heading = css({\n  fontFamily: 'Georgia',\n  fontWeight: 400,\n  fontStyle: 'italic',\n  fontSize: '27px',\n})\nconst __Header_link = css({\n  display: 'block',\n  margin: '0.8em 0 1.424em 0',\n  color: 'black',\n  textDecoration: 'none',\n})\n","import React from 'react'\nimport { css } from 'glamor'\n\nexport default () => (\n  <footer className={__Footer}>\n    <p>\n      <small>\n        <a className={__Footer_emailLink} href=\"mailto:kimdhoe1@gmail.com\">\n          kimdhoe1@gmail.com\n        </a>\n      </small>\n    </p>\n  </footer>\n)\n\nconst __Footer =  css({\n  marginTop: '4em',\n  textAlign: 'center',\n})\n\nconst __Footer_emailLink = css({\n  letterSpacing: '0.7px',\n  fontFamily: 'Georgia',\n  fontStyle: 'italic',\n  textDecoration: 'none',\n  color: '#777',\n})\n"],"sourceRoot":""}