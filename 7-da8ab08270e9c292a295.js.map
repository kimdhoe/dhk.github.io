{"version":3,"sources":["webpack:///./node_modules/gatsby-link/index.js","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack:///./node_modules/defined/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./node_modules/core-js/modules/es6.array.is-array.js","webpack:///./node_modules/core-js/modules/es6.array.sort.js","webpack:///./node_modules/canvas-sketch/dist/canvas-sketch.umd.js","webpack:///./node_modules/convert-length/convert-length.js","webpack:///./node_modules/canvas-sketch-util/random.js","webpack:///./node_modules/seed-random/index.js","webpack:///./node_modules/simplex-noise/simplex-noise.js","webpack:///./node_modules/canvas-sketch-util/math.js"],"names":["_interopRequireDefault","__webpack_require__","exports","__esModule","withPrefix","navigateTo","replace","push","navigate","default","_objectWithoutPropertiesLoose2","_extends2","_inheritsLoose2","_assertThisInitialized2","_defineProperty2","_propTypes","_react","_router","_gatsby","path","normalizePath","NavLinkPropTypes","activeClassName","string","activeStyle","object","GatsbyLink","_React$Component","props","_this","call","this","_ref","isCurrent","className","filter","Boolean","join","style","IOSupported","window","IntersectionObserver","state","handleRef","bind","_proto","prototype","componentDidUpdate","prevProps","prevState","to","___loader","enqueue","parsePath","pathname","componentDidMount","ref","el","cb","io","_this2","innerRef","entries","forEach","entry","target","isIntersecting","intersectionRatio","unobserve","disconnect","observe","render","_this3","_this$props","_this$props$getProps","getProps","defaultGetProps","_onClick","onClick","_onMouseEnter","onMouseEnter","rest","prefixedTo","createElement","Link","e","hovering","button","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","preventDefault","Component","propTypes","func","isRequired","bool","_default","options","___navigate","console","warn","___push","___replace","module","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","arguments","undefined","g","Function","eval","$export","P","fill","toObject","toAbsoluteIndex","toLength","value","O","aLen","index","end","endPos","S","isArray","aFunction","fails","$sort","sort","test","F","comparefn","global","factory","convertLength","hasOwnProperty","defined","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","objectAssign","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","n","test3","split","letter","err","shouldUseNative","from","symbols","val","TypeError","s","commonjsGlobal","self","createCommonjsModule","fn","browser","performance","now","Date","isPromise_1","obj","then","isDom","Node","nodeType","nodeName","getClientAPI","isBrowser","document","cache","shim","is_arguments","supportsArgumentsClass","toString","supported","unsupported","deepEqual_1","pSlice","Array","slice","deepEqual","actual","expected","opts","getTime","strict","a","b","isUndefinedOrNull","isBuffer","ka","kb","objEquiv","x","copy","dateformat","token","timezone","timezoneClip","dateFormat","date","mask","utc","gmt","toLowerCase","isNaN","maskSlice","masks","_","d","D","m","y","H","M","L","o","getTimezoneOffset","W","targetThursday","getFullYear","getMonth","getDate","setDate","getDay","firstThursday","ds","setHours","getHours","weekDiff","Math","floor","getWeek","N","dow","getDayOfWeek","flags","dd","pad","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","round","t","timeNames","tt","T","TT","Z","match","pop","abs","len","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","expiresHeaderFormat","res","repeatString","str","num","max","substr","link","padLeft","ch","noop","supportedEncodings","saveDataURL","dataURL","Promise","resolve","splitIndex","base64","byteString","atob","mimeMatch","exec","mime","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","Blob","type","createBlobFromDataURL","blob","saveBlob","filename","opt","file","frame","extension","totalFrames","layerStr","isFinite","totalLayers","layer","defaultFileName","timeStamp","prefix","name","hash","suffix","resolveFilename","client","output","ev","visibility","download","href","URL","createObjectURL","body","appendChild","onclick","setTimeout","revokeObjectURL","removeChild","removeAttribute","click","commonTypos","dimension","animated","animating","unit","P5","pixellated","looping","pixelPerInch","allKeys","checkSettings","settings","includes","paperSizes","reduce","dict","preset","item","units","dimensions","convertDistance","unitsFrom","unitsTo","pixelsPerInch","precision","roundPixel","resizeCanvas","width","height","styleWidth","styleHeight","canvasWidth","canvasHeight","hasDimensions","checkIfHasDimensions","exporting","scaleToFit","scaleToView","pixelRatio","exportPixelRatio","bleed","devicePixelRatio","basePixelRatio","maxPixelRatio","min","trimWidth","trimHeight","element","parent","innerWidth","innerHeight","getBoundingClientRect","getParentSize","parentWidth","parentHeight","result","Error","getDimensionsFromPreset","highest","lowest","orientation","landscape","realWidth","realHeight","aspect","windowAspect","scaleToFitPadding","maxWidth","maxHeight","scaleX","scaleY","viewportWidth","viewportHeight","getCanvasContext_1","canvas","gl","attribs","names","getContext","createCanvas","context","ownsCanvas","newCanvas","createCanvasElement","attributes","pixelated","imageSmoothingEnabled","mozImageSmoothingEnabled","oImageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","SketchManager","this$1","_settings","_props","_sketch","_raf","_lastRedrawResult","_isP5Resizing","_keyboardShortcuts","handler","enabled","keyCode","togglePlay","commit","save","attach","addEventListener","detach","removeEventListener","keyboardShortcuts","hotkeys","recording","endRecord","run","record","exportFrame","playing","pause","play","_animateHandler","animate","_resizeHandler","resize","prototypeAccessors","sketch","configurable","get","_computePlayhead","currentTime","duration","_computeFrame","playhead","time","fps","_computeCurrentFrame","_getSizeProps","dispose","started","_signalBegin","tick","cancelAnimationFrame","_lastTime","requestAnimationFrame","error","stop","deltaTime","frameInterval","sequence","log","_signalEnd","begin","_wrapContextScale","all","preExport","exportOpts","encoding","encodingQuality","p","commitOpts","_doExportFrame","drawResult","concat","hasDataObject","data","toDataURL","exportCanvas","layerList","curOpt","parts","saveFile","eventWithOutput","find","outputName","isClient","some","ofSeq","postExport","_preRender","_postRender","p5","scale","scaleContext","restore","flush","redraw","submitDrawCall","update","notYetSupported","oldCanvas","oldContext","timeOpts","timeProps","getTimeProps","_setupGLKey","_appendCanvasIfNeeded","draw","oldSizes","newProps","pixelDensity","styleCanvas","newSizes","changed","_sizeChanged","frameIntervalMS","deltaTimeMS","hasDuration","isNewFrame","playbackRate","newTime","timeScale","isFinished","isLoopStart","loop","lastFrame","dispatch","mount","unmount","parentElement","ctx","clear","clearColor","bufferData","hasTotalFrames","totalFramesFromDuration","durationFromTotalFrames","Infinity","startTime","startFrame","hasStartTime","hasStartFrame","setup","loadAndRun","canvasSketch","newSettings","load","unload","destroy","createSketch","preload","P5Constructor","p5Sketch","isGL","renderer","WEBGL","P2D","noLoop","setAttributes","_renderer","drawingContext","loader","catch","message","defineProperties","CACHE","runtimeCollisions","hotID","isHot","hot","id","isInjecting","previousData","cacheGet","next","oldManager","manager","PaperSizes","conversions","system","factor","cm","pt","pc","in","ft","anchors","metric","ratio","imperial","fromUnit","toUnit","toFactor","fromFactor","isToPixel","fromUnitData","toUnitData","anchor","decimals","Number","seedRandom","SimplexNoise","createRandom","defaultSeed","currentSeed","currentRandom","noiseGenerator","defaultRandom","random","_nextGaussian","_hasNextGaussian","setSeed","getSeed","getRandomSeed","valueNonZero","u","permuteNoise","createNoise","noise1D","frequency","amplitude","noise2D","noise3D","z","noise4D","w","sign","boolean","chance","range","rangeFloor","pick","array","shuffle","arr","rand","tmp","ret","onCircle","insideCircle","radius","out","r","sqrt","onSphere","PI","v","phi","theta","acos","sin","cos","insideSphere","k","cbrt","quaternion","u1","u2","u3","sq1","sq2","theta1","theta2","weighted","weightedSet","set","weightedSetIndex","gaussian","mean","standardDerivation","v1","v2","multiplier","seed","weight","weights","totalWeight","pool","GLOBAL","startdenom","pow","significance","overflow","oldRandom","ARC4","keylen","me","j","count","mixkey","smear","stringseed","tostring","apply","arc4","flatten","depth","prop","typ","entropy","crypto","getRandomValues","navigator","plugins","screen","autoseed","resetGlobal","__WEBPACK_AMD_DEFINE_RESULT__","F2","G2","G3","F4","G4","randomOrSeed","s0","s1","s2","c","mash","alea","buildPermutationTable","perm","permMod12","aux","grad3","Float32Array","grad4","xin","yin","i1","j1","n0","n1","n2","x0","y0","x1","y1","x2","y2","ii","jj","t0","gi0","t1","gi1","t2","gi2","zin","n3","k1","i2","j2","k2","z0","z1","z2","x3","y3","z3","kk","t3","gi3","n4","l1","l2","i3","j3","k3","l3","w0","rankx","ranky","rankz","rankw","w1","w2","w3","x4","y4","z4","w4","ll","t4","gi4","_buildPermutationTable","EPSILON","clamp","lerp","inverseLerp","toFinite","defaultValue","expandVector","dims","scalar","lerpArray","newArray","initialValue","mod","damp","lambda","dt","exp","fract","degToRad","radToDeg","wrap","cycle","pingPong","linspace","endpoint","offset","lerpFrames","values","whole","nextFrame","clamp01","smoothstep","dampArray","mapRange","inputMin","inputMax","outputMin","outputMax","outVal","expand2D","expand3D","expand4D"],"mappings":"0FAEA,IAAAA,EAA6BC,EAAQ,IAErCC,EAAAC,YAAA,EACAD,EAAAE,aACAF,EAAAG,WAAAH,EAAAI,QAAAJ,EAAAK,KAAAL,EAAAM,SAAAN,EAAAO,aAAA,EAEA,IAAAC,EAAAV,EAA4DC,EAAQ,MAEpEU,EAAAX,EAAuCC,EAAQ,KAE/CW,EAAAZ,EAA6CC,EAAQ,IAErDY,EAAAb,EAAqDC,EAAQ,KAE7Da,EAAAd,EAA8CC,EAAQ,KAEtDc,EAAAf,EAAwCC,EAAQ,IAEhDe,EAAAhB,EAAoCC,EAAQ,IAE5CgB,EAAchB,EAAQ,IAEtBiB,EAAcjB,EAAQ,KAGtB,SAAAG,EAAAe,GACA,OAGA,SAAAA,GACA,OAAAA,EAAAb,QAAA,YAJAc,CAAsC,IAAAD,GAOtC,IAAAE,EAAA,CACAC,gBAAAP,EAAAN,QAAAc,OACAC,YAAAT,EAAAN,QAAAgB,QAsBAC,EAEA,SAAAC,GAGA,SAAAD,EAAAE,GACA,IAAAC,EAEAA,EAAAF,EAAAG,KAAAC,aAEA,EAAAjB,EAAAL,UAAA,EAAAI,EAAAJ,UAAA,EAAAI,EAAAJ,SAAAoB,IAAA,2BAAAG,GAGA,OAFAA,EAAAC,UAGA,CACAC,UAAA,CAAAL,EAAAD,MAAAM,UAAAL,EAAAD,MAAAN,iBAAAa,OAAAC,SAAAC,KAAA,KACAC,OAAA,EAAA3B,EAAAF,SAAA,GAA0CoB,EAAAD,MAAAU,MAAAT,EAAAD,MAAAJ,cAI1C,OAEA,IAAAe,GAAA,EAUA,MARA,oBAAAC,eAAAC,uBACAF,GAAA,GAGAV,EAAAa,MAAA,CACAH,eAEAV,EAAAc,UAAAd,EAAAc,UAAAC,MAAA,EAAA/B,EAAAJ,UAAA,EAAAI,EAAAJ,SAAAoB,KACAA,GA7BA,EAAAjB,EAAAH,SAAAiB,EAAAC,GAgCA,IAAAkB,EAAAnB,EAAAoB,UAgFA,OA9EAD,EAAAE,mBAAA,SAAAC,EAAAC,GAEAlB,KAAAH,MAAAsB,KAAAF,EAAAE,IAAAnB,KAAAW,MAAAH,aACAY,UAAAC,SAAA,EAAAlC,EAAAmC,WAAAtB,KAAAH,MAAAsB,IAAAI,WAIAT,EAAAU,kBAAA,WAEAxB,KAAAW,MAAAH,aACAY,UAAAC,SAAA,EAAAlC,EAAAmC,WAAAtB,KAAAH,MAAAsB,IAAAI,WAIAT,EAAAF,UAAA,SAAAa,GACA,IAtEAC,EAAAC,EACAC,EAqEAC,EAAA7B,KAEAA,KAAAH,MAAAiC,UAAA9B,KAAAH,MAAAiC,SAAAL,GAEAzB,KAAAW,MAAAH,aAAAiB,IA1EAC,EA4EAD,EA5EAE,EA4EA,WACAP,UAAAC,SAAA,EAAAlC,EAAAmC,WAAAO,EAAAhC,MAAAsB,IAAAI,YA5EAK,EAAA,IAAAnB,OAAAC,qBAAA,SAAAqB,GACAA,EAAAC,QAAA,SAAAC,GACAP,IAAAO,EAAAC,SAGAD,EAAAE,gBAAAF,EAAAG,kBAAA,KACAR,EAAAS,UAAAX,GACAE,EAAAU,aACAX,UAMAY,QAAAb,KAmEAZ,EAAA0B,OAAA,WACA,IAAAC,EAAAzC,KAEA0C,EAAA1C,KAAAH,MACAsB,EAAAuB,EAAAvB,GACAwB,EAAAD,EAAAE,SACAA,OAAA,IAAAD,EAAA3C,KAAA6C,gBAAAF,EACAG,EAAAJ,EAAAK,QACAC,EAAAN,EAAAO,aAKAtC,GAJA+B,EAAAnD,gBACAmD,EAAAjD,YACAiD,EAAAjB,IACAiB,EAAAZ,SACAY,EAAA/B,OACApC,EAAAmE,EAAAnE,QACA2E,GAAA,EAAAvE,EAAAD,SAAAgE,EAAA,+GACAS,EAAA9E,EAAA8C,GACA,OAAAlC,EAAAP,QAAA0E,cAAAlE,EAAAmE,MAAA,EAAAzE,EAAAF,SAAA,CACAyC,GAAAgC,EACAxC,QACAiC,WACAd,SAAA9B,KAAAY,UACAqC,aAAA,SAAAK,GAEAN,KAAAM,GAEAlC,UAAAmC,UAAA,EAAApE,EAAAmC,WAAAH,GAAAI,WAEAwB,QAAA,SAAAO,GAkBA,OAhBAR,KAAAQ,GAEA,IAAAA,EAAAE,QACAf,EAAA5C,MAAAqC,QACAoB,EAAAG,kBACAH,EAAAI,SACAJ,EAAAK,QAAAL,EAAAM,SAAAN,EAAAO,WACAP,EAAAQ,iBAGArF,EAAA0C,EAAA,CACAR,QACApC,cAIA,IAEK2E,KAGLvD,EAjHA,CAkHCV,EAAAP,QAAAqF,WAEDpE,EAAAqE,WAAA,EAAApF,EAAAF,SAAA,GAAgDY,EAAA,CAChDwC,SAAA9C,EAAAN,QAAAuF,KACAlB,QAAA/D,EAAAN,QAAAuF,KACA9C,GAAAnC,EAAAN,QAAAc,OAAA0E,WACA3F,QAAAS,EAAAN,QAAAyF,OAEA,IAAAC,EAAAzE,EACAxB,EAAAO,QAAA0F,EAEA,IAAA3F,EAAA,SAAA0C,EAAAkD,GACA5D,OAAA6D,YAAAjG,EAAA8C,GAAAkD,IAGAlG,EAAAM,WAEA,IAAAD,EAAA,SAAA2C,GACAoD,QAAAC,KAAA,wGAEA/D,OAAAgE,QAAApG,EAAA8C,KAGAhD,EAAAK,OASAL,EAAAI,QAPA,SAAA4C,GACAoD,QAAAC,KAAA,2GAEA/D,OAAAiE,WAAArG,EAAA8C,KAWAhD,EAAAG,WALA,SAAA6C,GAEA,OADAoD,QAAAC,KAAA,8GACAhG,EAAA2C,uBCpMAwD,EAAAxG,QAfA,SAAAyG,EAAAC,GACA,SAAAD,EAAA,SACA,IAEAE,EAAAC,EAFA7C,EAAA,GACA8C,EAAAC,OAAAC,KAAAN,GAGA,IAAAG,EAAA,EAAaA,EAAAC,EAAAG,OAAuBJ,IACpCD,EAAAE,EAAAD,GACAF,EAAAO,QAAAN,IAAA,IACA5C,EAAA4C,GAAAF,EAAAE,IAGA,OAAA5C,4CCZAyC,EAAAxG,QAAA,WACA,QAAA4G,EAAA,EAAmBA,EAAAM,UAAAF,OAAsBJ,IACzC,QAAAO,IAAAD,UAAAN,GAAA,OAAAM,UAAAN,uBCFA,IAAAQ,EAGAA,EAAA,WACA,OAAAvF,KADA,GAIA,IAEAuF,KAAAC,SAAA,cAAAA,KAAA,EAAAC,MAAA,QACC,MAAAnC,GAED,iBAAA7C,SAAA8E,EAAA9E,QAOAkE,EAAAxG,QAAAoH,uBClBA,IAAAG,EAAcxH,EAAQ,GAEtBwH,IAAAC,EAAA,SAA6BC,KAAO1H,EAAQ,OAE5CA,EAAQ,GAARA,CAA+B,0CCH/B,IAAA2H,EAAe3H,EAAQ,IACvB4H,EAAsB5H,EAAQ,IAC9B6H,EAAe7H,EAAQ,IACvByG,EAAAxG,QAAA,SAAA6H,GAOA,IANA,IAAAC,EAAAJ,EAAA7F,MACAmF,EAAAY,EAAAE,EAAAd,QACAe,EAAAb,UAAAF,OACAgB,EAAAL,EAAAI,EAAA,EAAAb,UAAA,QAAAC,EAAAH,GACAiB,EAAAF,EAAA,EAAAb,UAAA,QAAAC,EACAe,OAAAf,IAAAc,EAAAjB,EAAAW,EAAAM,EAAAjB,GACAkB,EAAAF,GAAAF,EAAAE,KAAAH,EACA,OAAAC,wBCZA,IAAAP,EAAcxH,EAAQ,GAEtBwH,IAAAY,EAAA,SAA6BC,QAAUrI,EAAQ,wCCF/C,IAAAwH,EAAcxH,EAAQ,GACtBsI,EAAgBtI,EAAQ,IACxB2H,EAAe3H,EAAQ,IACvBuI,EAAYvI,EAAQ,IACpBwI,EAAA,GAAAC,KACAC,EAAA,QAEAlB,IAAAC,EAAAD,EAAAmB,GAAAJ,EAAA,WAEAG,EAAAD,UAAArB,OACCmB,EAAA,WAEDG,EAAAD,KAAA,UAEOzI,EAAQ,GAARA,CAA0BwI,IAAA,SAEjCC,KAAA,SAAAG,GACA,YAAAxB,IAAAwB,EACAJ,EAAA3G,KAAA8F,EAAA7F,OACA0G,EAAA3G,KAAA8F,EAAA7F,MAAAwG,EAAAM,6BCpBA,SAAAC,GAAA,IAAAC,IAIC,SAAAC,GAEDA,OAAAC,eAAA,WAAAD,EAAA,QAAAA,EAEA,IAAAE,EAAA,WACA,QAAApC,EAAA,EAAuBA,EAAAM,UAAAF,OAAsBJ,IAC7C,QAAAO,IAAAD,UAAAN,GAAA,OAAAM,UAAAN,IAUAqC,EAAAnC,OAAAmC,sBACAF,EAAAjC,OAAAlE,UAAAmG,eACAG,EAAApC,OAAAlE,UAAAuG,qBAsDA,IAAAC,EA5CA,WACA,IACA,IAAAtC,OAAAuC,OACA,SAMA,IAAAC,EAAA,IAAAC,OAAA,OAEA,GADAD,EAAA,QACA,MAAAxC,OAAA0C,oBAAAF,GAAA,GACA,SAKA,IADA,IAAAG,EAAA,GACA7C,EAAA,EAAqBA,EAAA,GAAQA,IAC7B6C,EAAA,IAAAF,OAAAG,aAAA9C,MAKA,kBAHAE,OAAA0C,oBAAAC,GAAAE,IAAA,SAAAC,GACA,OAAAH,EAAAG,KAEAzH,KAAA,IACA,SAIA,IAAA0H,EAAA,GAIA,MAHA,uBAAAC,MAAA,IAAAjG,QAAA,SAAAkG,GACAF,EAAAE,OAGA,yBADAjD,OAAAC,KAAAD,OAAAuC,OAAA,GAAsCQ,IAAA1H,KAAA,IAMhC,MAAA6H,GAEN,UAIAC,GAAAnD,OAAAuC,OAAA,SAAAtF,EAAA0C,GAKA,IAJA,IAAAyD,EAEAC,EADAnH,EAtDA,SAAAoH,GACA,GAAAA,QACA,UAAAC,UAAA,yDAGA,OAAAvD,OAAAsD,GAiDA1C,CAAA3D,GAGAuG,EAAA,EAAoBA,EAAApD,UAAAF,OAAsBsD,IAAA,CAG1C,QAAA3D,KAFAuD,EAAApD,OAAAI,UAAAoD,IAGAvB,EAAAnH,KAAAsI,EAAAvD,KACA3D,EAAA2D,GAAAuD,EAAAvD,IAIA,GAAAsC,EAAA,CACAkB,EAAAlB,EAAAiB,GACA,QAAAtD,EAAA,EAAsBA,EAAAuD,EAAAnD,OAAoBJ,IAC1CsC,EAAAtH,KAAAsI,EAAAC,EAAAvD,MACA5D,EAAAmH,EAAAvD,IAAAsD,EAAAC,EAAAvD,MAMA,OAAA5D,GAGAuH,EAAA,oBAAAjI,mBAAA,IAAAsG,IAAA,oBAAA4B,UAAA,GAEA,SAAAC,EAAAC,EAAAlE,GACA,OAAoCkE,EAApClE,EAAA,CAAsBxG,QAAA,IAAcwG,EAAAxG,SAAAwG,EAAAxG,QAGpC,IAAA2K,EACAJ,EAAAK,aACAL,EAAAK,YAAAC,IAAA,WACA,OAAAD,YAAAC,OACOC,KAAAD,KAAA,WACP,WAAAC,MAGAC,EAEA,SAAAC,GACA,QAAAA,IAAA,iBAAAA,GAAA,mBAAAA,IAAA,mBAAAA,EAAAC,MAGA,IAAAC,EAEA,SAAAd,GACA,SAAAA,GAAA,iBAAAA,KAEA,iBAAA9H,QAAA,iBAAAA,OAAA6I,KACAf,aAAA9H,OAAA6I,KACA,iBAAAf,EAAAgB,UACA,iBAAAhB,EAAAiB,WAGA,SAAAC,IACA,0BAAAhJ,eAAA,qBAGA,SAAAiJ,IACA,0BAAAC,SAWA,IAqXAC,EArXA1E,EAAA0D,EAAA,SAAAjE,EAAAxG,GAKA,SAAA0L,EAAAV,GACA,IAAAjE,EAAA,GACA,QAAAJ,KAAAqE,EAAAjE,EAAA1G,KAAAsG,GACA,OAAAI,GAPAP,EAAAxG,QAAA,mBAAA8G,OAAAC,KACAD,OAAAC,KAAA2E,GAEAA,SASAC,GAFA5E,EAAA2E,KAEAjB,EAAA,SAAAjE,EAAAxG,GACA,IAAA4L,EAEK,sBAFL,WACA,OAAA9E,OAAAlE,UAAAiJ,SAAAjK,KAAAsF,WADA,GAOA,SAAA4E,EAAAvK,GACA,4BAAAuF,OAAAlE,UAAAiJ,SAAAjK,KAAAL,GAGA,SAAAwK,EAAAxK,GACA,OAAAA,GACA,iBAAAA,GACA,iBAAAA,EAAAyF,QACAF,OAAAlE,UAAAmG,eAAAnH,KAAAL,EAAA,YACAuF,OAAAlE,UAAAuG,qBAAAvH,KAAAL,EAAA,YACA,GAbAvB,EAAAwG,EAAAxG,QAAA4L,EAAAE,EAAAC,GAEAD,YAIA9L,EAAA+L,iBAYAC,GAHAL,EAAAG,UACAH,EAAAI,YAEAtB,EAAA,SAAAjE,GACA,IAAAyF,EAAAC,MAAAtJ,UAAAuJ,MAIAC,EAAA5F,EAAAxG,QAAA,SAAAqM,EAAAC,EAAAC,GAGA,OAFAA,MAAA,IAEAF,IAAAC,IAGOD,aAAAvB,MAAAwB,aAAAxB,KACPuB,EAAAG,YAAAF,EAAAE,WAIOH,IAAAC,GAAA,iBAAAD,GAAA,iBAAAC,EACPC,EAAAE,OAAAJ,IAAAC,EAAAD,GAAAC,EA0BA,SAAAI,EAAAC,EAAAJ,GACA,IAAA3F,EAAAD,EACA,GAAAiG,EAAAF,IAAAE,EAAAD,GACA,SAEA,GAAAD,EAAA9J,YAAA+J,EAAA/J,UAAA,SAGA,GAAA+I,EAAAe,GACA,QAAAf,EAAAgB,KAGAD,EAAAT,EAAArK,KAAA8K,GACAC,EAAAV,EAAArK,KAAA+K,GACAP,EAAAM,EAAAC,EAAAJ,IAEA,GAAAM,EAAAH,GAAA,CACA,IAAAG,EAAAF,GACA,SAEA,GAAAD,EAAA1F,SAAA2F,EAAA3F,OAAA,SACA,IAAAJ,EAAA,EAAmBA,EAAA8F,EAAA1F,OAAcJ,IACjC,GAAA8F,EAAA9F,KAAA+F,EAAA/F,GAAA,SAEA,SAEA,IACA,IAAAkG,EAAA/F,EAAA2F,GACAK,EAAAhG,EAAA4F,GACO,MAAAxH,GACP,SAIA,GAAA2H,EAAA9F,QAAA+F,EAAA/F,OACA,SAKA,IAHA8F,EAAAtE,OACAuE,EAAAvE,OAEA5B,EAAAkG,EAAA9F,OAAA,EAA6BJ,GAAA,EAAQA,IACrC,GAAAkG,EAAAlG,IAAAmG,EAAAnG,GACA,SAIA,IAAAA,EAAAkG,EAAA9F,OAAA,EAA6BJ,GAAA,EAAQA,IAErC,GADAD,EAAAmG,EAAAlG,IACAwF,EAAAM,EAAA/F,GAAAgG,EAAAhG,GAAA4F,GAAA,SAEA,cAAAG,UAAAC,EAnEAK,CAAAX,EAAAC,EAAAC,KAIA,SAAAK,EAAA/E,GACA,OAAAA,QAGA,SAAAgF,EAAAI,GACA,SAAAA,GAAA,iBAAAA,GAAA,iBAAAA,EAAAjG,UACA,mBAAAiG,EAAAC,MAAA,mBAAAD,EAAAd,SAGAc,EAAAjG,OAAA,oBAAAiG,EAAA,SA0DAE,EAAA1C,EAAA,SAAAjE,EAAAxG,IAeA,SAAA4I,GAEA,IACAwE,EACAC,EACAC,EAHAC,GACAH,EAAA,mEACAC,EAAA,uIACAC,EAAA,cAGA,SAAAE,EAAAC,EAAAC,EAAAC,GAcA,GAXA,IAAAzG,UAAAF,QAAA,YA2KA,QADAoD,EA1KAoD,GA4KA,YAGArG,IAAAiD,EACA,YAGA,iBAAAA,SACAA,EAGA8B,MAAA9D,QAAAgC,GACA,QAGA,GAAeyB,SAAAjK,KAAAwI,GACf+B,MAAA,MAAAyB,gBA5LA,KAAAnF,KAAA+E,KACAC,EAAAD,EACAA,OAAArG,IAGAqG,KAAA,IAAA1C,gBAEAA,OACA0C,EAAA,IAAA1C,KAAA0C,IAGAK,MAAAL,GACA,MAAAnD,UAAA,gBA8JA,IAAAD,EAxJA0D,GAHAL,EAAAlE,OAAAgE,EAAAQ,MAAAN,OAAAF,EAAAQ,MAAA,UAGA5B,MAAA,KACA,SAAA2B,GAAA,SAAAA,IACAL,IAAAtB,MAAA,GACAuB,GAAA,EACA,SAAAI,IACAH,GAAA,IAIA,IAAAK,EAAAN,EAAA,eACAO,EAAAT,EAAAQ,EAAA,UACAE,EAAAV,EAAAQ,EAAA,SACAG,EAAAX,EAAAQ,EAAA,WACAI,EAAAZ,EAAAQ,EAAA,cACAK,EAAAb,EAAAQ,EAAA,WACAM,EAAAd,EAAAQ,EAAA,aACA1D,EAAAkD,EAAAQ,EAAA,aACAO,EAAAf,EAAAQ,EAAA,kBACAQ,EAAAd,EAAA,EAAAF,EAAAiB,oBACAC,EA2FA,SAAAlB,GAEA,IAAAmB,EAAA,IAAA7D,KAAA0C,EAAAoB,cAAApB,EAAAqB,WAAArB,EAAAsB,WAGAH,EAAAI,QAAAJ,EAAAG,WAAAH,EAAAK,SAAA,QAGA,IAAAC,EAAA,IAAAnE,KAAA6D,EAAAC,cAAA,KAGAK,EAAAF,QAAAE,EAAAH,WAAAG,EAAAD,SAAA,QAGA,IAAAE,EAAAP,EAAAF,oBAAAQ,EAAAR,oBACAE,EAAAQ,SAAAR,EAAAS,WAAAF,GAGA,IAAAG,GAAAV,EAAAM,GAAA,OACA,SAAAK,KAAAC,MAAAF,GA9GAG,CAAAhC,GACAiC,EAuHA,SAAAjC,GACA,IAAAkC,EAAAlC,EAAAwB,SAIA,OAHA,IAAAU,IACAA,EAAA,GAEAA,EA5HAC,CAAAnC,GACAoC,EAAA,CACA3B,IACA4B,GAAAC,EAAA7B,GACA8B,IAAAxC,EAAAyC,KAAAC,SAAA/B,GACAgC,KAAA3C,EAAAyC,KAAAC,SAAA/B,EAAA,GACAC,IAAA,EACAgC,GAAAL,EAAA3B,EAAA,GACAiC,IAAA7C,EAAAyC,KAAAK,WAAAlC,GACAmC,KAAA/C,EAAAyC,KAAAK,WAAAlC,EAAA,IACAoC,GAAAhH,OAAA6E,GAAAjC,MAAA,GACAqE,KAAApC,EACAqC,EAAApC,EAAA,OACAqC,GAAAZ,EAAAzB,EAAA,QACAA,IACAsC,GAAAb,EAAAzB,GACAC,IACAsC,GAAAd,EAAAxB,GACAhE,IACAuG,GAAAf,EAAAxF,GACAwG,EAAAhB,EAAAvB,EAAA,GACAA,EAAAuB,EAAAR,KAAAyB,MAAAxC,EAAA,KACAyC,EAAA3C,EAAA,GAAAd,EAAAyC,KAAAiB,UAAA,GAAA1D,EAAAyC,KAAAiB,UAAA,GACAC,GAAA7C,EAAA,GAAAd,EAAAyC,KAAAiB,UAAA,GAAA1D,EAAAyC,KAAAiB,UAAA,GACAE,EAAA9C,EAAA,GAAAd,EAAAyC,KAAAiB,UAAA,GAAA1D,EAAAyC,KAAAiB,UAAA,GACAG,GAAA/C,EAAA,GAAAd,EAAAyC,KAAAiB,UAAA,GAAA1D,EAAAyC,KAAAiB,UAAA,GACAI,EAAA1D,EAAA,MAAAD,EAAA,OAAAnE,OAAAiE,GAAA8D,MAAAjE,IAAA,MAAAkE,MAAAnR,QAAAkN,EAAA,IACAkB,KAAA,WAAAsB,EAAA,IAAAR,KAAAC,MAAAD,KAAAkC,IAAAhD,GAAA,IAAAc,KAAAkC,IAAAhD,GAAA,MACArG,EAAA,sBAAA8F,EAAA,QAAAA,EAAA,IAAAA,EAAA,QAAAA,EAAA,IACAS,IACAe,KAGA,OAAAhC,EAAArN,QAAAgN,EAAA,SAAAkE,GACA,OAAAA,KAAA1B,EACAA,EAAA0B,GAEAA,EAAAnF,MAAA,EAAAmF,EAAAtK,OAAA,OAoCA,SAAA8I,EAAA1F,EAAAqH,GAGA,IAFArH,EAAAb,OAAAa,GACAqH,KAAA,EACArH,EAAApD,OAAAyK,GACArH,EAAA,IAAAA,EAEA,OAAAA,EArCAmD,EAAAQ,MAAA,CACAxN,QAAA,2BACAmR,UAAA,SACAC,WAAA,cACAC,SAAA,eACAC,SAAA,qBACAC,UAAA,UACAC,WAAA,aACAC,SAAA,eACAC,QAAA,aACAC,QAAA,WACAC,YAAA,yBACAC,eAAA,+BACAC,oBAAA,+BAIA9E,EAAAyC,KAAA,CACAC,SAAA,CACA,0CACA,wEAEAI,WAAA,CACA,wEACA,+GAEAY,UAAA,CACA,sCA0FAzK,EAAAxG,QAAAuN,EAhNA,KAgOA+E,EAAA,GAOAC,EAoBA,SAAAC,EAAAC,GACA,oBAAAD,EACA,UAAAnI,UAAA,qBAIA,OAAAoI,EAAA,OAAAD,EACA,OAAAC,EAAA,OAAAD,IAEA,IAAAE,EAAAF,EAAAxL,OAAAyL,EACA,GAAAhH,IAAA+G,QAAA,IAAA/G,EACAA,EAAA+G,EACAF,EAAA,QACO,GAAAA,EAAAtL,QAAA0L,EACP,OAAAJ,EAAAK,OAAA,EAAAD,GAGA,KAAAA,EAAAJ,EAAAtL,QAAAyL,EAAA,GACA,EAAAA,IACAH,GAAAE,GAGAC,IAAA,EACAD,KAKA,OADAF,GADAA,GAAAE,GACAG,OAAA,EAAAD,IAIA,IAmBAE,EAnBAC,EAAA,SAAAL,EAAAC,EAAAK,GAGA,OAFAN,IAAA3G,gBAEA,IAAA4G,EACAD,GAIAM,EADA,IAAAA,EACA,IACOA,EACPA,EAAAjH,WAEA,IAGA0G,EAAAO,EAAAL,EAAAD,EAAAxL,QAAAwL,IAGAO,EAAA,aAEAC,EAAA,wCAuCA,SAAAC,EAAAC,EAAA3G,GAGA,YAFA,IAAAA,MAAA,IAvBA,SAAA2G,GACA,WAAAC,QAAA,SAAAC,GACA,IAAAC,EAAAH,EAAAjM,QAAA,KACA,QAAAoM,EAAA,CAUA,IANA,IAAAC,EAAAJ,EAAA/G,MAAAkH,EAAA,GACAE,EAAAjR,OAAAkR,KAAAF,GACAG,EAAA,gBAA0CC,KAAAR,GAC1CS,GAAAF,IAAA,aAAAtM,EACAyM,EAAA,IAAAC,YAAAN,EAAAvM,QACA8M,EAAA,IAAAC,WAAAH,GACAhN,EAAA,EAA2BA,EAAA2M,EAAAvM,OAAsBJ,IACjDkN,EAAAlN,GAAA2M,EAAAS,WAAApN,GAEAwM,EAAA,IAAA9Q,OAAA2R,KAAA,CAAAL,GAAA,CACAM,KAAAP,UAbAP,EAAA,IAAA9Q,OAAA2R,QAqBAE,CAAAjB,GAAAjI,KAAA,SAAAmJ,GAAoE,OAAAC,EAAAD,EAAA7H,KAGpE,SAAA8H,EAAAD,EAAA7H,GAGA,YAFA,IAAAA,MAAA,IAEA,IAAA4G,QAAA,SAAAC,GAMA,IAAAkB,EA+CA,SAAAC,QACA,IAAAA,MAAA,IAGA,sBADAA,EAAAnL,EAAA,GAA6BmL,IAC7BC,KACA,OAAAD,EAAAC,KAAAD,GACS,GAAAA,EAAAC,KACT,OAAAD,EAAAC,KAEA,IAAAC,EAAA,KACAC,EAAA,GACA,iBAAAH,EAAAG,YACaA,EAAAH,EAAAG,WACb,oBAAAH,EAAAE,MAAA,CACA,IAAAE,EAEAA,EADA,iBAAAJ,EAAAI,YACAJ,EAAAI,YAEArF,KAAAoD,IAAA,IAAA6B,EAAAE,OAEAA,EAAA5B,EAAAtJ,OAAAgL,EAAAE,OAAAlL,OAAAoL,GAAA3N,OAAA,KAEA,IAAA4N,EAAAC,SAAAN,EAAAO,cAAAD,SAAAN,EAAAQ,QAAAR,EAAAO,YAAA,KAAAP,EAAA,SACA,SAAAE,EACA,OAAAG,EAAAH,GAAAxS,OAAAC,SAAAC,KAAA,KAAAuS,EAEA,IAAAM,EAAAT,EAAAU,UACA,OAAAV,EAAAW,OAAAX,EAAAY,MAAAH,EAAAJ,EAAAL,EAAAa,KAAAb,EAAAc,QAAApT,OAAAC,SAAAC,KAAA,KAAAuS,EA1EAY,CALA/I,EAAAnD,EAAA,CACAsL,UAAA,GACAQ,OAAA,GACAG,OAAA,IACa9I,IAEbgJ,EAAAjK,IACA,GAAAiK,GAAA,mBAAAA,EAAAlB,UAAAkB,EAAAC,OACA,OAAAD,EAAAlB,SAAAD,EAAAhL,EAAA,GAA4DmD,EAAA,CAC5D+H,cACiBrJ,KAAA,SAAAwK,GAAuB,OAAArC,EAAAqC,KAExC7C,KACAA,EAAApH,SAAAvG,cAAA,MACA7C,MAAAsT,WAAA,SACA9C,EAAA7O,OAAA,UAEA6O,EAAA+C,SAAArB,EACA1B,EAAAgD,KAAAtT,OAAAuT,IAAAC,gBAAA1B,GACA5I,SAAAuK,KAAAC,YAAApD,GACAA,EAAAqD,QAAA,WACArD,EAAAqD,QAAAlD,EACAmD,WAAA,WACA5T,OAAAuT,IAAAM,gBAAA/B,GACA5I,SAAAuK,KAAAK,YAAAxD,GACAA,EAAAyD,gBAAA,QACAjD,EAAA,CACAkB,WACAiB,QAAA,OAIA3C,EAAA0D,UAmDA,IAAAC,EAAA,CACAC,UAAA,aACAC,SAAA,UACAC,UAAA,UACAC,KAAA,QACAC,GAAA,KACAC,WAAA,YACAC,QAAA,OACAC,aAAA,UAEAC,EAAA,iEACA,qFACA,6EACA,6EACA,8EACA,4EACAC,EAAA,SAAAC,GACApQ,OAAAC,KAAAmQ,GACArT,QAAA,SAAA8C,GACA,GAAAA,KAAA4P,EAAA,CACA,IAAAlK,EAAAkK,EAAA5P,GACAP,QAAAC,KAAA,oDAAAM,EAAA,oBAAA0F,EAAA,WACa2K,EAAAG,SAAAxQ,IACbP,QAAAC,KAAA,oDAAAM,EAAA,QAkCA,IAkBAyQ,EAjBA,sEACA,gFACA,mFACA,6EACA,6EACA,6EACA,+EACA,6EACA,6EACA,+EACA,gFACA,iFACA,iFACA,mEACA,uEACA,mFACA,2DACAC,OAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,CACAC,MAAAF,EAAA,IApBA,KAqBAG,WAAA,CAAAH,EAAA,GAAAA,EAAA,KAIA,OAFAD,EAAAC,EAAA,IAAAC,EACAF,EAAAC,EAAA,GAAAnX,QAAA,WAAAoX,EACAF,GACK,IAkBL,SAAAK,EAAAnB,EAAAoB,EAAAC,EAAAC,GAKA,YAJA,IAAAF,MAAA,WACA,IAAAC,MAAA,WACA,IAAAC,MAAA,IAEAhP,EAAA0N,EAAAoB,EAAAC,EAAA,CACAC,gBACAC,UAAA,EACAC,YAAA,IA6BA,SAAAC,EAAAvW,EAAAwV,GACA,IAAAgB,EAAAC,EACAC,EAAAC,EACAC,EAAAC,EACA5N,EAAAY,IACAmM,EAAAR,EAAAQ,WACAc,EA/BA,SAAAtB,GACA,SAAAA,EAAAQ,YAEA,iBAAAR,EAAAQ,cAEAxL,MAAA9D,QAAA8O,EAAAQ,aAAAR,EAAAQ,WAAA1Q,QAAA,IA0BAyR,CAAAvB,GACAwB,EAAAhX,EAAAgX,UACAC,IAAAH,IAAA,IAAAtB,EAAAyB,WACAC,KAAAF,GAAAF,IAAAtB,EAAA0B,YACAjO,IACagO,EAAAC,GAAA,GACb,IAKAC,EAAAC,EALArB,EAAAP,EAAAO,MACAK,EAAA,iBAAAZ,EAAAY,eAAAjD,SAAAqC,EAAAY,eAAAZ,EAAAY,cAAA,GACAiB,EAAA/P,EAAAkO,EAAA6B,MAAA,GACAC,EAAArO,EAAArI,OAAA0W,iBAAA,EACAC,EAAAL,EAAAI,EAAA,EAEA,iBAAA9B,EAAA2B,YAAAhE,SAAAqC,EAAA2B,aACAA,EAAA3B,EAAA2B,WACAC,EAAA9P,EAAAkO,EAAA4B,iBAAAD,IAEAL,GACAK,EAAAI,EACAH,EAAA9P,EAAAkO,EAAA4B,iBAAA,KAEAD,EAAAG,EACAF,EAAA9P,EAAAkO,EAAA4B,iBAAAD,IAGA,iBAAA3B,EAAAgC,eAAArE,SAAAqC,EAAAgC,iBACAL,EAAAvJ,KAAA6J,IAAAjC,EAAAgC,cAAAL,GACAC,EAAAxJ,KAAA6J,IAAAjC,EAAAgC,cAAAJ,IAEAJ,IACAG,EAAAC,GAEA,IAGAM,EAAAC,EAHA/V,EApDA,SAAA5B,EAAAwV,GACA,IAAA3L,IACA,gBAEA,IAAA+N,EAAApC,EAAAqC,QAAAjX,OACA,GAAAgX,IAAAhX,QAAAgX,IAAA9N,UAAA8N,IAAA9N,SAAAuK,KACA,OAAAzT,OAAAkX,WAAAlX,OAAAmX,aAEA,IAAAnW,EAAAgW,EAAAI,wBAGA,OAFApW,EAAA4U,MACA5U,EAAA6U,QA0CAwB,CAAAjY,EAAAwV,GACA0C,EAAAtW,EAAA,GACAuW,EAAAvW,EAAA,GAEA,GAAAkV,EAAA,CACA,IAAAsB,EA/FA,SAAApC,EAAAG,EAAAC,GAIA,QAHA,IAAAD,MAAA,WACA,IAAAC,MAAA,IAEA,iBAAAJ,EAAA,CACA,IAAA/Q,EAAA+Q,EAAA9J,cACA,KAAAjH,KAAAyQ,GACA,UAAA2C,MAAA,yBAAArC,EAAA,sFAEA,IAAAH,EAAAH,EAAAzQ,GACA,OAAA4Q,EAAAG,WAAA/N,IAAA,SAAAsE,GAAuD,OAAA0J,EAAA1J,EAAAsJ,EAAAE,MAAAI,EAAAC,KAEvD,OAAAJ,EAmFAsC,CAAAtC,EAAAD,EAAAK,GACAmC,EAAA3K,KAAAoD,IAAAoH,EAAA,GAAAA,EAAA,IACAI,EAAA5K,KAAA6J,IAAAW,EAAA,GAAAA,EAAA,IACA,GAAA5C,EAAAiD,YAAA,CACA,IAAAC,EAAA,cAAAlD,EAAAiD,YACAjC,EAAAkC,EAAAH,EAAAC,EACA/B,EAAAiC,EAAAF,EAAAD,OAEA/B,EAAA4B,EAAA,GACA3B,EAAA2B,EAAA,GAEAV,EAAAlB,EACAmB,EAAAlB,EACAD,GAAA,EAAAa,EACAZ,GAAA,EAAAY,OAIAK,EAFAlB,EAAA0B,EAGAP,EAFAlB,EAAA0B,EAIA,IAAAQ,EAAAnC,EACAoC,EAAAnC,EAOA,GANAK,GAAAf,IACA4C,EAAA1C,EAAAO,EAAAT,EAAA,KAAAK,GACAwC,EAAA3C,EAAAQ,EAAAV,EAAA,KAAAK,IAEAM,EAAA9I,KAAAyB,MAAAsJ,GACAhC,EAAA/I,KAAAyB,MAAAuJ,GACA3B,IAAAD,GAAAF,EAAA,CACA,IAAA+B,EAAArC,EAAAC,EACAqC,EAAAZ,EAAAC,EACAY,EAAAzR,EAAAkO,EAAAuD,kBAAA,IACAC,EAAApL,KAAAyB,MAAA6I,EAAA,EAAAa,GACAE,EAAArL,KAAAyB,MAAA8I,EAAA,EAAAY,IACArC,EAAAsC,GAAArC,EAAAsC,KACAH,EAAAD,GACAlC,EAAAsC,EACAvC,EAAA9I,KAAAyB,MAAAsH,EAAAkC,KAEAnC,EAAAsC,EACArC,EAAA/I,KAAAyB,MAAAqH,EAAAmC,KAUA,OACAxB,QACAF,aACAX,QACAC,SACAT,WAAA,CAAAQ,EAAAC,GACAV,SAAA,KACAmD,QAbAtC,EAAAM,EAAAtJ,KAAAyB,MAAA8H,EAAAT,GAAA9I,KAAAyB,MAAA8H,EAAAwB,IAIAnC,EAUA2C,QAbAtC,EAAAK,EAAAtJ,KAAAyB,MAAA8H,EAAAR,GAAA/I,KAAAyB,MAAA8H,EAAAyB,IAIAnC,EAUA2C,cAbAlC,EAAAtJ,KAAAyB,MAAAqH,GAAA9I,KAAAyB,MAAAsJ,GAcAU,eAbAnC,EAAAtJ,KAAAyB,MAAAsH,GAAA/I,KAAAyB,MAAAuJ,GAcAhC,cACAC,eACAa,YACAC,aACAjB,aACAC,eAIA,IAAA2C,EACA,SAAA9G,EAAA3H,GACA,oBAAA2H,EACA,UAAA7J,UAAA,4BAKA,GAFAkC,KAAA,GAEA,oBAAAf,WAAAe,EAAA0O,OACA,YAGA,IAAAA,EAAA1O,EAAA0O,QAAAzP,SAAAvG,cAAA,UACA,iBAAAsH,EAAA2L,QACA+C,EAAA/C,MAAA3L,EAAA2L,OAEA,iBAAA3L,EAAA4L,SACA8C,EAAA9C,OAAA5L,EAAA4L,QAGA,IACA+C,EADAC,EAAA5O,EAEA,IACA,IAAA6O,EAAA,CAAAlH,GAEA,IAAAA,EAAAjN,QAAA,UACAmU,EAAA/a,KAAA,gBAAA6T,GAGA,QAAAtN,EAAA,EAAuBA,EAAAwU,EAAApU,OAAkBJ,IAEzC,GADAsU,EAAAD,EAAAI,WAAAD,EAAAxU,GAAAuU,GACA,OAAAD,EAEO,MAAA/V,GACP+V,EAAA,KAEA,OAAAA,GAAA,MAUA,SAAAI,EAAApE,GAGA,IAAAqE,EAAAN,OAFA,IAAA/D,MAAA,IAGA,IAAAsE,GAAA,EACA,QAAAtE,EAAA+D,OAAA,CAEA,KADAM,EAAArE,EAAAqE,UACA,iBAAAA,EAAA,CACA,IAAAE,EAAAvE,EAAA+D,OACAQ,IACAA,EAjBA,WACA,IAAAlQ,IACA,UAAAwO,MAAA,iIAEA,OAAAvO,SAAAvG,cAAA,UAaAyW,GACAF,GAAA,GAEA,IAAAtH,EAAAqH,GAAA,KACA,sBAAAE,EAAAJ,WACA,UAAAtB,MAAA,2GAKA,KAHAwB,EAAAP,EAAA9G,EAAA9K,EAAA,GAAkE8N,EAAAyE,WAAA,CAClEV,OAAAQ,MAGA,UAAA1B,MAAA,gCAAA7F,EAAA,iHAIA,GADA+G,EAAAM,EAAAN,OACA/D,EAAA+D,YAAA/D,EAAA+D,OACA,UAAAlB,MAAA,4FAEA7C,EAAA0E,YACAL,EAAAM,uBAAA,EACAN,EAAAO,0BAAA,EACAP,EAAAQ,wBAAA,EACAR,EAAAS,6BAAA,EACAT,EAAAU,yBAAA,EACAhB,EAAA7Y,MAAA,gCAGA,OACA6Y,SACAM,UACAC,cAIA,IAAAU,EAAA,WACA,IAAAC,EAAAta,KAEAA,KAAAua,UAAA,GACAva,KAAAwa,OAAA,GACAxa,KAAAya,aAAAnV,EACAtF,KAAA0a,KAAA,KACA1a,KAAA2a,uBAAArV,EACAtF,KAAA4a,eAAA,EACA5a,KAAA6a,mBAlUA,SAAAnI,QACA,IAAAA,MAAA,IAEA,IAAAoI,EAAA,SAAAlH,GACA,GAAAlB,EAAAqI,UAAA,CAEA,IAAArH,EAAAjK,IACA,KAAAmK,EAAAoH,SAAApH,EAAAjQ,SAAAiQ,EAAAlQ,UAAAkQ,EAAAhQ,QAGa,KAAAgQ,EAAAoH,QACbtI,EAAAuI,WAAArH,GACaF,IAAAE,EAAAjQ,QAAA,KAAAiQ,EAAAoH,UAAApH,EAAAlQ,SAAAkQ,EAAAhQ,WACbgQ,EAAA9P,iBACA4O,EAAAwI,OAAAtH,KANAA,EAAA9P,iBACA4O,EAAAyI,KAAAvH,MAcA,OACAwH,OAPA,WACA3a,OAAA4a,iBAAA,UAAAP,IAOAQ,OALA,WACA7a,OAAA8a,oBAAA,UAAAT,KA6SAU,CAAA,CACAT,QAAA,WAAkC,WAAAT,EAAAjF,SAAAoG,SAClCN,KAAA,SAAAvH,GACAA,EAAA/P,SACAyW,EAAAza,MAAA6b,WACApB,EAAAqB,YACArB,EAAAsB,OAEyBtB,EAAAuB,SAEJvB,EAAAwB,eAErBb,WAAA,WACAX,EAAAza,MAAAkc,QACqBzB,EAAA0B,QAEA1B,EAAA2B,QAErBf,OAAA,SAAAtH,GACA0G,EAAAwB,YAAA,CACAZ,QAAA,OAIAlb,KAAAkc,gBAAA,WAA6C,OAAA5B,EAAA6B,WAC7Cnc,KAAAoc,eAAA,WACA9B,EAAA+B,UAEA/B,EAAA9X,WAKA8Z,EAAA,CAA8BC,OAAA,CAAUC,cAAA,GAAqBnH,SAAA,CAAYmH,cAAA,GAAqB3c,MAAA,CAAS2c,cAAA,IACvGF,EAAAC,OAAAE,IAAA,WACA,OAAAzc,KAAAya,SAEA6B,EAAAjH,SAAAoH,IAAA,WACA,OAAAzc,KAAAua,WAEA+B,EAAAzc,MAAA4c,IAAA,WACA,OAAAzc,KAAAwa,QAEAH,EAAAtZ,UAAA2b,iBAAA,SAAAC,EAAAC,GAEA,MADA,iBAAAA,GAAA5J,SAAA4J,GACAD,EAAAC,EAAA,GAEAvC,EAAAtZ,UAAA8b,cAAA,SAAAC,EAAAC,EAAAjK,EAAAkK,GACA,OAAAhK,SAAAF,MAAA,EAAArF,KAAAC,MAAAoP,GAAAhK,EAAA,IAAArF,KAAAC,MAAAsP,EAAAD,IAEA1C,EAAAtZ,UAAAkc,qBAAA,WACA,OAAAjd,KAAA6c,cAAA7c,KAAAH,MAAAid,SAAA9c,KAAAH,MAAAkd,KAAA/c,KAAAH,MAAAiT,YAAA9S,KAAAH,MAAAmd,MAEA3C,EAAAtZ,UAAAmc,cAAA,WACA,IAAArd,EAAAG,KAAAH,MACA,OACAwW,MAAAxW,EAAAwW,MACAC,OAAAzW,EAAAyW,OACAU,WAAAnX,EAAAmX,WACAP,YAAA5W,EAAA4W,YACAC,aAAA7W,EAAA6W,aACAuC,cAAApZ,EAAAoZ,cACAC,eAAArZ,EAAAqZ,iBAGAmB,EAAAtZ,UAAA6a,IAAA,WACA,IAAA5b,KAAAuc,OACa,UAAArE,MAAA,8DAab,OAZA,IAAAlY,KAAAqV,SAAA0G,SACA/b,KAAAic,OAEA,mBAAAjc,KAAAuc,OAAAY,SACA5Y,QAAAC,KAAA,4EAEAxE,KAAAH,MAAAud,UACApd,KAAAqd,eACArd,KAAAH,MAAAud,SAAA,GAEApd,KAAAsd,OACAtd,KAAAwC,SACAxC,MAEAqa,EAAAtZ,UAAAkb,KAAA,WACA,IAAAE,EAAAnc,KAAAqV,SAAA8G,QACA,cAAAnc,KAAAqV,WACA8G,GAAA,EACA5X,QAAAC,KAAA,kEAEA2X,IAEAzS,IAIA1J,KAAAH,MAAAkc,UAEA/b,KAAAH,MAAAud,UACApd,KAAAqd,eACArd,KAAAH,MAAAud,SAAA,GAEApd,KAAAH,MAAAkc,SAAA,EACA,MAAA/b,KAAA0a,MACaja,OAAA8c,qBAAAvd,KAAA0a,MACb1a,KAAAwd,UAAA1U,IACA9I,KAAA0a,KAAAja,OAAAgd,sBAAAzd,KAAAkc,kBAbA3X,QAAAmZ,MAAA,6EAeArD,EAAAtZ,UAAAib,MAAA,WACAhc,KAAAH,MAAA6b,WACa1b,KAAA2b,YACb3b,KAAAH,MAAAkc,SAAA,EACA,MAAA/b,KAAA0a,MAAAhR,KACAjJ,OAAA8c,qBAAAvd,KAAA0a,OAGAL,EAAAtZ,UAAAka,WAAA,WACAjb,KAAAH,MAAAkc,QACa/b,KAAAgc,QAEAhc,KAAAic,QAEb5B,EAAAtZ,UAAA4c,KAAA,WACA3d,KAAAgc,QACAhc,KAAAH,MAAA+S,MAAA,EACA5S,KAAAH,MAAAid,SAAA,EACA9c,KAAAH,MAAAkd,KAAA,EACA/c,KAAAH,MAAA+d,UAAA,EACA5d,KAAAH,MAAAud,SAAA,EACApd,KAAAwC,UAEA6X,EAAAtZ,UAAA8a,OAAA,WACA,IAAAvB,EAAAta,KAEA,IAAAA,KAAAH,MAAA6b,UAEA,GAAAhS,IAAA,CAIA1J,KAAA2d,OACA3d,KAAAH,MAAAkc,SAAA,EACA/b,KAAAH,MAAA6b,WAAA,EACA,IAAAmC,EAAA,EAAA7d,KAAAH,MAAAmd,IACA,MAAAhd,KAAA0a,MACaja,OAAA8c,qBAAAvd,KAAA0a,MACb,IAAA4C,EAAA,WACA,OAAAhD,EAAAza,MAAA6b,WAEApB,EAAAza,MAAA+d,UAAAC,EACAvD,EAAAgD,OACAhD,EAAAwB,YAAA,CACAgC,UAAA,IACa1U,KAAA,WACbkR,EAAAza,MAAA6b,YAEApB,EAAAza,MAAA+d,UAAA,EACAtD,EAAAza,MAAA+S,QACA0H,EAAAza,MAAA+S,MAAA0H,EAAAza,MAAAiT,aACAwH,EAAAza,MAAAkd,MAAAc,EACAvD,EAAAza,MAAAid,SAAAxC,EAAAoC,iBAAApC,EAAAza,MAAAkd,KAAAzC,EAAAza,MAAA+c,UACAtC,EAAAI,KAAAja,OAAAgd,sBAAAH,KAEA/Y,QAAAwZ,IAAA,sBACAzD,EAAA0D,aACA1D,EAAAqB,YACArB,EAAAqD,OACArD,EAAAsB,WAnBiBtK,QAAAC,WAuBjBvR,KAAAH,MAAAud,UACApd,KAAAqd,eACArd,KAAAH,MAAAud,SAAA,GAEApd,KAAA0a,KAAAja,OAAAgd,sBAAAH,QAtCA/Y,QAAAmZ,MAAA,sEAwCArD,EAAAtZ,UAAAsc,aAAA,WACA,IAAA/C,EAAAta,KAEAA,KAAAuc,QAAA,mBAAAvc,KAAAuc,OAAA0B,OACAje,KAAAke,kBAAA,SAAAre,GAAqD,OAAAya,EAAAiC,OAAA0B,MAAApe,MAGrDwa,EAAAtZ,UAAAid,WAAA,WACA,IAAA1D,EAAAta,KAEAA,KAAAuc,QAAA,mBAAAvc,KAAAuc,OAAAnW,KACApG,KAAAke,kBAAA,SAAAre,GAAqD,OAAAya,EAAAiC,OAAAnW,IAAAvG,MAGrDwa,EAAAtZ,UAAA4a,UAAA,WACA,MAAA3b,KAAA0a,MAAAhR,KACajJ,OAAA8c,qBAAAvd,KAAA0a,MACb1a,KAAAH,MAAA6b,WAAA,EACA1b,KAAAH,MAAA+d,UAAA,EACA5d,KAAAH,MAAAkc,SAAA,GAEA1B,EAAAtZ,UAAA+a,YAAA,SAAApJ,GACA,IAAA4H,EAAAta,KAGA,QAFA,IAAA0S,MAAA,KAEA1S,KAAAuc,OACa,OAAAjL,QAAA6M,IAAA,IACb,mBAAAne,KAAAuc,OAAA6B,WACApe,KAAAuc,OAAA6B,YAEA,IAAAC,EAAA9W,EAAA,CACAuW,SAAApL,EAAAoL,SACAlL,MAAAF,EAAAoL,SAAA9d,KAAAH,MAAA+S,WAAAtN,EACAqN,KAAA3S,KAAAqV,SAAA1C,KACAW,KAAAtT,KAAAqV,SAAA/B,KACAD,OAAArT,KAAAqV,SAAAhC,OACAG,OAAAxT,KAAAqV,SAAA7B,OACA8K,SAAAte,KAAAqV,SAAAiJ,SACAC,gBAAAve,KAAAqV,SAAAkJ,gBACAnL,UAtlBA9H,EAAA,IAAArC,KADA,uBAwlBA6J,YAAAE,SAAAhT,KAAAH,MAAAiT,aAAArF,KAAAoD,IAAA,IAAA7Q,KAAAH,MAAAiT,aAAA,MAEAY,EAAAjK,IACA+U,EAAAlN,QAAAC,UACA,GAAAmC,GAAAhB,EAAAwI,QAAA,mBAAAxH,EAAAwH,OAAA,CACA,IAAAuD,EAAAlX,EAAA,GAA4C8W,GAC5C9K,EAAAG,EAAAwH,OAAAuD,GAEiBD,EADjBtV,EAAAqK,GACiBA,EAEAjC,QAAAC,QAAAgC,GAEjB,OAAAiL,EAAApV,KAAA,SAAAmK,GAAuC,OAAA+G,EAAAoE,eAAAnX,EAAA,GAA6C8W,EAAA,CACpF9K,QAAA,SAGA8G,EAAAtZ,UAAA2d,eAAA,SAAAL,GACA,IAAA/D,EAAAta,UACA,IAAAqe,MAAA,IAEAre,KAAAwa,OAAA3D,WAAA,EACA7W,KAAAqc,SACA,IAAAsC,EAAA3e,KAAAwC,SACA4W,EAAApZ,KAAAH,MAAAuZ,OAmCA,YAlCA,IAAAuF,IACAA,EAAA,CAAAvF,IAGAuF,GADAA,EAAA,GAAAC,OAAAD,GAAAve,OAAAC,UACAyH,IAAA,SAAAmQ,GACA,IA5pCAR,EA4pCAoH,EAAA,iBAAA5G,OAAA,SAAAA,GAAA,YAAAA,GACA6G,EAAAD,EAAA5G,EAAA6G,KAAA7G,EACAvN,EAAAmU,EAAAtX,EAAA,GAAsD0Q,EAAA,CACtD6G,SACa,CACbA,QAEA,GAlqCAzV,EADAoO,EAmqCAqH,IAlqCA,UAAAlY,KAAA6Q,EAAAjO,WAAA,mBAAAiO,EAAA+B,WAkqCA,CACA,IAEA/X,EA/tBA,SAAA2X,EAAA1G,QACA,IAAAA,MAAA,IAEA,IAAA4L,EAAA5L,EAAA4L,UAAA,YACA,IAAAnN,EAAAmE,SAAAgJ,GACa,UAAApG,MAAA,2BAAAoG,GACb,IAAAzL,GAAAyL,EAAArW,MAAA,aAAA1J,QAAA,eAGA,OAFAsU,IACaA,GAAA,IAAAA,GAAA9G,eACb,CACA8G,YACAR,KAAAiM,EACAjN,QAAA+H,EAAA2F,UAAAT,EAAA5L,EAAA6L,kBAmtBAS,CAAAF,EAAA,CACAR,SAHA5T,EAAA4T,UAAAD,EAAAC,SAIAC,gBAHApX,EAAAuD,EAAA6T,gBAAAF,EAAAE,gBAAA,OAKAlN,EAAA5P,EAAA4P,QACAwB,EAAApR,EAAAoR,UACAR,EAAA5Q,EAAA4Q,KACA,OAAApN,OAAAuC,OAAAkD,EAAA,CACA2G,UACAwB,YACAR,SAGA,OAAA3H,IAGA1K,KAAAwa,OAAA3D,WAAA,EACA7W,KAAAqc,SACArc,KAAAwC,SACA8O,QAAA6M,IAAAQ,EAAA7W,IAAA,SAAAmQ,EAAAlT,EAAAka,GACA,IAAAC,EAAA3X,EAAA,GAAwC8W,EAAApG,EAAA,CACxC/E,MAAAnO,EACAkO,YAAAgM,EAAA9Z,SAEA2Z,EAAA7G,EAAA6G,KACA,GAAA7G,EAAA5G,QAAA,CACA,IAAAA,EAAA4G,EAAA5G,QAEA,cADA6N,EAAA7N,QACAD,EAAAC,EAAA6N,GAEA,OAxqBA,SAAAJ,EAAApU,QACA,IAAAA,MAAA,IAEA,IAAAyU,EAAA9U,MAAA9D,QAAAuY,KAAA,CAAAA,GAIA,OAAAtM,EAHA,IAAA/R,OAAA2R,KAAA+M,EAAA,CACA9M,KAAA3H,EAAA2H,MAAA,KAEA3H,GAiqBA0U,CAAAN,EAAAI,MAES9V,KAAA,SAAAwK,GACT,GAAAA,EAAAzO,OAAA,GACA,IAEAwQ,EAFA0J,EAAAzL,EAAA0L,KAAA,SAAAhc,GAA4D,OAAAA,EAAAic,aAC5DC,EAAA5L,EAAA6L,KAAA,SAAAnc,GAAqD,OAAAA,EAAAoQ,SAGhCiC,EADrB/B,EAAAzO,OAAA,EACqByO,EAAAzO,OACrBka,EACqBA,EAAA,eAAAzL,EAAA,YAEA,GAAAA,EAAA,YACrB,IAAA8L,EAAA,GACA,GAAArB,EAAAP,SAEA4B,EADA1M,SAAAsH,EAAAza,MAAAiT,aACA,YAAAuL,EAAAzL,MAAA,SAAA0H,EAAAza,MAAA,2BAAAwe,EAAA,eACiBzK,EAAAzO,OAAA,IACjBua,EAAA,UAEA,IAAAhM,EAAA8L,EAAA,oCACAjb,QAAAwZ,IAAA,MAAArK,EAAA,kBAAAiC,EAAA,KAAA+J,EAAA,kBAAwG,kBAAmB,qBAAsB,yBAEjJ,mBAAApF,EAAAiC,OAAAoD,YACArF,EAAAiC,OAAAoD,gBAIAtF,EAAAtZ,UAAAmd,kBAAA,SAAAvc,GACA3B,KAAA4f,aACAje,EAAA3B,KAAAH,OACAG,KAAA6f,eAEAxF,EAAAtZ,UAAA6e,WAAA,WACA,IAAA/f,EAAAG,KAAAH,MACAG,KAAAH,MAAAwZ,KAAAxZ,EAAA6Z,SAAA7Z,EAAAigB,GAKSjgB,EAAAigB,IACTjgB,EAAAigB,GAAAC,MAAAlgB,EAAAkZ,OAAAlZ,EAAAmX,WAAAnX,EAAAmZ,OAAAnZ,EAAAmX,aALAnX,EAAA6Z,QAAAyB,QACA,IAAAnb,KAAAqV,SAAA2K,cACAngB,EAAA6Z,QAAAqG,MAAAlgB,EAAAkZ,OAAAlZ,EAAAmZ,UAMAqB,EAAAtZ,UAAA8e,YAAA,WACA,IAAAhgB,EAAAG,KAAAH,MACAG,KAAAH,MAAAwZ,KAAAxZ,EAAA6Z,SAAA7Z,EAAAigB,IACAjgB,EAAA6Z,QAAAuG,UAEApgB,EAAAwZ,KAAA,IAAArZ,KAAAqV,SAAA6K,QAAArgB,EAAAigB,IACAjgB,EAAAwZ,GAAA6G,SAGA7F,EAAAtZ,UAAAuc,KAAA,WACAtd,KAAAuc,QAAA,mBAAAvc,KAAAuc,OAAAe,OACAtd,KAAA4f,aACA5f,KAAAuc,OAAAe,KAAAtd,KAAAH,OACAG,KAAA6f,gBAGAxF,EAAAtZ,UAAAyB,OAAA,WACA,OAAAxC,KAAAH,MAAAigB,IACA9f,KAAA2a,uBAAArV,EACAtF,KAAAH,MAAAigB,GAAAK,SACAngB,KAAA2a,mBAEA3a,KAAAogB,kBAGA/F,EAAAtZ,UAAAqf,eAAA,WACA,GAAApgB,KAAAuc,OAAA,CAEA,IAEAoC,EAFA9e,EAAAG,KAAAH,MASA,OARAG,KAAA4f,aAEA,mBAAA5f,KAAAuc,OACAoC,EAAA3e,KAAAuc,OAAA1c,GACS,mBAAAG,KAAAuc,OAAA/Z,SACTmc,EAAA3e,KAAAuc,OAAA/Z,OAAA3C,IAEAG,KAAA6f,cACAlB,IAEAtE,EAAAtZ,UAAAsf,OAAA,SAAA3N,GACA,IAAA4H,EAAAta,UACA,IAAA0S,MAAA,IAEA,IAAA4N,EAAA,YACArb,OAAAC,KAAAwN,GAAA1Q,QAAA,SAAA8C,GACA,GAAAwb,EAAAlb,QAAAN,IAAA,EACA,UAAAoT,MAAA,gBAA8CpT,EAAA,mDAG9C,IAAAyb,EAAAvgB,KAAAua,UAAAnB,OACAoH,EAAAxgB,KAAAua,UAAAb,QACA,QAAA5U,KAAA4N,EAAA,CACA,IAAA1M,EAAA0M,EAAA5N,QACA,IAAAkB,IACAsU,EAAAC,UAAAzV,GAAAkB,GAGA,IAAAya,EAAAxb,OAAAuC,OAAA,GAAuCxH,KAAAua,UAAA7H,GACvC,YAAAA,GAAA,UAAAA,EACa,UAAAwF,MAAA,yDAKb,GAJA,SAAAxF,SACa+N,EAAA7N,MACb,UAAAF,UACa+N,EAAA1D,KACb,aAAArK,GAAA,gBAAAA,EACa,UAAAwF,MAAA,mEACb,aAAAxF,SACa+N,EAAA3N,YACb,gBAAAJ,UACa+N,EAAA7D,SACb,SAAAlK,IACa1S,KAAAwa,OAAAsE,KAAApM,EAAAoM,MACb,IAAA4B,EAAA1gB,KAAA2gB,aAAAF,GAEA,GADAxb,OAAAuC,OAAAxH,KAAAwa,OAAAkG,GACAH,IAAAvgB,KAAAua,UAAAnB,QAAAoH,IAAAxgB,KAAAua,UAAAb,QAAA,CACA,IAAAjY,EAAAgY,EAAAzZ,KAAAua,WACAnB,EAAA3X,EAAA2X,OACAM,EAAAjY,EAAAiY,QACA1Z,KAAAH,MAAAuZ,SACApZ,KAAAH,MAAA6Z,UACA1Z,KAAA4gB,cACA5gB,KAAA6gB,wBAmBA,OAjBAnO,EAAAoN,IAAA,mBAAApN,EAAAoN,KACA9f,KAAAH,MAAAigB,GAAApN,EAAAoN,GACA9f,KAAAH,MAAAigB,GAAAgB,KAAA,WACAxG,EAAAM,gBAEAN,EAAAK,kBAAAL,EAAA8F,oBAGA,YAAA1N,IACAA,EAAAqJ,QACiB/b,KAAAic,OAEAjc,KAAAgc,SAEjB5G,EAAApV,KAAAua,WACAva,KAAAqc,SACArc,KAAAwC,SACAxC,KAAAH,OAEAwa,EAAAtZ,UAAAsb,OAAA,WACA,IAAA0E,EAAA/gB,KAAAkd,gBACA7H,EAAArV,KAAAqV,SACAxV,EAAAG,KAAAH,MACAmhB,EAAA5K,EAAAvW,EAAAwV,GACApQ,OAAAuC,OAAAxH,KAAAwa,OAAAwG,GACA,IAAAvf,EAAAzB,KAAAH,MACAmX,EAAAvV,EAAAuV,WACAP,EAAAhV,EAAAgV,YACAC,EAAAjV,EAAAiV,aACAH,EAAA9U,EAAA8U,WACAC,EAAA/U,EAAA+U,YACA4C,EAAApZ,KAAAH,MAAAuZ,OACAA,IAAA,IAAA/D,EAAAe,eACAvW,EAAAigB,GACA1G,EAAA/C,QAAAI,GAAA2C,EAAA9C,SAAAI,IACA1W,KAAA4a,eAAA,EACA/a,EAAAigB,GAAAmB,aAAAjK,GACAnX,EAAAigB,GAAA1J,aAAAK,EAAAO,EAAAN,EAAAM,GAAA,GACAhX,KAAA4a,eAAA,IAGAxB,EAAA/C,QAAAI,IACqB2C,EAAA/C,MAAAI,GACrB2C,EAAA9C,SAAAI,IACqB0C,EAAA9C,OAAAI,IAErBhN,MAAA,IAAA2L,EAAA6L,cACA9H,EAAA7Y,MAAA8V,MAAAE,EAAA,KACA6C,EAAA7Y,MAAA+V,OAAAE,EAAA,OAGA,IAAA2K,EAAAnhB,KAAAkd,gBACAkE,GAAAjX,EAAA4W,EAAAI,GAIA,OAHAC,GACAphB,KAAAqhB,eAEAD,GAEA/G,EAAAtZ,UAAAsgB,aAAA,WACArhB,KAAAuc,QAAA,mBAAAvc,KAAAuc,OAAAF,QACArc,KAAAuc,OAAAF,OAAArc,KAAAH,QAGAwa,EAAAtZ,UAAAob,QAAA,WACA,GAAAnc,KAAAH,MAAAkc,QAEA,GAAArS,IAAA,CAIA1J,KAAA0a,KAAAja,OAAAgd,sBAAAzd,KAAAkc,iBACA,IAAAlT,EAAAF,IAEAwY,EAAA,IADAthB,KAAAH,MAAAmd,IAEAuE,EAAAvY,EAAAhJ,KAAAwd,UACAZ,EAAA5c,KAAAH,MAAA+c,SACA4E,EAAA,iBAAA5E,GAAA5J,SAAA4J,GACA6E,GAAA,EACAC,EAAA1hB,KAAAqV,SAAAqM,aACA,UAAAA,EACAH,EAAAD,EACS,aAAAI,EACTH,EAAAD,GACAtY,GAAAuY,EAAAD,EACAthB,KAAAwd,UAAAxU,GAEAyY,GAAA,EAGAzhB,KAAAwd,UAAAxU,EAEA,IAAA4U,EAAA2D,EAAA,IACAI,EAAA3hB,KAAAH,MAAAkd,KAAAa,EAAA5d,KAAAH,MAAA+hB,UACAD,EAAA,GAAAH,IACAG,EAAA/E,EAAA+E,GAEA,IAAAE,GAAA,EACAC,GAAA,EACA7M,GAAA,IAAAjV,KAAAqV,SAAA0M,KAaA,GAZAP,GAAAG,GAAA/E,IACA3H,GACAwM,GAAA,EACAE,GAAA/E,EACAkF,GAAA,IAEAL,GAAA,EACAE,EAAA/E,EACAiF,GAAA,GAEA7hB,KAAAge,cAEAyD,EAAA,CACAzhB,KAAAH,MAAA+d,YACA5d,KAAAH,MAAAkd,KAAA4E,EACA3hB,KAAAH,MAAAid,SAAA9c,KAAA0c,iBAAAiF,EAAA/E,GACA,IAAAoF,EAAAhiB,KAAAH,MAAA+S,MACA5S,KAAAH,MAAA+S,MAAA5S,KAAAid,uBACA6E,GACiB9hB,KAAAqd,eACjB2E,IAAAhiB,KAAAH,MAAA+S,OACiB5S,KAAAsd,OACjBtd,KAAAwC,SACAxC,KAAAH,MAAA+d,UAAA,EAEAiE,GACA7hB,KAAAgc,aA1DAzX,QAAAmZ,MAAA,oEA6DArD,EAAAtZ,UAAAkhB,SAAA,SAAAtgB,GACA,sBAAAA,EACa,UAAAuW,MAAA,sCACbvW,EAAA3B,KAAAH,OACAG,KAAAwC,UAEA6X,EAAAtZ,UAAAmhB,MAAA,WACAliB,KAAA6gB,yBAEAxG,EAAAtZ,UAAAohB,QAAA,WACAzY,MACAjJ,OAAA8a,oBAAA,SAAAvb,KAAAoc,gBACApc,KAAA6a,mBAAAS,UAEAtb,KAAAH,MAAAuZ,OAAAgJ,eACApiB,KAAAH,MAAAuZ,OAAAgJ,cAAA7N,YAAAvU,KAAAH,MAAAuZ,SAGAiB,EAAAtZ,UAAA8f,sBAAA,WACAnX,OAEA,IAAA1J,KAAAqV,SAAAqC,QAAA1X,KAAAH,MAAAuZ,SAAApZ,KAAAH,MAAAuZ,OAAAgJ,gBACApiB,KAAAqV,SAAAqC,QAAA/N,SAAAuK,MACAC,YAAAnU,KAAAH,MAAAuZ,UAGAiB,EAAAtZ,UAAA6f,YAAA,WAj+CA,IAAAyB,EAk+CAriB,KAAAH,MAAA6Z,UAj+CA,mBADA2I,EAm+CAriB,KAAAH,MAAA6Z,SAl+CA4I,OAAA,mBAAAD,EAAAE,YAAA,mBAAAF,EAAAG,WAm+CAxiB,KAAAwa,OAAAnB,GAAArZ,KAAAH,MAAA6Z,eAEA1Z,KAAAwa,OAAAnB,KAIAgB,EAAAtZ,UAAA4f,aAAA,SAAAtL,QACA,IAAAA,MAAA,IAEA,IAAAuH,EAAAvH,EAAAuH,SACA9J,EAAAuC,EAAAvC,YACA8O,EAAAza,EAAAkO,EAAAuM,UAAA,GACA5E,EAAA7V,EAAAkO,EAAA2H,IAAA,IACAwE,EAAA,iBAAA5E,GAAA5J,SAAA4J,GACA6F,EAAA,iBAAA3P,GAAAE,SAAAF,GACA4P,EAAAlB,EAAA/T,KAAAC,MAAAsP,EAAAJ,QAAAtX,EACAqd,EAAAF,EAAA3P,EAAAkK,OAAA1X,EACA,GAAAkc,GAAAiB,GAAAC,IAAA5P,EACA,UAAAoF,MAAA,sGAEA,IAAA7C,EAAAQ,iBAAA,IAAAR,EAAAO,OACArR,QAAAC,KAAA,4FAEAsO,EAAA3L,EAAA2L,EAAA4P,EAAAE,KACAhG,EAAAzV,EAAAyV,EAAA+F,EAAAC,KACA,IAAAC,EAAAxN,EAAA0H,KACA+F,EAAAzN,EAAAzC,MACAmQ,EAAA,iBAAAF,GAAA7P,SAAA6P,GACAG,EAAA,iBAAAF,GAAA9P,SAAA8P,GACA/F,EAAA,EACAnK,EAAA,EACAkK,EAAA,EACA,GAAAiG,GAAAC,EACA,UAAA9K,MAAA,gEAUA,OATS6K,GACThG,EAAA8F,EACA/F,EAAA9c,KAAA0c,iBAAAK,EAAAH,GACAhK,EAAA5S,KAAA6c,cAAAC,EAAAC,EAAAjK,EAAAkK,IACSgG,IAETjG,GADAnK,EAAAkQ,GACA9F,EACAF,EAAA9c,KAAA0c,iBAAAK,EAAAH,IAEA,CACAE,WACAC,OACAnK,QACAgK,WACA9J,cACAkK,MACA4E,cAGAvH,EAAAtZ,UAAAkiB,MAAA,SAAA5N,GACA,IAAAiF,EAAAta,KAGA,QAFA,IAAAqV,MAAA,IAEArV,KAAAuc,OACa,UAAArE,MAAA,6CACblY,KAAAua,UAAAtV,OAAAuC,OAAA,GAAyC6N,EAAArV,KAAAua,WACzCnF,EAAApV,KAAAua,WACA,IAAA9Y,EAAAgY,EAAAzZ,KAAAua,WACAb,EAAAjY,EAAAiY,QACAN,EAAA3X,EAAA2X,OACAsH,EAAA1gB,KAAA2gB,aAAA3gB,KAAAua,WACAva,KAAAwa,OAAAvV,OAAAuC,OAAA,GAAsCkZ,EACtC,CAAatH,SACbM,UACAkE,UAAA,EACAR,SAAA,EACAvG,WAAA,EACAkF,SAAA,EACAL,WAAA,EACArG,SAAArV,KAAAqV,SACAyJ,KAAA9e,KAAAqV,SAAAyJ,KACAtc,OAAA,WAAiC,OAAA8X,EAAA9X,UACjCyY,WAAA,WAAqC,OAAAX,EAAAW,cACrCgH,SAAA,SAAAtgB,GAAqC,OAAA2Y,EAAA2H,SAAAtgB,IACrC2b,KAAA,WAA+B,OAAAhD,EAAAgD,QAC/BjB,OAAA,WAAiC,OAAA/B,EAAA+B,UACjCgE,OAAA,SAAA3N,GAAoC,OAAA4H,EAAA+F,OAAA3N,IACpCoJ,YAAA,SAAApJ,GAAyC,OAAA4H,EAAAwB,YAAApJ,IACzCmJ,OAAA,WAAiC,OAAAvB,EAAAuB,UACjCI,KAAA,WAA+B,OAAA3B,EAAA2B,QAC/BD,MAAA,WAAgC,OAAA1B,EAAA0B,SAChC2B,KAAA,WAA+B,OAAArD,EAAAqD,UAC/B3d,KAAA4gB,cACA5gB,KAAAqc,UAEAhC,EAAAtZ,UAAAmiB,WAAA,SAAAC,EAAAC,GACA,IAAA9I,EAAAta,KAEA,OAAAA,KAAAqjB,KAAAF,EAAAC,GAAAha,KAAA,WAEA,OADAkR,EAAAsB,MACAtB,KAGAD,EAAAtZ,UAAAuiB,OAAA,WACA,IAAAhJ,EAAAta,KAEAA,KAAAgc,QACAhc,KAAAuc,SAEA,mBAAAvc,KAAAuc,OAAA+G,QACAtjB,KAAAke,kBAAA,SAAAre,GAAqD,OAAAya,EAAAiC,OAAA+G,OAAAzjB,KAErDG,KAAAya,QAAA,OAEAJ,EAAAtZ,UAAAwiB,QAAA,WACAvjB,KAAAsjB,SACAtjB,KAAAmiB,WAEA9H,EAAAtZ,UAAAsiB,KAAA,SAAAG,EAAAJ,GACA,IAAA9I,EAAAta,KAEA,sBAAAwjB,EACA,UAAAtL,MAAA,oHAEAlY,KAAAuc,QACAvc,KAAAsjB,cAEA,IAAAF,GACApjB,KAAAqgB,OAAA+C,GAEApjB,KAAA4f,aACA,IAAA6D,EAAAnS,QAAAC,UACA,GAAAvR,KAAAqV,SAAAyK,GAAA,CACA,IAAApW,IACA,UAAAwO,MAAA,kEAEAuL,EAAA,IAAAnS,QAAA,SAAAC,GACA,IACAkS,EADAC,EAAApJ,EAAAjF,SAAAyK,GAEA4D,EAAA5D,KACA2D,EAAAC,EAAAD,QACAC,IAAA5D,IAEA,IAAA6D,EAAA,SAAA7D,GACA2D,IACyB3D,EAAA2D,QAAA,WAA4B,OAAAA,EAAA3D,KACrDA,EAAAmD,MAAA,WACA,IAAApjB,EAAAya,EAAAza,MACA+jB,EAAA,UAAAtJ,EAAAjF,SAAAqE,QACAmK,EAAAD,EAAA9D,EAAAgE,MAAAhE,EAAAiE,IACAjE,EAAAkE,SACAlE,EAAAmB,aAAAphB,EAAAmX,YACA8I,EAAArG,aAAA5Z,EAAAoZ,cAAApZ,EAAAqZ,eAAA2K,GACAD,GAAAtJ,EAAAjF,SAAAyE,YACAgG,EAAAmE,cAAA3J,EAAAjF,SAAAyE,YAEAQ,EAAA+F,OAAA,CACAP,KACA1G,OAAA0G,EAAA1G,OACAM,QAAAoG,EAAAoE,UAAAC,iBAEA5S,MAGA,sBAAAmS,EACA,IAAAA,EAAAC,OACiB,CACjB,sBAAAljB,OAAAgZ,aACA,UAAAvB,MAAA,4JAEAyL,EAAAljB,WAIA,OAAAgjB,EAAAra,KAAA,WACA,IAAAgb,EAAAZ,EAAAlJ,EAAAza,OAIA,OAHAqJ,EAAAkb,KACAA,EAAA9S,QAAAC,QAAA6S,IAEAA,IACShb,KAAA,SAAAmT,GAUT,OATAA,IACiBA,EAAA,IACjBjC,EAAAG,QAAA8B,EACA7S,MACA4Q,EAAAO,mBAAAO,SACA3a,OAAA4a,iBAAA,SAAAf,EAAA8B,iBAEA9B,EAAAuF,cACAvF,EAAA+G,eACA/G,IACS+J,MAAA,SAAAlc,GAET,MADA5D,QAAAC,KAAA,0FAAA2D,EAAAmc,SACAnc,KAIAlD,OAAAsf,iBAAAlK,EAAAtZ,UAAAub,GAEA,IAAAkI,EAAA,eACAC,EAAA,GA4BA,SAAAtB,EAAA5G,EAAAlH,GAGA,QAFA,IAAAA,MAAA,IAEAA,EAAAyK,GAAA,CACA,GAAAzK,EAAA+D,QAAA/D,EAAAqE,SAAA,iBAAArE,EAAAqE,QACA,UAAAxB,MAAA,8GAEA,IAAAwB,EAAA,iBAAArE,EAAAqE,SAAArE,EAAAqE,QACArE,EAAApQ,OAAAuC,OAAA,GAAuC6N,EAAA,CACvC+D,QAAA,EACAM,YAGA,IAvCAhG,EAwCAgR,EADAC,GAvCAjR,EAAAjK,MACAiK,EAAAkR,IAwCAD,IACAD,EAAAvd,EAAAkO,EAAAwP,GAAA,mCAEA,IAAAC,EAAAH,GAAA,iBAAAD,EACAI,GAAAL,EAAAnP,SAAAoP,KACAngB,QAAAC,KAAA,oKAAuHkgB,GACvHI,GAAA,GAEA,IAAArB,EAAAnS,QAAAC,UACA,GAAAuT,EAAA,CACAL,EAAAjmB,KAAAkmB,GACA,IAAAK,EAhDA,SAAAF,GACA,IAAAnR,EAAAjK,IACA,GAAAiK,EAGA,OADAA,EAAA8Q,GAAA9Q,EAAA8Q,IAAA,GACA9Q,EAAA8Q,GAAAK,GA2CAG,CAAAN,GACA,GAAAK,EAAA,CACA,IAAAE,EAAA,WACA,IAnCAC,EAmCAlE,GAnCAkE,EAmCAH,EAAAI,QAAA9P,EAlCA8G,QAAA,CACAY,KAAAmI,EAAArlB,MAAAkd,WACSzX,GAkCT,OADAyf,EAAAI,QAAA5B,UACAvC,GAEAyC,EAAAsB,EAAA1B,KAAAja,KAAA6b,GAAAZ,MAAAY,IAGA,OAAAxB,EAAAra,KAAA,SAAA4X,GACA,IACA/I,EApDA4M,EAAA/F,EACApL,EAkDAyR,EAAA,IAAA9K,EAgBA,OAdAkC,GACAlH,EAAApQ,OAAAuC,OAAA,GAA2C6N,EAAA2L,GAC3CmE,EAAAlC,MAAA5N,GACA8P,EAAAjD,QACAjK,EAAAkN,EAAAjC,WAAA3G,IAEAtE,EAAA3G,QAAAC,QAAA4T,GAEAL,IA7DAD,EA8DAH,EA9DA5F,EA8DA,CACAuE,KAAApL,EACAkN,YA/DAzR,EAAAjK,OAGAiK,EAAA8Q,GAAA9Q,EAAA8Q,IAAA,GACA9Q,EAAA8Q,GAAAK,GAAA/F,IA8DA7G,IAOA,OAHAkL,iBACAA,EAAAiC,WAAA7P,EAEA4N,GA34DgExe,EAAAxG,QAAA6I,EAA4B9I,EAAQ,+CCDpG,IAAAiJ,EAAcjJ,EAAQ,KACtB0X,EAAA,yCAEAyP,EAAA,CAEA/Y,EAAA,CACAgZ,OAAA,SACAC,OAAA,GAEAC,GAAA,CACAF,OAAA,SACAC,OAAA,KAEAjX,GAAA,CACAgX,OAAA,SACAC,OAAA,MAGAE,GAAA,CACAH,OAAA,WACAC,OAAA,MAEAG,GAAA,CACAJ,OAAA,WACAC,OAAA,KAEAI,GAAA,CACAL,OAAA,WACAC,OAAA,GAEAK,GAAA,CACAN,OAAA,WACAC,OAAA,KAIA,MAAAM,EAAA,CACAC,OAAA,CACAhR,KAAA,IACAiR,MAAA,SAEAC,SAAA,CACAlR,KAAA,KACAiR,MAAA,QA+DAphB,EAAAxG,QAvDA,SAAA6H,EAAAigB,EAAAC,EAAAxb,GACA,oBAAA1E,IAAAgN,SAAAhN,GAAA,UAAAkS,MAAA,iCACA,IAAA+N,IAAAC,EAAA,UAAAhO,MAAA,kCAGA,IAAAjC,EAAA9O,GADAuD,KAAA,IACAuL,cAAA,IACAC,EAAAxL,EAAAwL,UACAC,GAAA,IAAAzL,EAAAyL,WAKA,GAHA8P,IAAAla,cACAma,IAAAna,eAEA,IAAA6J,EAAAxQ,QAAA6gB,GAAA,UAAA/N,MAAA,sBAAA+N,EAAA,sBAAArQ,EAAAtV,KAAA,OACA,QAAAsV,EAAAxQ,QAAA8gB,GAAA,UAAAhO,MAAA,sBAAAgO,EAAA,sBAAAtQ,EAAAtV,KAAA,OAEA,GAAA2lB,IAAAC,EAEA,OAAAlgB,EAGA,IAAAmgB,EAAA,EACAC,EAAA,EACAC,GAAA,EAEA,OAAAJ,IACAG,EAAA,EAAAnQ,EACAgQ,EAAA,MAEA,OAAAC,IACAG,GAAA,EACAF,EAAAlQ,EACAiQ,EAAA,MAGA,IAAAI,EAAAjB,EAAAY,GACAM,EAAAlB,EAAAa,GAGAM,EAAAxgB,EAAAsgB,EAAAf,OAAAa,EAGAE,EAAAhB,SAAAiB,EAAAjB,SAEAkB,GAAAX,EAAAS,EAAAhB,QAAAS,OAGA,IAAA9N,EAAAuO,EAAAD,EAAAhB,OAAAY,EAMA,OALAE,GAAAlQ,EACA8B,EAAAxK,KAAAyB,MAAA+I,GACG,iBAAA/B,GAAAlD,SAAAkD,KACH+B,EAtDA,SAAAjS,EAAAygB,GACA,OAAAC,OAAAjZ,KAAAyB,MAAAlJ,EAAA,IAAAygB,GAAA,KAAAA,GAqDAvX,CAAA+I,EAAA/B,IAEA+B,GAIAtT,EAAAxG,QAAAyX,6BC3GA,IAAA+Q,EAAiBzoB,EAAQ,KACzB0oB,EAAmB1oB,EAAQ,KAC3BiJ,EAAcjJ,EAAQ,KAqUtByG,EAAAxG,QAnUA,SAAA0oB,EAAAC,GACAA,EAAA3f,EAAA2f,EAAA,MACA,IACAC,EACAC,EACAC,EAHAC,EAAAzZ,KAAA0Z,OAIAC,EAAA,KACAC,GAAA,EAIA,OAFAC,EAAAR,GAEA,CACA9gB,QACA6gB,aAAA,SAAAC,GACA,OAAAD,EAAAC,IAEAQ,UACAC,QAiDA,WACA,OAAAR,GAjDAS,cAoDA,WAEA,OADA9f,OAAA+F,KAAAC,MAAA,IAAAD,KAAA0Z,YApDAM,aAyCA,WAEA,IADA,IAAAC,EAAA,EACA,IAAAA,KAAA1hB,IACA,OAAA0hB,GA3CAC,aA2DA,WACAV,EAAAW,KA3DAC,QA8DA,SAAAzc,EAAA0c,EAAAC,GACA,IAAA/U,SAAA5H,GAAA,UAAA5C,UAAA,0CAGA,OAFAsf,EAAA3gB,EAAA2gB,EAAA,IACAC,EAAA5gB,EAAA4gB,EAAA,IACAd,EAAAe,QAAA5c,EAAA0c,EAAA,IAjEAE,QAoEA,SAAA5c,EAAAmB,EAAAub,EAAAC,GACA,IAAA/U,SAAA5H,GAAA,UAAA5C,UAAA,0CACA,IAAAwK,SAAAzG,GAAA,UAAA/D,UAAA,0CAGA,OAFAsf,EAAA3gB,EAAA2gB,EAAA,IACAC,EAAA5gB,EAAA4gB,EAAA,IACAd,EAAAe,QAAA5c,EAAA0c,EAAAvb,EAAAub,IAxEAG,QA2EA,SAAA7c,EAAAmB,EAAA2b,EAAAJ,EAAAC,GACA,IAAA/U,SAAA5H,GAAA,UAAA5C,UAAA,0CACA,IAAAwK,SAAAzG,GAAA,UAAA/D,UAAA,0CACA,IAAAwK,SAAAkV,GAAA,UAAA1f,UAAA,0CAGA,OAFAsf,EAAA3gB,EAAA2gB,EAAA,IACAC,EAAA5gB,EAAA4gB,EAAA,IACAd,EAAAgB,QACA7c,EAAA0c,EACAvb,EAAAub,EACAI,EAAAJ,IAnFAK,QAuFA,SAAA/c,EAAAmB,EAAA2b,EAAAE,EAAAN,EAAAC,GACA,IAAA/U,SAAA5H,GAAA,UAAA5C,UAAA,0CACA,IAAAwK,SAAAzG,GAAA,UAAA/D,UAAA,0CACA,IAAAwK,SAAAkV,GAAA,UAAA1f,UAAA,0CACA,IAAAwK,SAAAoV,GAAA,UAAA5f,UAAA,0CAGA,OAFAsf,EAAA3gB,EAAA2gB,EAAA,IACAC,EAAA5gB,EAAA4gB,EAAA,IACAd,EAAAkB,QACA/c,EAAA0c,EACAvb,EAAAub,EACAI,EAAAJ,EACAM,EAAAN,IAjGAO,KAqGA,WACA,OAAAC,IAAA,MArGAA,UACAC,OA2GA,SAAAxgB,GAEA,oBADAA,EAAAZ,EAAAY,EAAA,KACA,UAAAS,UAAA,6BACA,OAAAxC,IAAA+B,GA7GAygB,QACAC,aACAC,KAwIA,SAAAC,GACA,WAAAA,EAAAxjB,YAAA,EACAwjB,EAAAF,EAAA,EAAAE,EAAAxjB,UAzIAyjB,QA4IA,SAAAC,GACA,IAAAxe,MAAA9D,QAAAsiB,GACA,UAAArgB,UAAA,8BAAAqgB,GAOA,IAJA,IAAAC,EACAC,EACAnZ,EAAAiZ,EAAA1jB,OACA6jB,EAAAH,EAAAve,QACAsF,GACAkZ,EAAArb,KAAAC,MAAA1H,IAAA4J,KACAmZ,EAAAC,EAAApZ,GACAoZ,EAAApZ,GAAAoZ,EAAAF,GACAE,EAAAF,GAAAC,EAEA,OAAAC,GA1JAC,WACAC,aAqKA,SAAAC,EAAAC,GACAD,EAAAhiB,EAAAgiB,EAAA,GAEAF,EAAA,EADAG,KAAA,IAEA,IAAAC,EAAAF,EAAA1b,KAAA6b,KAAAtjB,KAGA,OAFAojB,EAAA,IAAAC,EACAD,EAAA,IAAAC,EACAD,GA3KAG,SA8KA,SAAAJ,EAAAC,GACAD,EAAAhiB,EAAAgiB,EAAA,GACAC,KAAA,GACA,IAAA1B,EAAA1hB,IAAAyH,KAAA+b,GAAA,EACAC,EAAA,EAAAzjB,IAAA,EACA0jB,EAAAhC,EACAiC,EAAAlc,KAAAmc,KAAAH,GAIA,OAHAL,EAAA,GAAAD,EAAA1b,KAAAoc,IAAAF,GAAAlc,KAAAqc,IAAAJ,GACAN,EAAA,GAAAD,EAAA1b,KAAAoc,IAAAF,GAAAlc,KAAAoc,IAAAH,GACAN,EAAA,GAAAD,EAAA1b,KAAAqc,IAAAH,GACAP,GAvLAW,aA0LA,SAAAZ,EAAAC,GACAD,EAAAhiB,EAAAgiB,EAAA,GACAC,KAAA,GACA,IAAA1B,EAAA1hB,IAAAyH,KAAA+b,GAAA,EACAC,EAAA,EAAAzjB,IAAA,EACAgkB,EAAAhkB,IAEA0jB,EAAAhC,EACAiC,EAAAlc,KAAAmc,KAAAH,GACAJ,EAAAF,EAAA1b,KAAAwc,KAAAD,GAIA,OAHAZ,EAAA,GAAAC,EAAA5b,KAAAoc,IAAAF,GAAAlc,KAAAqc,IAAAJ,GACAN,EAAA,GAAAC,EAAA5b,KAAAoc,IAAAF,GAAAlc,KAAAoc,IAAAH,GACAN,EAAA,GAAAC,EAAA5b,KAAAqc,IAAAH,GACAP,GAtMAc,WAyMA,SAAAd,GACAA,KAAA,GACA,IAAAe,EAAAnkB,IACAokB,EAAApkB,IACAqkB,EAAArkB,IAEAskB,EAAA7c,KAAA6b,KAAA,EAAAa,GACAI,EAAA9c,KAAA6b,KAAAa,GAEAK,EAAA,EAAA/c,KAAA+b,GAAAY,EACAK,EAAA,EAAAhd,KAAA+b,GAAAa,EAEAjf,EAAAqC,KAAAoc,IAAAW,GAAAF,EACA/d,EAAAkB,KAAAqc,IAAAU,GAAAF,EACApC,EAAAza,KAAAoc,IAAAY,GAAAF,EACAnC,EAAA3a,KAAAqc,IAAAW,GAAAF,EAKA,OAJAnB,EAAA,GAAAhe,EACAge,EAAA,GAAA7c,EACA6c,EAAA,GAAAlB,EACAkB,EAAA,GAAAhB,EACAgB,GA5NAsB,WACAC,YA8NA,SAAAC,GAEA,YADAA,KAAA,IACAzlB,OAAA,KACAylB,EAAAC,EAAAD,IAAA5kB,OAhOA6kB,mBACAC,SAgQA,SAAAC,EAAAC,GAKA,GAJAD,EAAA5jB,EAAA4jB,EAAA,GACAC,EAAA7jB,EAAA6jB,EAAA,GAGA3D,EAAA,CACAA,GAAA,EACA,IAAApP,EAAAmP,EAEA,OADAA,EAAA,KACA2D,EAAAC,EAAA/S,EAEA,IAAAgT,EAAA,EACAC,EAAA,EACAziB,EAAA,EACA,GACAwiB,EAAA,EAAAjlB,IAAA,EACAklB,EAAA,EAAAllB,IAAA,EACAyC,EAAAwiB,IAAAC,UACOziB,GAAA,OAAAA,GACP,IAAA0iB,EAAA1d,KAAA6b,MAAA,EAAA7b,KAAAsQ,IAAAtV,MAGA,OAFA2e,EAAA8D,EAAAC,EACA9D,GAAA,EACA0D,EAAAC,GAAAC,EAAAE,KAnRA,SAAA7D,EAAA8D,EAAA1Y,GACA,iBAAA0Y,GAAA,iBAAAA,EAEApE,EAAAL,EADAI,EAAAqE,EACA1Y,IAEAqU,OAAAzhB,EACA0hB,EAAAE,GAEAD,EAAAW,IACAR,EAAA,KACAC,GAAA,EAGA,SAAArhB,IACA,OAAAghB,IAkBA,SAAAY,IACA,WAAAhB,EAAAI,GAsDA,SAAAsB,IACA,OAAAtiB,IAAA,GASA,SAAAwiB,EAAAlR,EAAAzG,GAMA,QALAvL,IAAAuL,IACAA,EAAAyG,EACAA,EAAA,GAGA,iBAAAA,GAAA,iBAAAzG,EACA,UAAArI,UAAA,wCAGA,OAAAxC,KAAA6K,EAAAyG,KAGA,SAAAmR,EAAAnR,EAAAzG,GAMA,QALAvL,IAAAuL,IACAA,EAAAyG,EACAA,EAAA,GAGA,iBAAAA,GAAA,iBAAAzG,EACA,UAAArI,UAAA,wCAGA,OAAAiF,KAAAC,MAAA8a,EAAAlR,EAAAzG,IA0BA,SAAAoY,EAAAE,EAAAC,GACAD,EAAAhiB,EAAAgiB,EAAA,GACAC,KAAA,GACA,IAAAO,EAAA,EAAA3jB,IAAAyH,KAAA+b,GAGA,OAFAJ,EAAA,GAAAD,EAAA1b,KAAAqc,IAAAH,GACAP,EAAA,GAAAD,EAAA1b,KAAAoc,IAAAF,GACAP,EAuEA,SAAAyB,EAAAD,GAEA,YADAA,KAAA,IACAzlB,QAAA,EACAulB,EAAAE,EAAA9iB,IAAA,SAAAW,GACA,OAAAA,EAAA4iB,UAIA,SAAAX,EAAAY,GAEA,QADAA,KAAA,IACAnmB,OAAA,SACA,IACAJ,EADAwmB,EAAA,EAGA,IAAAxmB,EAAA,EAAeA,EAAAumB,EAAAnmB,OAAoBJ,IACnCwmB,GAAAD,EAAAvmB,GAGA,GAAAwmB,GAAA,YAAArT,MAAA,2BAEA,IAAAiP,EAAAnhB,IAAAulB,EACA,IAAAxmB,EAAA,EAAeA,EAAAumB,EAAAnmB,OAAoBJ,IAAA,CACnC,GAAAoiB,EAAAmE,EAAAvmB,GACA,OAAAA,EAEAoiB,GAAAmE,EAAAvmB,GAEA,UA8BA8hB,sCCvUA,SAAA9f,GAEA,IAAAsP,EAAA,IAGAmV,EAAA,GACAC,OAAA,IAAA1kB,EAAAtG,OAAAsG,EAKA2kB,EAAAje,KAAAke,IAAAtV,EARA,GASAuV,EAAAne,KAAAke,IAAA,EARA,IASAE,EAAA,EAAAD,EACAhgB,EAAAyK,EAAA,EAGAyV,EAAAre,KAAA0Z,OAiEA,SAAA4E,EAAAjnB,GACA,IAAAqK,EAAA6c,EAAAlnB,EAAAK,OACA8mB,EAAAjsB,KAAA+E,EAAA,EAAAmnB,EAAAD,EAAAlnB,EAAAknB,EAAAC,EAAA,EAAAzjB,EAAAwjB,EAAA3lB,EAAA,GAMA,IAHA0lB,IAAgBlnB,EAAA,CAAAknB,MAGhBjnB,EAAAsR,GACA5N,EAAA1D,OAEA,IAAAA,EAAA,EAAaA,EAAAsR,EAAWtR,IACxB0D,EAAA1D,GAAA0D,EAAAyjB,EAAAtgB,EAAAsgB,EAAApnB,EAAAC,EAAAinB,IAAA7c,EAAA1G,EAAA1D,KACA0D,EAAAyjB,GAAA/c,GAIA8c,EAAA1mB,EAAA,SAAA4mB,GAIA,IAFA,IAAAhd,EAAAka,EAAA,EACAtkB,EAAAknB,EAAAlnB,EAAAmnB,EAAAD,EAAAC,EAAAzjB,EAAAwjB,EAAA3lB,EACA6lB,KACAhd,EAAA1G,EAAA1D,EAAA6G,EAAA7G,EAAA,GACAskB,IAAAhT,EAAA5N,EAAAmD,GAAAnD,EAAA1D,GAAA0D,EAAAyjB,EAAAtgB,EAAAsgB,EAAA/c,KAAA1G,EAAAyjB,GAAA/c,IAGA,OADA8c,EAAAlnB,IAAaknB,EAAAC,IACb7C,IAGGhT,GAsBH,SAAA+V,EAAAhB,EAAAtmB,GAEA,IADA,IAAAunB,EAAAC,EAAAlB,EAAA,GAAAc,EAAA,EACAA,EAAAI,EAAAnnB,QACAL,EAAA8G,EAAAsgB,GACAtgB,GAAAygB,GAAA,GAAAvnB,EAAA8G,EAAAsgB,IAAAI,EAAAna,WAAA+Z,KAEA,OAAAK,EAAAznB,GAsBA,SAAAynB,EAAA1hB,GACA,OAAAnD,OAAAG,aAAA2kB,MAAA,EAAA3hB,GA3IAlG,EAAAxG,QAAA,SAAAitB,EAAA/mB,GACA,GAAAA,IAAA,IAAAA,EAAA0C,OAIA,OAHA1C,EAAA0C,QAAA,EACA0G,KAAA0Z,OAAAxiB,EAAAxG,QAAAitB,EAAA/mB,GACAA,EAAA0C,QAAA,EACA0G,KAAA0Z,OAEA,IACAriB,EAAA,GAQA2nB,GALAL,EAoFA,SAAAM,EAAAvjB,EAAAwjB,GACA,IAAAC,EAAA3U,EAAA,GAAA4U,UAAA1jB,GAAA,GACA,GAAAwjB,GAAA,KAAAE,EACA,IAAAD,KAAAzjB,EACA,IAAW8O,EAAAzZ,KAAAkuB,EAAAvjB,EAAAyjB,GAAAD,EAAA,IAA8C,MAAArpB,IAGzD,OAAA2U,EAAA9S,OAAA8S,EAAA,KAAA4U,EAAA1jB,IAAA,KA3FAujB,CAJAroB,KAAAyoB,UAAA,EAKA,CAAA1B,EAAAmB,EAAAf,IACA,KAAAnmB,UAAA+lB,EA+GA,SAAAA,GACA,IAEA,OADAK,EAAAsB,OAAAC,gBAAA5B,EAAA,IAAAlZ,WAAAmE,IACAkW,EAAAnB,GACG,MAAA9nB,GACH,YAAA2F,KAAAwiB,IAAAwB,WAAAxB,EAAAwB,UAAAC,QACAzB,EAAA0B,OAAAZ,EAAAf,KArHA4B,GAAA,GAAAtoB,GAGA,IAAAinB,EAAAjnB,IAUA,OAPAsnB,EAAAG,EAAAE,EAAAnmB,GAAAklB,GAOA,WAIA,IAHA,IAAAzjB,EAAA0kB,EAAAlnB,EA/CA,GAgDA6G,EAAAsf,EACAtgB,EAAA,EACArD,EAAA6jB,GACA7jB,KAAAqD,GAAAiL,EACAjK,GAAAiK,EACAjL,EAAAqhB,EAAAlnB,EAAA,GAEA,KAAAwC,GAAA8jB,GACA9jB,GAAA,EACAqE,GAAA,EACAhB,KAAA,EAEA,OAAArD,EAAAqD,GAAAgB,IAIAzH,EAAAxG,QAAAkvB,YAAA,WACA5f,KAAA0Z,OAAA2E,GAwGAM,EAAA3e,KAAA0Z,SAAAqE,4CC5KA,IAAA8B,GA6BA,WACA,aAEA,IAAAC,EAAA,IAAA9f,KAAA6b,KAAA,MACAkE,GAAA,EAAA/f,KAAA6b,KAAA,MAEAmE,EAAA,IACAC,GAAAjgB,KAAA6b,KAAA,QACAqE,GAAA,EAAAlgB,KAAA6b,KAAA,OAEA,SAAA1C,EAAAgH,GACA,IAAAzG,EAEAA,EADA,mBAAAyG,EACAA,EAEAA,EA6WA,WAEA,IAAAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAEAC,GA4BAlmB,EAAA,WACA,SAAA+W,GACAA,IAAA9U,WACA,QAAAjF,EAAA,EAAqBA,EAAA+Z,EAAA3Z,OAAiBJ,IAAA,CAEtC,IAAA6J,EAAA,oBADA7G,GAAA+W,EAAA3M,WAAApN,IAGA6J,GADA7G,EAAA6G,IAAA,EAGA7G,GADA6G,GAAA7G,KACA,EAEAA,GAAA,YADA6G,GAAA7G,GAGA,+BAAAA,IAAA,KAdA,IACAA,EA3BA8lB,EAAAI,EAAA,KACAH,EAAAG,EAAA,KACAF,EAAAE,EAAA,KAEA,QAAAlpB,EAAA,EAAmBA,EAAAM,UAAAF,OAAsBJ,KACzC8oB,GAAAI,EAAA5oB,UAAAN,KACA,IACA8oB,GAAA,IAEAC,GAAAG,EAAA5oB,UAAAN,KACA,IACA+oB,GAAA,IAEAC,GAAAE,EAAA5oB,UAAAN,KACA,IACAgpB,GAAA,GAIA,OADAE,EAAA,KACA,WACA,IAAA9e,EAAA,QAAA0e,EAAA,uBAAAG,EAGA,OAFAH,EAAAC,EACAA,EAAAC,EACAA,EAAA5e,GAAA6e,EAAA,EAAA7e,IA3YA+e,CAAAN,GAEAngB,KAAA0Z,OAEAnnB,KAAAwe,EAAA2P,EAAAhH,GACAnnB,KAAAouB,KAAA,IAAAlc,WAAA,KACAlS,KAAAquB,UAAA,IAAAnc,WAAA,KACA,QAAAnN,EAAA,EAAmBA,EAAA,IAASA,IAC5B/E,KAAAouB,KAAArpB,GAAA/E,KAAAwe,EAAA,IAAAzZ,GACA/E,KAAAquB,UAAAtpB,GAAA/E,KAAAouB,KAAArpB,GAAA,GAmVA,SAAAopB,EAAAhH,GACA,IAAApiB,EACAyZ,EAAA,IAAAtM,WAAA,KACA,IAAAnN,EAAA,EAAeA,EAAA,IAASA,IACxByZ,EAAAzZ,KAEA,IAAAA,EAAA,EAAeA,EAAA,IAASA,IAAA,CACxB,IAAAskB,EAAAtkB,KAAAoiB,KAAA,IAAApiB,IACAupB,EAAA9P,EAAAzZ,GACAyZ,EAAAzZ,GAAAyZ,EAAA6K,GACA7K,EAAA6K,GAAAiF,EAEA,OAAA9P,EA3VAoI,EAAA7lB,UAAA,CACAwtB,MAAA,IAAAC,aAAA,QACA,MACA,QAEA,OACA,OACA,MAEA,QACA,OACA,MAEA,OACA,OACA,UACAC,MAAA,IAAAD,aAAA,qCACA,wCACA,qCACA,uCACA,qCACA,uCACA,qCACA,yCACAxG,QAAA,SAAA0G,EAAAC,GACA,IAiBAC,EAAAC,EAjBAR,EAAAruB,KAAAquB,UACAD,EAAApuB,KAAAouB,KACAG,EAAAvuB,KAAAuuB,MACAO,EAAA,EACAC,EAAA,EACAC,EAAA,EAEAvmB,GAAAimB,EAAAC,GAAApB,EACAxoB,EAAA0I,KAAAC,MAAAghB,EAAAjmB,GACAyjB,EAAAze,KAAAC,MAAAihB,EAAAlmB,GACA0G,GAAApK,EAAAmnB,GAAAsB,EAGAyB,EAAAP,GAFA3pB,EAAAoK,GAGA+f,EAAAP,GAFAzC,EAAA/c,GAMA8f,EAAAC,GACAN,EAAA,EACAC,EAAA,IAGAD,EAAA,EACAC,EAAA,GAKA,IAAAM,EAAAF,EAAAL,EAAApB,EACA4B,EAAAF,EAAAL,EAAArB,EACA6B,EAAAJ,EAAA,IAAAzB,EACA8B,EAAAJ,EAAA,IAAA1B,EAEA+B,EAAA,IAAAxqB,EACAyqB,EAAA,IAAAtD,EAEAuD,EAAA,GAAAR,IAAAC,IACA,GAAAO,GAAA,GACA,IAAAC,EAAA,EAAArB,EAAAkB,EAAAnB,EAAAoB,IAEAV,GADAW,MACAA,GAAAlB,EAAAmB,GAAAT,EAAAV,EAAAmB,EAAA,GAAAR,GAEA,IAAAS,EAAA,GAAAR,IAAAC,IACA,GAAAO,GAAA,GACA,IAAAC,EAAA,EAAAvB,EAAAkB,EAAAX,EAAAR,EAAAoB,EAAAX,IAEAE,GADAY,MACAA,GAAApB,EAAAqB,GAAAT,EAAAZ,EAAAqB,EAAA,GAAAR,GAEA,IAAAS,EAAA,GAAAR,IAAAC,IACA,GAAAO,GAAA,GACA,IAAAC,EAAA,EAAAzB,EAAAkB,EAAA,EAAAnB,EAAAoB,EAAA,IAEAR,GADAa,MACAA,GAAAtB,EAAAuB,GAAAT,EAAAd,EAAAuB,EAAA,GAAAR,GAIA,WAAAR,EAAAC,EAAAC,IAGA/G,QAAA,SAAAyG,EAAAC,EAAAoB,GACA,IAGAjB,EAAAC,EAAAC,EAAAgB,EAeApB,EAAAC,EAAAoB,EACAC,EAAAC,EAAAC,EAnBA/B,EAAAruB,KAAAquB,UACAD,EAAApuB,KAAAouB,KACAG,EAAAvuB,KAAAuuB,MAGA9lB,GAAAimB,EAAAC,EAAAoB,IAnHA,KAoHAhrB,EAAA0I,KAAAC,MAAAghB,EAAAjmB,GACAyjB,EAAAze,KAAAC,MAAAihB,EAAAlmB,GACAuhB,EAAAvc,KAAAC,MAAAqiB,EAAAtnB,GACA0G,GAAApK,EAAAmnB,EAAAlC,GAAAyD,EAIAwB,EAAAP,GAHA3pB,EAAAoK,GAIA+f,EAAAP,GAHAzC,EAAA/c,GAIAkhB,EAAAN,GAHA/F,EAAA7a,GAQA8f,GAAAC,EACAA,GAAAmB,GACAzB,EAAA,EACAC,EAAA,EACAoB,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,GAEAnB,GAAAoB,GACAzB,EAAA,EACAC,EAAA,EACAoB,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,IAGAxB,EAAA,EACAC,EAAA,EACAoB,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,GAIAlB,EAAAmB,GACAzB,EAAA,EACAC,EAAA,EACAoB,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,GAEAnB,EAAAoB,GACAzB,EAAA,EACAC,EAAA,EACAoB,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,IAGAxB,EAAA,EACAC,EAAA,EACAoB,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,GAOA,IAAAjB,EAAAF,EAAAL,EAAAnB,EACA2B,EAAAF,EAAAL,EAAApB,EACA6C,EAAAD,EAAAJ,EAAAxC,EACA4B,EAAAJ,EAAAiB,EAAA,EAAAzC,EACA6B,EAAAJ,EAAAiB,EAAA,EAAA1C,EACA8C,EAAAF,EAAAD,EAAA,EAAA3C,EACA+C,EAAAvB,EAAA,KACAwB,EAAAvB,EAAA,KACAwB,EAAAL,EAAA,KAEAd,EAAA,IAAAxqB,EACAyqB,EAAA,IAAAtD,EACAyE,EAAA,IAAA3G,EAEAyF,EAAA,GAAAR,IAAAC,IAAAmB,IACA,GAAAZ,EAAA,EAAAX,EAAA,MACA,CACA,IAAAY,EAAA,EAAArB,EAAAkB,EAAAnB,EAAAoB,EAAApB,EAAAuC,KAEA7B,GADAW,MACAA,GAAAlB,EAAAmB,GAAAT,EAAAV,EAAAmB,EAAA,GAAAR,EAAAX,EAAAmB,EAAA,GAAAW,GAEA,IAAAV,EAAA,GAAAR,IAAAC,IAAAkB,IACA,GAAAX,EAAA,EAAAZ,EAAA,MACA,CACA,IAAAa,EAAA,EAAAvB,EAAAkB,EAAAX,EAAAR,EAAAoB,EAAAX,EAAAT,EAAAuC,EAAAV,KAEAlB,GADAY,MACAA,GAAApB,EAAAqB,GAAAT,EAAAZ,EAAAqB,EAAA,GAAAR,EAAAb,EAAAqB,EAAA,GAAAU,GAEA,IAAAT,EAAA,GAAAR,IAAAC,IAAAiB,IACA,GAAAV,EAAA,EAAAb,EAAA,MACA,CACA,IAAAc,EAAA,EAAAzB,EAAAkB,EAAAW,EAAA9B,EAAAoB,EAAAW,EAAA/B,EAAAuC,EAAAP,KAEApB,GADAa,MACAA,GAAAtB,EAAAuB,GAAAT,EAAAd,EAAAuB,EAAA,GAAAR,EAAAf,EAAAuB,EAAA,GAAAS,GAEA,IAAAK,EAAA,GAAAJ,IAAAC,IAAAC,IACA,GAAAE,EAAA,EAAAZ,EAAA,MACA,CACA,IAAAa,EAAA,EAAAxC,EAAAkB,EAAA,EAAAnB,EAAAoB,EAAA,EAAApB,EAAAuC,EAAA,KAEAX,GADAY,MACAA,GAAArC,EAAAsC,GAAAL,EAAAjC,EAAAsC,EAAA,GAAAJ,EAAAlC,EAAAsC,EAAA,GAAAH,GAIA,WAAA5B,EAAAC,EAAAC,EAAAgB,IAGA7H,QAAA,SAAA/c,EAAAmB,EAAA2b,EAAAE,GACA,IAGA0G,EAAAC,EAAAC,EAAAgB,EAAAc,EAqCAlC,EAAAC,EAAAoB,EAAAc,EACAb,EAAAC,EAAAC,EAAAY,EACAC,EAAAC,EAAAC,EAAAC,EA1CAhD,EAAApuB,KAAAouB,KACAK,EAAAzuB,KAAAyuB,MAIAhmB,GAAA2C,EAAAmB,EAAA2b,EAAAE,GAAAsF,EACA3oB,EAAA0I,KAAAC,MAAAtC,EAAA3C,GACAyjB,EAAAze,KAAAC,MAAAnB,EAAA9D,GACAuhB,EAAAvc,KAAAC,MAAAwa,EAAAzf,GACAwG,EAAAxB,KAAAC,MAAA0a,EAAA3f,GACA0G,GAAApK,EAAAmnB,EAAAlC,EAAA/a,GAAA0e,EAKAsB,EAAA7jB,GAJArG,EAAAoK,GAKA+f,EAAA3iB,GAJA2f,EAAA/c,GAKAkhB,EAAAnI,GAJA8B,EAAA7a,GAKAkiB,EAAAjJ,GAJAnZ,EAAAE,GAUAmiB,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAxC,EAAAC,EAAAoC,IACAC,IACAtC,EAAAoB,EAAAiB,IACAE,IACAvC,EAAAoC,EAAAC,IACAG,IACAvC,EAAAmB,EAAAkB,IACAC,IACAtC,EAAAmC,EAAAE,IACAE,IACApB,EAAAgB,EAAAG,IACAC,IAwBA,IAAAtC,EAAAF,GAfAL,EAAA0C,GAAA,OAeA3D,EACAyB,EAAAF,GAfAL,EAAA0C,GAAA,OAeA5D,EACA2C,EAAAD,GAfAJ,EAAAuB,GAAA,OAeA7D,EACA+D,EAAAL,GAfAN,EAAAU,GAAA,OAeA9D,EACA0B,EAAAJ,GAdAiB,EAAAoB,GAAA,OAcA,EAAA3D,EACA2B,EAAAJ,GAdAiB,EAAAoB,GAAA,OAcA,EAAA5D,EACA4C,EAAAF,GAdAD,EAAAoB,GAAA,OAcA,EAAA7D,EACAgE,EAAAN,GAdAL,EAAAS,GAAA,OAcA,EAAA9D,EACA6C,EAAAvB,GAbAgC,EAAAK,GAAA,OAaA,EAAA3D,EACA8C,EAAAvB,GAbAgC,EAAAK,GAAA,OAaA,EAAA5D,EACA+C,EAAAL,GAbAc,EAAAK,GAAA,OAaA,EAAA7D,EACAiE,EAAAP,GAbAD,EAAAK,GAAA,OAaA,EAAA9D,EACAkE,EAAA5C,EAAA,IAAAtB,EACAmE,EAAA5C,EAAA,IAAAvB,EACAoE,EAAA1B,EAAA,IAAA1C,EACAqE,GAAAX,EAAA,IAAA1D,EAEA4B,GAAA,IAAAxqB,EACAyqB,GAAA,IAAAtD,EACAyE,GAAA,IAAA3G,EACAiI,GAAA,IAAAhjB,EAEAwgB,GAAA,GAAAR,IAAAC,IAAAmB,IAAAgB,IACA,GAAA5B,GAAA,EAAAX,EAAA,MACA,CACA,IAAAY,GAAAtB,EAAAmB,GAAAnB,EAAAoB,GAAApB,EAAAuC,GAAAvC,EAAA6D,OAAA,KAEAnD,GADAW,QACAA,IAAAhB,EAAAiB,IAAAT,EAAAR,EAAAiB,GAAA,GAAAR,EAAAT,EAAAiB,GAAA,GAAAW,EAAA5B,EAAAiB,GAAA,GAAA2B,GAEA,IAAA1B,GAAA,GAAAR,IAAAC,IAAAkB,IAAAoB,IACA,GAAA/B,GAAA,EAAAZ,EAAA,MACA,CACA,IAAAa,GAAAxB,EAAAmB,GAAAX,EAAAR,EAAAoB,GAAAX,EAAAT,EAAAuC,GAAAV,EAAA7B,EAAA6D,GAAAlB,MAAA,KAEAhC,GADAY,QACAA,IAAAlB,EAAAmB,IAAAT,EAAAV,EAAAmB,GAAA,GAAAR,EAAAX,EAAAmB,GAAA,GAAAU,EAAA7B,EAAAmB,GAAA,GAAA8B,GAEA,IAAA7B,GAAA,GAAAR,IAAAC,IAAAiB,IAAAoB,IACA,GAAA9B,GAAA,EAAAb,EAAA,MACA,CACA,IAAAc,GAAA1B,EAAAmB,GAAAW,EAAA9B,EAAAoB,GAAAW,EAAA/B,EAAAuC,GAAAP,EAAAhC,EAAA6D,GAAAjB,MAAA,KAEAhC,GADAa,QACAA,IAAApB,EAAAqB,IAAAT,EAAAZ,EAAAqB,GAAA,GAAAR,EAAAb,EAAAqB,GAAA,GAAAS,EAAA9B,EAAAqB,GAAA,GAAA6B,GAEA,IAAAf,GAAA,GAAAJ,IAAAC,IAAAC,IAAAkB,IACA,GAAAhB,GAAA,EAAAZ,EAAA,MACA,CACA,IAAAa,GAAAzC,EAAAmB,GAAA0B,EAAA7C,EAAAoB,GAAA0B,EAAA9C,EAAAuC,GAAAQ,EAAA/C,EAAA6D,GAAAb,MAAA,KAEApB,GADAY,QACAA,IAAAnC,EAAAoC,IAAAL,EAAA/B,EAAAoC,GAAA,GAAAJ,EAAAhC,EAAAoC,GAAA,GAAAH,EAAAjC,EAAAoC,GAAA,GAAAe,GAEA,IAAAM,GAAA,GAAAL,IAAAC,IAAAC,IAAAC,MACA,GAAAE,GAAA,EAAApB,EAAA,MACA,CACA,IAAAqB,GAAA/D,EAAAmB,GAAA,EAAAnB,EAAAoB,GAAA,EAAApB,EAAAuC,GAAA,EAAAvC,EAAA6D,GAAA,WAEAnB,GADAoB,QACAA,IAAAzD,EAAA0D,IAAAN,EAAApD,EAAA0D,GAAA,GAAAL,EAAArD,EAAA0D,GAAA,GAAAJ,EAAAtD,EAAA0D,GAAA,GAAAH,IAGA,WAAAlD,EAAAC,EAAAC,EAAAgB,EAAAc,KAkBAlK,EAAAwL,uBAAAjE,OAuD2F7oB,KAAxCgoB,EAAA,WAAmB,OAAA1G,GAAqB7mB,KAAA5B,EAAAD,EAAAC,EAAAwG,QAAAxG,QAAAmvB,GAEvDnvB,EAAAyoB,eAKpCjiB,EAAAxG,QAAAyoB,EAxbA,wBC7BA,IAAAzf,EAAcjJ,EAAQ,KACtBm0B,EAAA3L,OAAA2L,QAEA,SAAAC,EAAAtsB,EAAAsR,EAAAzG,GACA,OAAAyG,EAAAzG,EACA7K,EAAAsR,IAAAtR,EAAA6K,IAAA7K,EACAA,EAAA6K,IAAA7K,EAAAsR,IAAAtR,EAOA,SAAAusB,EAAAjb,EAAAzG,EAAA1B,GACA,OAAAmI,GAAA,EAAAnI,GAAA0B,EAAA1B,EAGA,SAAAqjB,EAAAlb,EAAAzG,EAAA1B,GACA,OAAA1B,KAAAkC,IAAA2H,EAAAzG,GAAAwhB,EAAA,GACAljB,EAAAmI,IAAAzG,EAAAyG,GAQA,SAAAmb,EAAA1qB,EAAA2qB,GAEA,OADAA,EAAAvrB,EAAAurB,EAAA,GACA,iBAAA3qB,GAAAiL,SAAAjL,KAAA2qB,EAGA,SAAAC,EAAAC,GACA,oBAAAA,EAAA,UAAApqB,UAAA,0BACA,gBAAAgW,EAAAkU,GAEA,IAAAG,EADAH,EAAAvrB,EAAAurB,EAAA,GAEA,MAAAlU,EAEAqU,EAAAH,EACK,iBAAAlU,GAAAxL,SAAAwL,KAELqU,EAAArU,GAGA,IACAzZ,EADAqkB,EAAA,GAEA,SAAAyJ,EACA,IAAA9tB,EAAA,EAAiBA,EAAA6tB,EAAU7tB,IAC3BqkB,EAAArkB,GAAA0tB,EAAAjU,EAAAzZ,GAAA2tB,QAGA,IAAA3tB,EAAA,EAAiBA,EAAA6tB,EAAU7tB,IAC3BqkB,EAAArkB,GAAA8tB,EAGA,OAAAzJ,GAIA,SAAA0J,EAAAxb,EAAAzG,EAAA1B,EAAAia,GAEA,GADAA,KAAA,GACA9R,EAAAnS,SAAA0L,EAAA1L,OACA,UAAAqD,UAAA,0DAEA,QAAAzD,EAAA,EAAiBA,EAAAuS,EAAAnS,OAAgBJ,IACjCqkB,EAAArkB,GAAAwtB,EAAAjb,EAAAvS,GAAA8L,EAAA9L,GAAAoK,GAEA,OAAAia,EAGA,SAAA2J,EAAAhrB,EAAAirB,GAEA,oBADAjrB,EAAAZ,EAAAY,EAAA,IACA,UAAAS,UAAA,sCAEA,IADA,IAAA4gB,EAAA,GACArkB,EAAA,EAAiBA,EAAAgD,EAAOhD,IAAAqkB,EAAA5qB,KAAAw0B,GACxB,OAAA5J,EA0CA,SAAA6J,EAAApoB,EAAAC,GACA,OAAAD,EAAAC,OAgDA,SAAAooB,EAAAroB,EAAAC,EAAAqoB,EAAAC,GACA,OAAAb,EAAA1nB,EAAAC,EAAA,EAAA2C,KAAA4lB,KAAAF,EAAAC,IA+BAzuB,EAAAxG,QAAA,CACA80B,MACAK,MAvEA,SAAAvrB,GACA,OAAAA,EAAA0F,KAAAC,MAAA3F,IAuEAsgB,KApEA,SAAAtgB,GACA,OAAAA,EAAA,IACAA,EAAA,KACA,GAkEAwrB,SAjFA,SAAAxrB,GACA,OAAAA,EAAA0F,KAAA+b,GAAA,KAiFAgK,SA9EA,SAAAzrB,GACA,WAAAA,EAAA0F,KAAA+b,IA8EAiK,KAjEA,SAAAztB,EAAAqC,EAAAlH,GACA,oBAAAkH,GAAA,iBAAAlH,EACA,UAAAqH,UAAA,qDAGA,GAAAH,EAAAlH,EAAA,CACA,IAAAgO,EAAA9G,EACAA,EAAAlH,EACAA,EAAAgO,EAEA,IAAAukB,EAAAvyB,EAAAkH,EACA,WAAAqrB,EACAvyB,EAEA6E,EAAA0tB,EAAAjmB,KAAAC,OAAA1H,EAAAqC,GAAAqrB,IAoDAC,SA5CA,SAAAxkB,EAAAhK,GAEA,OADAgK,EAAA8jB,EAAA9jB,EAAA,EAAAhK,GACAA,EAAAsI,KAAAkC,IAAAR,EAAAhK,IA2CAyuB,SAhIA,SAAA7rB,EAAA2C,GAEA,oBADA3C,EAAAZ,EAAAY,EAAA,IACA,UAAAS,UAAA,sCAEA,kBADAkC,KAAA,MAEAA,EAAA,CAAYmpB,UAAA,IAEZ,IAAAC,EAAA3sB,EAAAuD,EAAAopB,OAAA,GACA,OAAAppB,EAAAmpB,SACAd,EAAAhrB,GAAAD,IAAA,SAAAqE,EAAApH,GACA,OAAAgD,GAAA,KAAAhD,EAAA+uB,IAAA/rB,EAAA,KAGAgrB,EAAAhrB,GAAAD,IAAA,SAAAqE,EAAApH,GACA,OAAAA,EAAA+uB,GAAA/rB,KAmHAwqB,OACAO,YACAN,cACAuB,WAjHA,SAAAC,EAAA7kB,EAAAia,GACAja,EAAAmjB,EAAAnjB,EAAA,KAEA,IAAAS,EAAAokB,EAAA7uB,OAAA,EACA8uB,EAAA9kB,EAAAS,EACAgD,EAAAnF,KAAAC,MAAAumB,GACAX,EAAAW,EAAArhB,EAEAshB,EAAAzmB,KAAA6J,IAAA1E,EAAA,EAAAhD,GACA/E,EAAAmpB,EAAAphB,EAAAohB,EAAA7uB,QACA2F,EAAAkpB,EAAAE,EAAAF,EAAA7uB,QACA,oBAAA0F,GAAA,iBAAAC,EACA,OAAAynB,EAAA1nB,EAAAC,EAAAwoB,GACG,GAAAjpB,MAAA9D,QAAAsE,IAAAR,MAAA9D,QAAAuE,GACH,OAAAgoB,EAAAjoB,EAAAC,EAAAwoB,EAAAlK,GAEA,UAAA5gB,UAAA,iDAAAoK,EAAA,QAAAshB,IAkGA5B,QACA6B,QA5MA,SAAA1K,GACA,OAAA6I,EAAA7I,EAAA,MA4MA2K,WAhMA,SAAA9c,EAAAzG,EAAA1B,GACA,IAAA/D,EAAAknB,EAAAE,EAAAlb,EAAAzG,EAAA1B,GAAA,KACA,OAAA/D,KAAA,IAAAA,IA+LA8nB,OACAmB,UA7CA,SAAAxpB,EAAAC,EAAAqoB,EAAAC,EAAAhK,GACAA,KAAA,GACA,QAAArkB,EAAA,EAAiBA,EAAA8F,EAAA1F,OAAcJ,IAC/BqkB,EAAArkB,GAAAmuB,EAAAroB,EAAA9F,GAAA+F,EAAA/F,GAAAouB,EAAAC,GAEA,OAAAhK,GAyCAkL,SAtCA,SAAAtuB,EAAAuuB,EAAAC,EAAAC,EAAAC,EAAApC,GAGA,GAAA7kB,KAAAkC,IAAA4kB,EAAAC,GAAAnC,EACA,OAAAoC,EAEA,IAAAE,GAAA3uB,EAAAuuB,IAAAC,EAAAD,IAAAG,EAAAD,KAUA,OATAnC,IACAoC,EAAAD,EACAE,EAAAD,EAAAC,EAAAD,EACAC,EAAAF,IAAAE,EAAAF,GAEAE,EAAAD,EAAAC,EAAAD,EACAC,EAAAF,IAAAE,EAAAF,IAGAE,GAuBAC,SAAAjC,EAAA,GACAkC,SAAAlC,EAAA,GACAmC,SAAAnC,EAAA","file":"7-da8ab08270e9c292a295.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.withPrefix = withPrefix;\nexports.navigateTo = exports.replace = exports.push = exports.navigate = exports.default = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _router = require(\"@reach/router\");\n\nvar _gatsby = require(\"gatsby\");\n\n/*global __PATH_PREFIX__ */\nfunction withPrefix(path) {\n  return normalizePath(__PATH_PREFIX__ + \"/\" + path);\n}\n\nfunction normalizePath(path) {\n  return path.replace(/\\/+/g, \"/\");\n}\n\nvar NavLinkPropTypes = {\n  activeClassName: _propTypes.default.string,\n  activeStyle: _propTypes.default.object // Set up IntersectionObserver\n\n};\n\nvar handleIntersection = function handleIntersection(el, cb) {\n  var io = new window.IntersectionObserver(function (entries) {\n    entries.forEach(function (entry) {\n      if (el === entry.target) {\n        // Check if element is within viewport, remove listener, destroy observer, and run link callback.\n        // MSEdge doesn't currently support isIntersecting, so also test for  an intersectionRatio > 0\n        if (entry.isIntersecting || entry.intersectionRatio > 0) {\n          io.unobserve(el);\n          io.disconnect();\n          cb();\n        }\n      }\n    });\n  }); // Add element to the observer\n\n  io.observe(el);\n};\n\nvar GatsbyLink =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(GatsbyLink, _React$Component);\n\n  function GatsbyLink(props) {\n    var _this;\n\n    _this = _React$Component.call(this) || this; // Default to no support for IntersectionObserver\n\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"defaultGetProps\", function (_ref) {\n      var isCurrent = _ref.isCurrent;\n\n      if (isCurrent) {\n        return {\n          className: [_this.props.className, _this.props.activeClassName].filter(Boolean).join(\" \"),\n          style: (0, _extends2.default)({}, _this.props.style, _this.props.activeStyle)\n        };\n      }\n\n      return null;\n    });\n    var IOSupported = false;\n\n    if (typeof window !== \"undefined\" && window.IntersectionObserver) {\n      IOSupported = true;\n    }\n\n    _this.state = {\n      IOSupported: IOSupported\n    };\n    _this.handleRef = _this.handleRef.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    return _this;\n  }\n\n  var _proto = GatsbyLink.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    // Preserve non IO functionality if no support\n    if (this.props.to !== prevProps.to && !this.state.IOSupported) {\n      ___loader.enqueue((0, _gatsby.parsePath)(this.props.to).pathname);\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    // Preserve non IO functionality if no support\n    if (!this.state.IOSupported) {\n      ___loader.enqueue((0, _gatsby.parsePath)(this.props.to).pathname);\n    }\n  };\n\n  _proto.handleRef = function handleRef(ref) {\n    var _this2 = this;\n\n    this.props.innerRef && this.props.innerRef(ref);\n\n    if (this.state.IOSupported && ref) {\n      // If IO supported and element reference found, setup Observer functionality\n      handleIntersection(ref, function () {\n        ___loader.enqueue((0, _gatsby.parsePath)(_this2.props.to).pathname);\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    var _this$props = this.props,\n        to = _this$props.to,\n        _this$props$getProps = _this$props.getProps,\n        getProps = _this$props$getProps === void 0 ? this.defaultGetProps : _this$props$getProps,\n        _onClick = _this$props.onClick,\n        _onMouseEnter = _this$props.onMouseEnter,\n        $activeClassName = _this$props.activeClassName,\n        $activeStyle = _this$props.activeStyle,\n        $ref = _this$props.ref,\n        $innerRef = _this$props.innerRef,\n        state = _this$props.state,\n        replace = _this$props.replace,\n        rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"to\", \"getProps\", \"onClick\", \"onMouseEnter\", \"activeClassName\", \"activeStyle\", \"ref\", \"innerRef\", \"state\", \"replace\"]);\n    var prefixedTo = withPrefix(to);\n    return _react.default.createElement(_router.Link, (0, _extends2.default)({\n      to: prefixedTo,\n      state: state,\n      getProps: getProps,\n      innerRef: this.handleRef,\n      onMouseEnter: function onMouseEnter(e) {\n        // eslint-disable-line\n        _onMouseEnter && _onMouseEnter(e);\n\n        ___loader.hovering((0, _gatsby.parsePath)(to).pathname);\n      },\n      onClick: function onClick(e) {\n        // eslint-disable-line\n        _onClick && _onClick(e);\n\n        if (e.button === 0 && // ignore right clicks\n        !_this3.props.target && // let browser handle \"target=_blank\"\n        !e.defaultPrevented && // onClick prevented default\n        !e.metaKey && // ignore clicks with modifier keys...\n        !e.altKey && !e.ctrlKey && !e.shiftKey) {\n          e.preventDefault(); // Make sure the necessary scripts and data are\n          // loaded before continuing.\n\n          navigate(to, {\n            state: state,\n            replace: replace\n          });\n        }\n\n        return true;\n      }\n    }, rest));\n  };\n\n  return GatsbyLink;\n}(_react.default.Component);\n\nGatsbyLink.propTypes = (0, _extends2.default)({}, NavLinkPropTypes, {\n  innerRef: _propTypes.default.func,\n  onClick: _propTypes.default.func,\n  to: _propTypes.default.string.isRequired,\n  replace: _propTypes.default.bool\n});\nvar _default = GatsbyLink;\nexports.default = _default;\n\nvar navigate = function navigate(to, options) {\n  window.___navigate(withPrefix(to), options);\n};\n\nexports.navigate = navigate;\n\nvar push = function push(to) {\n  console.warn(\"The \\\"push\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"navigate\\\" instead.\");\n\n  window.___push(withPrefix(to));\n};\n\nexports.push = push;\n\nvar replace = function replace(to) {\n  console.warn(\"The \\\"replace\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"navigate\\\" instead.\");\n\n  window.___replace(withPrefix(to));\n}; // TODO: Remove navigateTo for Gatsby v3\n\n\nexports.replace = replace;\n\nvar navigateTo = function navigateTo(to) {\n  console.warn(\"The \\\"navigateTo\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"navigate\\\" instead.\");\n  return push(to);\n};\n\nexports.navigateTo = navigateTo;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","module.exports = function () {\n    for (var i = 0; i < arguments.length; i++) {\n        if (arguments[i] !== undefined) return arguments[i];\n    }\n};\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)\nvar $export = require('./_export');\n\n$export($export.S, 'Array', { isArray: require('./_is-array') });\n","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('convert-length')) :\n    typeof define === 'function' && define.amd ? define(['convert-length'], factory) :\n    (global.canvasSketch = factory(null));\n}(this, (function (convertLength) {\n\n    convertLength = convertLength && convertLength.hasOwnProperty('default') ? convertLength['default'] : convertLength;\n\n    var defined = function () {\n        for (var i = 0; i < arguments.length; i++) {\n            if (arguments[i] !== undefined) return arguments[i];\n        }\n    };\n\n    /*\n    object-assign\n    (c) Sindre Sorhus\n    @license MIT\n    */\n    /* eslint-disable no-unused-vars */\n    var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n    function toObject(val) {\n    \tif (val === null || val === undefined) {\n    \t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n    \t}\n\n    \treturn Object(val);\n    }\n\n    function shouldUseNative() {\n    \ttry {\n    \t\tif (!Object.assign) {\n    \t\t\treturn false;\n    \t\t}\n\n    \t\t// Detect buggy property enumeration order in older V8 versions.\n\n    \t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n    \t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n    \t\ttest1[5] = 'de';\n    \t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n    \t\t\treturn false;\n    \t\t}\n\n    \t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n    \t\tvar test2 = {};\n    \t\tfor (var i = 0; i < 10; i++) {\n    \t\t\ttest2['_' + String.fromCharCode(i)] = i;\n    \t\t}\n    \t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n    \t\t\treturn test2[n];\n    \t\t});\n    \t\tif (order2.join('') !== '0123456789') {\n    \t\t\treturn false;\n    \t\t}\n\n    \t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n    \t\tvar test3 = {};\n    \t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n    \t\t\ttest3[letter] = letter;\n    \t\t});\n    \t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n    \t\t\t\t'abcdefghijklmnopqrst') {\n    \t\t\treturn false;\n    \t\t}\n\n    \t\treturn true;\n    \t} catch (err) {\n    \t\t// We don't expect any of the above to throw, but better to be safe.\n    \t\treturn false;\n    \t}\n    }\n\n    var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {\n    \tvar from;\n    \tvar to = toObject(target);\n    \tvar symbols;\n\n    \tfor (var s = 1; s < arguments.length; s++) {\n    \t\tfrom = Object(arguments[s]);\n\n    \t\tfor (var key in from) {\n    \t\t\tif (hasOwnProperty.call(from, key)) {\n    \t\t\t\tto[key] = from[key];\n    \t\t\t}\n    \t\t}\n\n    \t\tif (getOwnPropertySymbols) {\n    \t\t\tsymbols = getOwnPropertySymbols(from);\n    \t\t\tfor (var i = 0; i < symbols.length; i++) {\n    \t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n    \t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t}\n\n    \treturn to;\n    };\n\n    var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n    function createCommonjsModule(fn, module) {\n    \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n    }\n\n    var browser =\n      commonjsGlobal.performance &&\n      commonjsGlobal.performance.now ? function now() {\n        return performance.now()\n      } : Date.now || function now() {\n        return +new Date\n      };\n\n    var isPromise_1 = isPromise;\n\n    function isPromise(obj) {\n      return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n    }\n\n    var isDom = isNode;\n\n    function isNode (val) {\n      return (!val || typeof val !== 'object')\n        ? false\n        : (typeof window === 'object' && typeof window.Node === 'object')\n          ? (val instanceof window.Node)\n          : (typeof val.nodeType === 'number') &&\n            (typeof val.nodeName === 'string')\n    }\n\n    function getClientAPI() {\n        return typeof window !== 'undefined' && window['canvas-sketch-cli'];\n    }\n\n    function isBrowser() {\n        return typeof document !== 'undefined';\n    }\n\n    function isWebGLContext(ctx) {\n        return typeof ctx.clear === 'function' && typeof ctx.clearColor === 'function' && typeof ctx.bufferData === 'function';\n    }\n\n    function isCanvas(element) {\n        return isDom(element) && /canvas/i.test(element.nodeName) && typeof element.getContext === 'function';\n    }\n\n    var keys = createCommonjsModule(function (module, exports) {\n    exports = module.exports = typeof Object.keys === 'function'\n      ? Object.keys : shim;\n\n    exports.shim = shim;\n    function shim (obj) {\n      var keys = [];\n      for (var key in obj) keys.push(key);\n      return keys;\n    }\n    });\n    var keys_1 = keys.shim;\n\n    var is_arguments = createCommonjsModule(function (module, exports) {\n    var supportsArgumentsClass = (function(){\n      return Object.prototype.toString.call(arguments)\n    })() == '[object Arguments]';\n\n    exports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\n    exports.supported = supported;\n    function supported(object) {\n      return Object.prototype.toString.call(object) == '[object Arguments]';\n    }\n    exports.unsupported = unsupported;\n    function unsupported(object){\n      return object &&\n        typeof object == 'object' &&\n        typeof object.length == 'number' &&\n        Object.prototype.hasOwnProperty.call(object, 'callee') &&\n        !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n        false;\n    }});\n    var is_arguments_1 = is_arguments.supported;\n    var is_arguments_2 = is_arguments.unsupported;\n\n    var deepEqual_1 = createCommonjsModule(function (module) {\n    var pSlice = Array.prototype.slice;\n\n\n\n    var deepEqual = module.exports = function (actual, expected, opts) {\n      if (!opts) opts = {};\n      // 7.1. All identical values are equivalent, as determined by ===.\n      if (actual === expected) {\n        return true;\n\n      } else if (actual instanceof Date && expected instanceof Date) {\n        return actual.getTime() === expected.getTime();\n\n      // 7.3. Other pairs that do not both pass typeof value == 'object',\n      // equivalence is determined by ==.\n      } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n        return opts.strict ? actual === expected : actual == expected;\n\n      // 7.4. For all other Object pairs, including Array objects, equivalence is\n      // determined by having the same number of owned properties (as verified\n      // with Object.prototype.hasOwnProperty.call), the same set of keys\n      // (although not necessarily the same order), equivalent values for every\n      // corresponding key, and an identical 'prototype' property. Note: this\n      // accounts for both named and indexed properties on Arrays.\n      } else {\n        return objEquiv(actual, expected, opts);\n      }\n    };\n\n    function isUndefinedOrNull(value) {\n      return value === null || value === undefined;\n    }\n\n    function isBuffer (x) {\n      if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n      if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n        return false;\n      }\n      if (x.length > 0 && typeof x[0] !== 'number') return false;\n      return true;\n    }\n\n    function objEquiv(a, b, opts) {\n      var i, key;\n      if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n        return false;\n      // an identical 'prototype' property.\n      if (a.prototype !== b.prototype) return false;\n      //~~~I've managed to break Object.keys through screwy arguments passing.\n      //   Converting to array solves the problem.\n      if (is_arguments(a)) {\n        if (!is_arguments(b)) {\n          return false;\n        }\n        a = pSlice.call(a);\n        b = pSlice.call(b);\n        return deepEqual(a, b, opts);\n      }\n      if (isBuffer(a)) {\n        if (!isBuffer(b)) {\n          return false;\n        }\n        if (a.length !== b.length) return false;\n        for (i = 0; i < a.length; i++) {\n          if (a[i] !== b[i]) return false;\n        }\n        return true;\n      }\n      try {\n        var ka = keys(a),\n            kb = keys(b);\n      } catch (e) {//happens when one is a string literal and the other isn't\n        return false;\n      }\n      // having the same number of owned properties (keys incorporates\n      // hasOwnProperty)\n      if (ka.length != kb.length)\n        return false;\n      //the same set of keys (although not necessarily the same order),\n      ka.sort();\n      kb.sort();\n      //~~~cheap key test\n      for (i = ka.length - 1; i >= 0; i--) {\n        if (ka[i] != kb[i])\n          return false;\n      }\n      //equivalent values for every corresponding key, and\n      //~~~possibly expensive deep test\n      for (i = ka.length - 1; i >= 0; i--) {\n        key = ka[i];\n        if (!deepEqual(a[key], b[key], opts)) return false;\n      }\n      return typeof a === typeof b;\n    }\n    });\n\n    var dateformat = createCommonjsModule(function (module, exports) {\n    /*\n     * Date Format 1.2.3\n     * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n     * MIT license\n     *\n     * Includes enhancements by Scott Trenda <scott.trenda.net>\n     * and Kris Kowal <cixar.com/~kris.kowal/>\n     *\n     * Accepts a date, a mask, or a date and a mask.\n     * Returns a formatted version of the given date.\n     * The date defaults to the current date/time.\n     * The mask defaults to dateFormat.masks.default.\n     */\n\n    (function(global) {\n\n      var dateFormat = (function() {\n          var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|\"[^\"]*\"|'[^']*'/g;\n          var timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n          var timezoneClip = /[^-+\\dA-Z]/g;\n      \n          // Regexes and supporting functions are cached through closure\n          return function (date, mask, utc, gmt) {\n      \n            // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n            if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n              mask = date;\n              date = undefined;\n            }\n      \n            date = date || new Date;\n      \n            if(!(date instanceof Date)) {\n              date = new Date(date);\n            }\n      \n            if (isNaN(date)) {\n              throw TypeError('Invalid date');\n            }\n      \n            mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\n      \n            // Allow setting the utc/gmt argument via the mask\n            var maskSlice = mask.slice(0, 4);\n            if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n              mask = mask.slice(4);\n              utc = true;\n              if (maskSlice === 'GMT:') {\n                gmt = true;\n              }\n            }\n      \n            var _ = utc ? 'getUTC' : 'get';\n            var d = date[_ + 'Date']();\n            var D = date[_ + 'Day']();\n            var m = date[_ + 'Month']();\n            var y = date[_ + 'FullYear']();\n            var H = date[_ + 'Hours']();\n            var M = date[_ + 'Minutes']();\n            var s = date[_ + 'Seconds']();\n            var L = date[_ + 'Milliseconds']();\n            var o = utc ? 0 : date.getTimezoneOffset();\n            var W = getWeek(date);\n            var N = getDayOfWeek(date);\n            var flags = {\n              d:    d,\n              dd:   pad(d),\n              ddd:  dateFormat.i18n.dayNames[D],\n              dddd: dateFormat.i18n.dayNames[D + 7],\n              m:    m + 1,\n              mm:   pad(m + 1),\n              mmm:  dateFormat.i18n.monthNames[m],\n              mmmm: dateFormat.i18n.monthNames[m + 12],\n              yy:   String(y).slice(2),\n              yyyy: y,\n              h:    H % 12 || 12,\n              hh:   pad(H % 12 || 12),\n              H:    H,\n              HH:   pad(H),\n              M:    M,\n              MM:   pad(M),\n              s:    s,\n              ss:   pad(s),\n              l:    pad(L, 3),\n              L:    pad(Math.round(L / 10)),\n              t:    H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\n              tt:   H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\n              T:    H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\n              TT:   H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\n              Z:    gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n              o:    (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n              S:    ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],\n              W:    W,\n              N:    N\n            };\n      \n            return mask.replace(token, function (match) {\n              if (match in flags) {\n                return flags[match];\n              }\n              return match.slice(1, match.length - 1);\n            });\n          };\n        })();\n\n      dateFormat.masks = {\n        'default':               'ddd mmm dd yyyy HH:MM:ss',\n        'shortDate':             'm/d/yy',\n        'mediumDate':            'mmm d, yyyy',\n        'longDate':              'mmmm d, yyyy',\n        'fullDate':              'dddd, mmmm d, yyyy',\n        'shortTime':             'h:MM TT',\n        'mediumTime':            'h:MM:ss TT',\n        'longTime':              'h:MM:ss TT Z',\n        'isoDate':               'yyyy-mm-dd',\n        'isoTime':               'HH:MM:ss',\n        'isoDateTime':           'yyyy-mm-dd\\'T\\'HH:MM:sso',\n        'isoUtcDateTime':        'UTC:yyyy-mm-dd\\'T\\'HH:MM:ss\\'Z\\'',\n        'expiresHeaderFormat':   'ddd, dd mmm yyyy HH:MM:ss Z'\n      };\n\n      // Internationalization strings\n      dateFormat.i18n = {\n        dayNames: [\n          'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',\n          'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n        ],\n        monthNames: [\n          'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\n          'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\n        ],\n        timeNames: [\n          'a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM'\n        ]\n      };\n\n    function pad(val, len) {\n      val = String(val);\n      len = len || 2;\n      while (val.length < len) {\n        val = '0' + val;\n      }\n      return val;\n    }\n\n    /**\n     * Get the ISO 8601 week number\n     * Based on comments from\n     * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n     *\n     * @param  {Object} `date`\n     * @return {Number}\n     */\n    function getWeek(date) {\n      // Remove time components of date\n      var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n      // Change date to Thursday same week\n      targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\n\n      // Take January 4th as it is always in week 1 (see ISO 8601)\n      var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\n\n      // Change date to Thursday same week\n      firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\n\n      // Check if daylight-saving-time-switch occurred and correct for it\n      var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n      targetThursday.setHours(targetThursday.getHours() - ds);\n\n      // Number of weeks between target Thursday and first Thursday\n      var weekDiff = (targetThursday - firstThursday) / (86400000*7);\n      return 1 + Math.floor(weekDiff);\n    }\n\n    /**\n     * Get ISO-8601 numeric representation of the day of the week\n     * 1 (for Monday) through 7 (for Sunday)\n     * \n     * @param  {Object} `date`\n     * @return {Number}\n     */\n    function getDayOfWeek(date) {\n      var dow = date.getDay();\n      if(dow === 0) {\n        dow = 7;\n      }\n      return dow;\n    }\n\n    /**\n     * kind-of shortcut\n     * @param  {*} val\n     * @return {String}\n     */\n    function kindOf(val) {\n      if (val === null) {\n        return 'null';\n      }\n\n      if (val === undefined) {\n        return 'undefined';\n      }\n\n      if (typeof val !== 'object') {\n        return typeof val;\n      }\n\n      if (Array.isArray(val)) {\n        return 'array';\n      }\n\n      return {}.toString.call(val)\n        .slice(8, -1).toLowerCase();\n    }\n\n\n      if (typeof undefined === 'function' && undefined.amd) {\n        undefined(function () {\n          return dateFormat;\n        });\n      } else {\n        module.exports = dateFormat;\n      }\n    })(commonjsGlobal);\n    });\n\n    /*!\n     * repeat-string <https://github.com/jonschlinkert/repeat-string>\n     *\n     * Copyright (c) 2014-2015, Jon Schlinkert.\n     * Licensed under the MIT License.\n     */\n\n    /**\n     * Results cache\n     */\n\n    var res = '';\n    var cache;\n\n    /**\n     * Expose `repeat`\n     */\n\n    var repeatString = repeat;\n\n    /**\n     * Repeat the given `string` the specified `number`\n     * of times.\n     *\n     * **Example:**\n     *\n     * ```js\n     * var repeat = require('repeat-string');\n     * repeat('A', 5);\n     * //=> AAAAA\n     * ```\n     *\n     * @param {String} `string` The string to repeat\n     * @param {Number} `number` The number of times to repeat the string\n     * @return {String} Repeated string\n     * @api public\n     */\n\n    function repeat(str, num) {\n      if (typeof str !== 'string') {\n        throw new TypeError('expected a string');\n      }\n\n      // cover common, quick use cases\n      if (num === 1) return str;\n      if (num === 2) return str + str;\n\n      var max = str.length * num;\n      if (cache !== str || typeof cache === 'undefined') {\n        cache = str;\n        res = '';\n      } else if (res.length >= max) {\n        return res.substr(0, max);\n      }\n\n      while (max > res.length && num > 1) {\n        if (num & 1) {\n          res += str;\n        }\n\n        num >>= 1;\n        str += str;\n      }\n\n      res += str;\n      res = res.substr(0, max);\n      return res;\n    }\n\n    var padLeft = function padLeft(str, num, ch) {\n      str = str.toString();\n\n      if (typeof num === 'undefined') {\n        return str;\n      }\n\n      if (ch === 0) {\n        ch = '0';\n      } else if (ch) {\n        ch = ch.toString();\n      } else {\n        ch = ' ';\n      }\n\n      return repeatString(ch, num - str.length) + str;\n    };\n\n    var noop = function () {};\n    var link;\n    var supportedEncodings = ['image/png','image/jpeg','image/webp'];\n    function exportCanvas(canvas, opt) {\n        if ( opt === void 0 ) opt = {};\n\n        var encoding = opt.encoding || 'image/png';\n        if (!supportedEncodings.includes(encoding)) \n            { throw new Error((\"Invalid canvas encoding \" + encoding)); }\n        var extension = (encoding.split('/')[1] || '').replace(/jpeg/i, 'jpg');\n        if (extension) \n            { extension = (\".\" + extension).toLowerCase(); }\n        return {\n            extension: extension,\n            type: encoding,\n            dataURL: canvas.toDataURL(encoding, opt.encodingQuality)\n        };\n    }\n\n    function createBlobFromDataURL(dataURL) {\n        return new Promise(function (resolve) {\n            var splitIndex = dataURL.indexOf(',');\n            if (splitIndex === -1) {\n                resolve(new window.Blob());\n                return;\n            }\n            var base64 = dataURL.slice(splitIndex + 1);\n            var byteString = window.atob(base64);\n            var mimeMatch = /data:([^;+]);/.exec(dataURL);\n            var mime = (mimeMatch ? mimeMatch[1] : '') || undefined;\n            var ab = new ArrayBuffer(byteString.length);\n            var ia = new Uint8Array(ab);\n            for (var i = 0;i < byteString.length; i++) {\n                ia[i] = byteString.charCodeAt(i);\n            }\n            resolve(new window.Blob([ab], {\n                type: mime\n            }));\n        });\n    }\n\n    function saveDataURL(dataURL, opts) {\n        if ( opts === void 0 ) opts = {};\n\n        return createBlobFromDataURL(dataURL).then(function (blob) { return saveBlob(blob, opts); });\n    }\n\n    function saveBlob(blob, opts) {\n        if ( opts === void 0 ) opts = {};\n\n        return new Promise(function (resolve) {\n            opts = objectAssign({\n                extension: '',\n                prefix: '',\n                suffix: ''\n            }, opts);\n            var filename = resolveFilename(opts);\n            var client = getClientAPI();\n            if (client && typeof client.saveBlob === 'function' && client.output) {\n                return client.saveBlob(blob, objectAssign({}, opts, {\n                    filename: filename\n                })).then(function (ev) { return resolve(ev); });\n            } else {\n                if (!link) {\n                    link = document.createElement('a');\n                    link.style.visibility = 'hidden';\n                    link.target = '_blank';\n                }\n                link.download = filename;\n                link.href = window.URL.createObjectURL(blob);\n                document.body.appendChild(link);\n                link.onclick = (function () {\n                    link.onclick = noop;\n                    setTimeout(function () {\n                        window.URL.revokeObjectURL(blob);\n                        document.body.removeChild(link);\n                        link.removeAttribute('href');\n                        resolve({\n                            filename: filename,\n                            client: false\n                        });\n                    });\n                });\n                link.click();\n            }\n        });\n    }\n\n    function saveFile(data, opts) {\n        if ( opts === void 0 ) opts = {};\n\n        var parts = Array.isArray(data) ? data : [data];\n        var blob = new window.Blob(parts, {\n            type: opts.type || ''\n        });\n        return saveBlob(blob, opts);\n    }\n\n    function getFileName() {\n        var dateFormatStr = \"yyyy.mm.dd-HH.MM.ss\";\n        return dateformat(new Date(), dateFormatStr);\n    }\n\n    function resolveFilename(opt) {\n        if ( opt === void 0 ) opt = {};\n\n        opt = objectAssign({}, opt);\n        if (typeof opt.file === 'function') {\n            return opt.file(opt);\n        } else if (opt.file) {\n            return opt.file;\n        }\n        var frame = null;\n        var extension = '';\n        if (typeof opt.extension === 'string') \n            { extension = opt.extension; }\n        if (typeof opt.frame === 'number') {\n            var totalFrames;\n            if (typeof opt.totalFrames === 'number') {\n                totalFrames = opt.totalFrames;\n            } else {\n                totalFrames = Math.max(1000, opt.frame);\n            }\n            frame = padLeft(String(opt.frame), String(totalFrames).length, '0');\n        }\n        var layerStr = isFinite(opt.totalLayers) && isFinite(opt.layer) && opt.totalLayers > 1 ? (\"\" + (opt.layer)) : '';\n        if (frame != null) {\n            return [layerStr,frame].filter(Boolean).join('-') + extension;\n        } else {\n            var defaultFileName = opt.timeStamp;\n            return [opt.prefix,opt.name || defaultFileName,layerStr,opt.hash,opt.suffix].filter(Boolean).join('-') + extension;\n        }\n    }\n\n    var commonTypos = {\n        dimension: 'dimensions',\n        animated: 'animate',\n        animating: 'animate',\n        unit: 'units',\n        P5: 'p5',\n        pixellated: 'pixelated',\n        looping: 'loop',\n        pixelPerInch: 'pixels'\n    };\n    var allKeys = ['dimensions','units','pixelsPerInch','orientation','scaleToFit',\n        'scaleToView','bleed','pixelRatio','exportPixelRatio','maxPixelRatio','scaleContext',\n        'resizeCanvas','styleCanvas','canvas','context','attributes','parent','file',\n        'name','prefix','suffix','animate','playing','loop','duration','totalFrames',\n        'fps','playbackRate','timeScale','frame','time','flush','pixelated','hotkeys',\n        'p5','id','scaleToFitPadding','data','params','encoding','encodingQuality'];\n    var checkSettings = function (settings) {\n        var keys = Object.keys(settings);\n        keys.forEach(function (key) {\n            if (key in commonTypos) {\n                var actual = commonTypos[key];\n                console.warn((\"[canvas-sketch] Could not recognize the setting \\\"\" + key + \"\\\", did you mean \\\"\" + actual + \"\\\"?\"));\n            } else if (!allKeys.includes(key)) {\n                console.warn((\"[canvas-sketch] Could not recognize the setting \\\"\" + key + \"\\\"\"));\n            }\n        });\n    };\n\n    function keyboardShortcuts (opt) {\n        if ( opt === void 0 ) opt = {};\n\n        var handler = function (ev) {\n            if (!opt.enabled()) \n                { return; }\n            var client = getClientAPI();\n            if (ev.keyCode === 83 && !ev.altKey && (ev.metaKey || ev.ctrlKey)) {\n                ev.preventDefault();\n                opt.save(ev);\n            } else if (ev.keyCode === 32) {\n                opt.togglePlay(ev);\n            } else if (client && !ev.altKey && ev.keyCode === 75 && (ev.metaKey || ev.ctrlKey)) {\n                ev.preventDefault();\n                opt.commit(ev);\n            }\n        };\n        var attach = function () {\n            window.addEventListener('keydown', handler);\n        };\n        var detach = function () {\n            window.removeEventListener('keydown', handler);\n        };\n        return {\n            attach: attach,\n            detach: detach\n        };\n    }\n\n    var defaultUnits = 'mm';\n    var data = [['postcard',101.6,152.4],['poster-small',280,430],['poster',460,610],\n        ['poster-large',610,910],['business-card',50.8,88.9],['2r',64,89],['3r',89,127],\n        ['4r',102,152],['5r',127,178],['6r',152,203],['8r',203,254],['10r',254,305],['11r',\n        279,356],['12r',305,381],['a0',841,1189],['a1',594,841],['a2',420,594],['a3',\n        297,420],['a4',210,297],['a5',148,210],['a6',105,148],['a7',74,105],['a8',52,\n        74],['a9',37,52],['a10',26,37],['2a0',1189,1682],['4a0',1682,2378],['b0',1000,\n        1414],['b1',707,1000],['b1+',720,1020],['b2',500,707],['b2+',520,720],['b3',353,\n        500],['b4',250,353],['b5',176,250],['b6',125,176],['b7',88,125],['b8',62,88],\n        ['b9',44,62],['b10',31,44],['b11',22,32],['b12',16,22],['c0',917,1297],['c1',\n        648,917],['c2',458,648],['c3',324,458],['c4',229,324],['c5',162,229],['c6',114,\n        162],['c7',81,114],['c8',57,81],['c9',40,57],['c10',28,40],['c11',22,32],['c12',\n        16,22],['half-letter',5.5,8.5,'in'],['letter',8.5,11,'in'],['legal',8.5,14,'in'],\n        ['junior-legal',5,8,'in'],['ledger',11,17,'in'],['tabloid',11,17,'in'],['ansi-a',\n        8.5,11.0,'in'],['ansi-b',11.0,17.0,'in'],['ansi-c',17.0,22.0,'in'],['ansi-d',\n        22.0,34.0,'in'],['ansi-e',34.0,44.0,'in'],['arch-a',9,12,'in'],['arch-b',12,18,\n        'in'],['arch-c',18,24,'in'],['arch-d',24,36,'in'],['arch-e',36,48,'in'],['arch-e1',\n        30,42,'in'],['arch-e2',26,38,'in'],['arch-e3',27,39,'in']];\n    var paperSizes = data.reduce(function (dict, preset) {\n        var item = {\n            units: preset[3] || defaultUnits,\n            dimensions: [preset[1],preset[2]]\n        };\n        dict[preset[0]] = item;\n        dict[preset[0].replace(/-/g, ' ')] = item;\n        return dict;\n    }, {})\n\n    function getDimensionsFromPreset(dimensions, unitsTo, pixelsPerInch) {\n        if ( unitsTo === void 0 ) unitsTo = 'px';\n        if ( pixelsPerInch === void 0 ) pixelsPerInch = 72;\n\n        if (typeof dimensions === 'string') {\n            var key = dimensions.toLowerCase();\n            if (!(key in paperSizes)) {\n                throw new Error((\"The dimension preset \\\"\" + dimensions + \"\\\" is not supported or could not be found; try using a4, a3, postcard, letter, etc.\"));\n            }\n            var preset = paperSizes[key];\n            return preset.dimensions.map(function (d) { return convertDistance(d, preset.units, unitsTo, pixelsPerInch); });\n        } else {\n            return dimensions;\n        }\n    }\n\n    function convertDistance(dimension, unitsFrom, unitsTo, pixelsPerInch) {\n        if ( unitsFrom === void 0 ) unitsFrom = 'px';\n        if ( unitsTo === void 0 ) unitsTo = 'px';\n        if ( pixelsPerInch === void 0 ) pixelsPerInch = 72;\n\n        return convertLength(dimension, unitsFrom, unitsTo, {\n            pixelsPerInch: pixelsPerInch,\n            precision: 4,\n            roundPixel: true\n        });\n    }\n\n    function checkIfHasDimensions(settings) {\n        if (!settings.dimensions) \n            { return false; }\n        if (typeof settings.dimensions === 'string') \n            { return true; }\n        if (Array.isArray(settings.dimensions) && settings.dimensions.length >= 2) \n            { return true; }\n        return false;\n    }\n\n    function getParentSize(props, settings) {\n        if (!isBrowser()) {\n            return [300,150];\n        }\n        var element = settings.parent || window;\n        if (element === window || element === document || element === document.body) {\n            return [window.innerWidth,window.innerHeight];\n        } else {\n            var ref = element.getBoundingClientRect();\n            var width = ref.width;\n            var height = ref.height;\n            return [width,height];\n        }\n    }\n\n    function resizeCanvas(props, settings) {\n        var width, height;\n        var styleWidth, styleHeight;\n        var canvasWidth, canvasHeight;\n        var browser = isBrowser();\n        var dimensions = settings.dimensions;\n        var hasDimensions = checkIfHasDimensions(settings);\n        var exporting = props.exporting;\n        var scaleToFit = hasDimensions ? settings.scaleToFit !== false : false;\n        var scaleToView = !exporting && hasDimensions ? settings.scaleToView : true;\n        if (!browser) \n            { scaleToFit = (scaleToView = false); }\n        var units = settings.units;\n        var pixelsPerInch = typeof settings.pixelsPerInch === 'number' && isFinite(settings.pixelsPerInch) ? settings.pixelsPerInch : 72;\n        var bleed = defined(settings.bleed, 0);\n        var devicePixelRatio = browser ? window.devicePixelRatio : 1;\n        var basePixelRatio = scaleToView ? devicePixelRatio : 1;\n        var pixelRatio, exportPixelRatio;\n        if (typeof settings.pixelRatio === 'number' && isFinite(settings.pixelRatio)) {\n            pixelRatio = settings.pixelRatio;\n            exportPixelRatio = defined(settings.exportPixelRatio, pixelRatio);\n        } else {\n            if (hasDimensions) {\n                pixelRatio = basePixelRatio;\n                exportPixelRatio = defined(settings.exportPixelRatio, 1);\n            } else {\n                pixelRatio = devicePixelRatio;\n                exportPixelRatio = defined(settings.exportPixelRatio, pixelRatio);\n            }\n        }\n        if (typeof settings.maxPixelRatio === 'number' && isFinite(settings.maxPixelRatio)) {\n            pixelRatio = Math.min(settings.maxPixelRatio, pixelRatio);\n            exportPixelRatio = Math.min(settings.maxPixelRatio, exportPixelRatio);\n        }\n        if (exporting) {\n            pixelRatio = exportPixelRatio;\n        }\n        var ref = getParentSize(props, settings);\n        var parentWidth = ref[0];\n        var parentHeight = ref[1];\n        var trimWidth, trimHeight;\n        if (hasDimensions) {\n            var result = getDimensionsFromPreset(dimensions, units, pixelsPerInch);\n            var highest = Math.max(result[0], result[1]);\n            var lowest = Math.min(result[0], result[1]);\n            if (settings.orientation) {\n                var landscape = settings.orientation === 'landscape';\n                width = landscape ? highest : lowest;\n                height = landscape ? lowest : highest;\n            } else {\n                width = result[0];\n                height = result[1];\n            }\n            trimWidth = width;\n            trimHeight = height;\n            width += bleed * 2;\n            height += bleed * 2;\n        } else {\n            width = parentWidth;\n            height = parentHeight;\n            trimWidth = width;\n            trimHeight = height;\n        }\n        var realWidth = width;\n        var realHeight = height;\n        if (hasDimensions && units) {\n            realWidth = convertDistance(width, units, 'px', pixelsPerInch);\n            realHeight = convertDistance(height, units, 'px', pixelsPerInch);\n        }\n        styleWidth = Math.round(realWidth);\n        styleHeight = Math.round(realHeight);\n        if (scaleToFit && !exporting && hasDimensions) {\n            var aspect = width / height;\n            var windowAspect = parentWidth / parentHeight;\n            var scaleToFitPadding = defined(settings.scaleToFitPadding, 40);\n            var maxWidth = Math.round(parentWidth - scaleToFitPadding * 2);\n            var maxHeight = Math.round(parentHeight - scaleToFitPadding * 2);\n            if (styleWidth > maxWidth || styleHeight > maxHeight) {\n                if (windowAspect > aspect) {\n                    styleHeight = maxHeight;\n                    styleWidth = Math.round(styleHeight * aspect);\n                } else {\n                    styleWidth = maxWidth;\n                    styleHeight = Math.round(styleWidth / aspect);\n                }\n            }\n        }\n        canvasWidth = scaleToView ? Math.round(pixelRatio * styleWidth) : Math.round(pixelRatio * realWidth);\n        canvasHeight = scaleToView ? Math.round(pixelRatio * styleHeight) : Math.round(pixelRatio * realHeight);\n        var viewportWidth = scaleToView ? Math.round(styleWidth) : Math.round(realWidth);\n        var viewportHeight = scaleToView ? Math.round(styleHeight) : Math.round(realHeight);\n        var scaleX = canvasWidth / width;\n        var scaleY = canvasHeight / height;\n        return {\n            bleed: bleed,\n            pixelRatio: pixelRatio,\n            width: width,\n            height: height,\n            dimensions: [width,height],\n            units: units || 'px',\n            scaleX: scaleX,\n            scaleY: scaleY,\n            viewportWidth: viewportWidth,\n            viewportHeight: viewportHeight,\n            canvasWidth: canvasWidth,\n            canvasHeight: canvasHeight,\n            trimWidth: trimWidth,\n            trimHeight: trimHeight,\n            styleWidth: styleWidth,\n            styleHeight: styleHeight\n        };\n    }\n\n    var getCanvasContext_1 = getCanvasContext;\n    function getCanvasContext (type, opts) {\n      if (typeof type !== 'string') {\n        throw new TypeError('must specify type string')\n      }\n\n      opts = opts || {};\n\n      if (typeof document === 'undefined' && !opts.canvas) {\n        return null // check for Node\n      }\n\n      var canvas = opts.canvas || document.createElement('canvas');\n      if (typeof opts.width === 'number') {\n        canvas.width = opts.width;\n      }\n      if (typeof opts.height === 'number') {\n        canvas.height = opts.height;\n      }\n\n      var attribs = opts;\n      var gl;\n      try {\n        var names = [ type ];\n        // prefix GL contexts\n        if (type.indexOf('webgl') === 0) {\n          names.push('experimental-' + type);\n        }\n\n        for (var i = 0; i < names.length; i++) {\n          gl = canvas.getContext(names[i], attribs);\n          if (gl) return gl\n        }\n      } catch (e) {\n        gl = null;\n      }\n      return (gl || null) // ensure null on fail\n    }\n\n    function createCanvasElement() {\n        if (!isBrowser()) {\n            throw new Error('It appears you are runing from Node.js or a non-browser environment. Try passing in an existing { canvas } interface instead.');\n        }\n        return document.createElement('canvas');\n    }\n\n    function createCanvas(settings) {\n        if ( settings === void 0 ) settings = {};\n\n        var context, canvas;\n        var ownsCanvas = false;\n        if (settings.canvas !== false) {\n            context = settings.context;\n            if (!context || typeof context === 'string') {\n                var newCanvas = settings.canvas;\n                if (!newCanvas) {\n                    newCanvas = createCanvasElement();\n                    ownsCanvas = true;\n                }\n                var type = context || '2d';\n                if (typeof newCanvas.getContext !== 'function') {\n                    throw new Error(\"The specified { canvas } element does not have a getContext() function, maybe it is not a <canvas> tag?\");\n                }\n                context = getCanvasContext_1(type, objectAssign({}, settings.attributes, {\n                    canvas: newCanvas\n                }));\n                if (!context) {\n                    throw new Error((\"Failed at canvas.getContext('\" + type + \"') - the browser may not support this context, or a different context may already be in use with this canvas.\"));\n                }\n            }\n            canvas = context.canvas;\n            if (settings.canvas && canvas !== settings.canvas) {\n                throw new Error('The { canvas } and { context } settings must point to the same underlying canvas element');\n            }\n            if (settings.pixelated) {\n                context.imageSmoothingEnabled = false;\n                context.mozImageSmoothingEnabled = false;\n                context.oImageSmoothingEnabled = false;\n                context.webkitImageSmoothingEnabled = false;\n                context.msImageSmoothingEnabled = false;\n                canvas.style['image-rendering'] = 'pixelated';\n            }\n        }\n        return {\n            canvas: canvas,\n            context: context,\n            ownsCanvas: ownsCanvas\n        };\n    }\n\n    var SketchManager = function SketchManager() {\n        var this$1 = this;\n\n        this._settings = {};\n        this._props = {};\n        this._sketch = undefined;\n        this._raf = null;\n        this._lastRedrawResult = undefined;\n        this._isP5Resizing = false;\n        this._keyboardShortcuts = keyboardShortcuts({\n            enabled: function () { return this$1.settings.hotkeys !== false; },\n            save: function (ev) {\n                if (ev.shiftKey) {\n                    if (this$1.props.recording) {\n                        this$1.endRecord();\n                        this$1.run();\n                    } else \n                        { this$1.record(); }\n                } else \n                    { this$1.exportFrame(); }\n            },\n            togglePlay: function () {\n                if (this$1.props.playing) \n                    { this$1.pause(); }\n                 else \n                    { this$1.play(); }\n            },\n            commit: function (ev) {\n                this$1.exportFrame({\n                    commit: true\n                });\n            }\n        });\n        this._animateHandler = (function () { return this$1.animate(); });\n        this._resizeHandler = (function () {\n            var changed = this$1.resize();\n            if (changed) {\n                this$1.render();\n            }\n        });\n    };\n\n    var prototypeAccessors = { sketch: { configurable: true },settings: { configurable: true },props: { configurable: true } };\n    prototypeAccessors.sketch.get = function () {\n        return this._sketch;\n    };\n    prototypeAccessors.settings.get = function () {\n        return this._settings;\n    };\n    prototypeAccessors.props.get = function () {\n        return this._props;\n    };\n    SketchManager.prototype._computePlayhead = function _computePlayhead (currentTime, duration) {\n        var hasDuration = typeof duration === 'number' && isFinite(duration);\n        return hasDuration ? currentTime / duration : 0;\n    };\n    SketchManager.prototype._computeFrame = function _computeFrame (playhead, time, totalFrames, fps) {\n        return isFinite(totalFrames) && totalFrames > 1 ? Math.floor(playhead * (totalFrames - 1)) : Math.floor(fps * time);\n    };\n    SketchManager.prototype._computeCurrentFrame = function _computeCurrentFrame () {\n        return this._computeFrame(this.props.playhead, this.props.time, this.props.totalFrames, this.props.fps);\n    };\n    SketchManager.prototype._getSizeProps = function _getSizeProps () {\n        var props = this.props;\n        return {\n            width: props.width,\n            height: props.height,\n            pixelRatio: props.pixelRatio,\n            canvasWidth: props.canvasWidth,\n            canvasHeight: props.canvasHeight,\n            viewportWidth: props.viewportWidth,\n            viewportHeight: props.viewportHeight\n        };\n    };\n    SketchManager.prototype.run = function run () {\n        if (!this.sketch) \n            { throw new Error('should wait until sketch is loaded before trying to play()'); }\n        if (this.settings.playing !== false) {\n            this.play();\n        }\n        if (typeof this.sketch.dispose === 'function') {\n            console.warn('In canvas-sketch@0.0.23 the dispose() event has been renamed to unload()');\n        }\n        if (!this.props.started) {\n            this._signalBegin();\n            this.props.started = true;\n        }\n        this.tick();\n        this.render();\n        return this;\n    };\n    SketchManager.prototype.play = function play () {\n        var animate = this.settings.animate;\n        if ('animation' in this.settings) {\n            animate = true;\n            console.warn('[canvas-sketch] { animation } has been renamed to { animate }');\n        }\n        if (!animate) \n            { return; }\n        if (!isBrowser()) {\n            console.error('[canvas-sketch] WARN: Using { animate } in Node.js is not yet supported');\n            return;\n        }\n        if (this.props.playing) \n            { return; }\n        if (!this.props.started) {\n            this._signalBegin();\n            this.props.started = true;\n        }\n        this.props.playing = true;\n        if (this._raf != null) \n            { window.cancelAnimationFrame(this._raf); }\n        this._lastTime = browser();\n        this._raf = window.requestAnimationFrame(this._animateHandler);\n    };\n    SketchManager.prototype.pause = function pause () {\n        if (this.props.recording) \n            { this.endRecord(); }\n        this.props.playing = false;\n        if (this._raf != null && isBrowser()) {\n            window.cancelAnimationFrame(this._raf);\n        }\n    };\n    SketchManager.prototype.togglePlay = function togglePlay () {\n        if (this.props.playing) \n            { this.pause(); }\n         else \n            { this.play(); }\n    };\n    SketchManager.prototype.stop = function stop () {\n        this.pause();\n        this.props.frame = 0;\n        this.props.playhead = 0;\n        this.props.time = 0;\n        this.props.deltaTime = 0;\n        this.props.started = false;\n        this.render();\n    };\n    SketchManager.prototype.record = function record () {\n            var this$1 = this;\n\n        if (this.props.recording) \n            { return; }\n        if (!isBrowser()) {\n            console.error('[canvas-sketch] WARN: Recording from Node.js is not yet supported');\n            return;\n        }\n        this.stop();\n        this.props.playing = true;\n        this.props.recording = true;\n        var frameInterval = 1 / this.props.fps;\n        if (this._raf != null) \n            { window.cancelAnimationFrame(this._raf); }\n        var tick = function () {\n            if (!this$1.props.recording) \n                { return Promise.resolve(); }\n            this$1.props.deltaTime = frameInterval;\n            this$1.tick();\n            return this$1.exportFrame({\n                sequence: true\n            }).then(function () {\n                if (!this$1.props.recording) \n                    { return; }\n                this$1.props.deltaTime = 0;\n                this$1.props.frame++;\n                if (this$1.props.frame < this$1.props.totalFrames) {\n                    this$1.props.time += frameInterval;\n                    this$1.props.playhead = this$1._computePlayhead(this$1.props.time, this$1.props.duration);\n                    this$1._raf = window.requestAnimationFrame(tick);\n                } else {\n                    console.log('Finished recording');\n                    this$1._signalEnd();\n                    this$1.endRecord();\n                    this$1.stop();\n                    this$1.run();\n                }\n            });\n        };\n        if (!this.props.started) {\n            this._signalBegin();\n            this.props.started = true;\n        }\n        this._raf = window.requestAnimationFrame(tick);\n    };\n    SketchManager.prototype._signalBegin = function _signalBegin () {\n            var this$1 = this;\n\n        if (this.sketch && typeof this.sketch.begin === 'function') {\n            this._wrapContextScale(function (props) { return this$1.sketch.begin(props); });\n        }\n    };\n    SketchManager.prototype._signalEnd = function _signalEnd () {\n            var this$1 = this;\n\n        if (this.sketch && typeof this.sketch.end === 'function') {\n            this._wrapContextScale(function (props) { return this$1.sketch.end(props); });\n        }\n    };\n    SketchManager.prototype.endRecord = function endRecord () {\n        if (this._raf != null && isBrowser()) \n            { window.cancelAnimationFrame(this._raf); }\n        this.props.recording = false;\n        this.props.deltaTime = 0;\n        this.props.playing = false;\n    };\n    SketchManager.prototype.exportFrame = function exportFrame (opt) {\n            var this$1 = this;\n            if ( opt === void 0 ) opt = {};\n\n        if (!this.sketch) \n            { return Promise.all([]); }\n        if (typeof this.sketch.preExport === 'function') {\n            this.sketch.preExport();\n        }\n        var exportOpts = objectAssign({\n            sequence: opt.sequence,\n            frame: opt.sequence ? this.props.frame : undefined,\n            file: this.settings.file,\n            name: this.settings.name,\n            prefix: this.settings.prefix,\n            suffix: this.settings.suffix,\n            encoding: this.settings.encoding,\n            encodingQuality: this.settings.encodingQuality,\n            timeStamp: getFileName(),\n            totalFrames: isFinite(this.props.totalFrames) ? Math.max(100, this.props.totalFrames) : 1000\n        });\n        var client = getClientAPI();\n        var p = Promise.resolve();\n        if (client && opt.commit && typeof client.commit === 'function') {\n            var commitOpts = objectAssign({}, exportOpts);\n            var hash = client.commit(commitOpts);\n            if (isPromise_1(hash)) \n                { p = hash; }\n             else \n                { p = Promise.resolve(hash); }\n        }\n        return p.then(function (hash) { return this$1._doExportFrame(objectAssign({}, exportOpts, {\n            hash: hash || ''\n        })); });\n    };\n    SketchManager.prototype._doExportFrame = function _doExportFrame (exportOpts) {\n            var this$1 = this;\n            if ( exportOpts === void 0 ) exportOpts = {};\n\n        this._props.exporting = true;\n        this.resize();\n        var drawResult = this.render();\n        var canvas = this.props.canvas;\n        if (typeof drawResult === 'undefined') {\n            drawResult = [canvas];\n        }\n        drawResult = [].concat(drawResult).filter(Boolean);\n        drawResult = drawResult.map(function (result) {\n            var hasDataObject = typeof result === 'object' && result && ('data' in result || 'dataURL' in result);\n            var data = hasDataObject ? result.data : result;\n            var opts = hasDataObject ? objectAssign({}, result, {\n                data: data\n            }) : {\n                data: data\n            };\n            if (isCanvas(data)) {\n                var encoding = opts.encoding || exportOpts.encoding;\n                var encodingQuality = defined(opts.encodingQuality, exportOpts.encodingQuality, 0.95);\n                var ref = exportCanvas(data, {\n                    encoding: encoding,\n                    encodingQuality: encodingQuality\n                });\n                    var dataURL = ref.dataURL;\n                    var extension = ref.extension;\n                    var type = ref.type;\n                return Object.assign(opts, {\n                    dataURL: dataURL,\n                    extension: extension,\n                    type: type\n                });\n            } else {\n                return opts;\n            }\n        });\n        this._props.exporting = false;\n        this.resize();\n        this.render();\n        return Promise.all(drawResult.map(function (result, i, layerList) {\n            var curOpt = objectAssign({}, exportOpts, result, {\n                layer: i,\n                totalLayers: layerList.length\n            });\n            var data = result.data;\n            if (result.dataURL) {\n                var dataURL = result.dataURL;\n                delete curOpt.dataURL;\n                return saveDataURL(dataURL, curOpt);\n            } else {\n                return saveFile(data, curOpt);\n            }\n        })).then(function (ev) {\n            if (ev.length > 0) {\n                var eventWithOutput = ev.find(function (e) { return e.outputName; });\n                var isClient = ev.some(function (e) { return e.client; });\n                var item;\n                if (ev.length > 1) \n                    { item = ev.length; }\n                 else if (eventWithOutput) \n                    { item = (eventWithOutput.outputName) + \"/\" + (ev[0].filename); }\n                 else \n                    { item = \"\" + (ev[0].filename); }\n                var ofSeq = '';\n                if (exportOpts.sequence) {\n                    var hasTotalFrames = isFinite(this$1.props.totalFrames);\n                    ofSeq = hasTotalFrames ? (\" (frame \" + (exportOpts.frame + 1) + \" / \" + (this$1.props.totalFrames) + \")\") : (\" (frame \" + (exportOpts.frame) + \")\");\n                } else if (ev.length > 1) {\n                    ofSeq = \" files\";\n                }\n                var client = isClient ? 'canvas-sketch-cli' : 'canvas-sketch';\n                console.log((\"%c[\" + client + \"]%c Exported %c\" + item + \"%c\" + ofSeq), 'color: #8e8e8e;', 'color: initial;', 'font-weight: bold;', 'font-weight: initial;');\n            }\n            if (typeof this$1.sketch.postExport === 'function') {\n                this$1.sketch.postExport();\n            }\n        });\n    };\n    SketchManager.prototype._wrapContextScale = function _wrapContextScale (cb) {\n        this._preRender();\n        cb(this.props);\n        this._postRender();\n    };\n    SketchManager.prototype._preRender = function _preRender () {\n        var props = this.props;\n        if (!this.props.gl && props.context && !props.p5) {\n            props.context.save();\n            if (this.settings.scaleContext !== false) {\n                props.context.scale(props.scaleX, props.scaleY);\n            }\n        } else if (props.p5) {\n            props.p5.scale(props.scaleX / props.pixelRatio, props.scaleY / props.pixelRatio);\n        }\n    };\n    SketchManager.prototype._postRender = function _postRender () {\n        var props = this.props;\n        if (!this.props.gl && props.context && !props.p5) {\n            props.context.restore();\n        }\n        if (props.gl && this.settings.flush !== false && !props.p5) {\n            props.gl.flush();\n        }\n    };\n    SketchManager.prototype.tick = function tick () {\n        if (this.sketch && typeof this.sketch.tick === 'function') {\n            this._preRender();\n            this.sketch.tick(this.props);\n            this._postRender();\n        }\n    };\n    SketchManager.prototype.render = function render () {\n        if (this.props.p5) {\n            this._lastRedrawResult = undefined;\n            this.props.p5.redraw();\n            return this._lastRedrawResult;\n        } else {\n            return this.submitDrawCall();\n        }\n    };\n    SketchManager.prototype.submitDrawCall = function submitDrawCall () {\n        if (!this.sketch) \n            { return; }\n        var props = this.props;\n        this._preRender();\n        var drawResult;\n        if (typeof this.sketch === 'function') {\n            drawResult = this.sketch(props);\n        } else if (typeof this.sketch.render === 'function') {\n            drawResult = this.sketch.render(props);\n        }\n        this._postRender();\n        return drawResult;\n    };\n    SketchManager.prototype.update = function update (opt) {\n            var this$1 = this;\n            if ( opt === void 0 ) opt = {};\n\n        var notYetSupported = ['animate'];\n        Object.keys(opt).forEach(function (key) {\n            if (notYetSupported.indexOf(key) >= 0) {\n                throw new Error((\"Sorry, the { \" + key + \" } option is not yet supported with update().\"));\n            }\n        });\n        var oldCanvas = this._settings.canvas;\n        var oldContext = this._settings.context;\n        for (var key in opt) {\n            var value = opt[key];\n            if (typeof value !== 'undefined') {\n                this$1._settings[key] = value;\n            }\n        }\n        var timeOpts = Object.assign({}, this._settings, opt);\n        if ('time' in opt && 'frame' in opt) \n            { throw new Error('You should specify { time } or { frame } but not both'); }\n         else if ('time' in opt) \n            { delete timeOpts.frame; }\n         else if ('frame' in opt) \n            { delete timeOpts.time; }\n        if ('duration' in opt && 'totalFrames' in opt) \n            { throw new Error('You should specify { duration } or { totalFrames } but not both'); }\n         else if ('duration' in opt) \n            { delete timeOpts.totalFrames; }\n         else if ('totalFrames' in opt) \n            { delete timeOpts.duration; }\n        if ('data' in opt) \n            { this._props.data = opt.data; }\n        var timeProps = this.getTimeProps(timeOpts);\n        Object.assign(this._props, timeProps);\n        if (oldCanvas !== this._settings.canvas || oldContext !== this._settings.context) {\n            var ref = createCanvas(this._settings);\n                var canvas = ref.canvas;\n                var context = ref.context;\n            this.props.canvas = canvas;\n            this.props.context = context;\n            this._setupGLKey();\n            this._appendCanvasIfNeeded();\n        }\n        if (opt.p5 && typeof opt.p5 !== 'function') {\n            this.props.p5 = opt.p5;\n            this.props.p5.draw = (function () {\n                if (this$1._isP5Resizing) \n                    { return; }\n                this$1._lastRedrawResult = this$1.submitDrawCall();\n            });\n        }\n        if ('playing' in opt) {\n            if (opt.playing) \n                { this.play(); }\n             else \n                { this.pause(); }\n        }\n        checkSettings(this._settings);\n        this.resize();\n        this.render();\n        return this.props;\n    };\n    SketchManager.prototype.resize = function resize () {\n        var oldSizes = this._getSizeProps();\n        var settings = this.settings;\n        var props = this.props;\n        var newProps = resizeCanvas(props, settings);\n        Object.assign(this._props, newProps);\n        var ref = this.props;\n            var pixelRatio = ref.pixelRatio;\n            var canvasWidth = ref.canvasWidth;\n            var canvasHeight = ref.canvasHeight;\n            var styleWidth = ref.styleWidth;\n            var styleHeight = ref.styleHeight;\n        var canvas = this.props.canvas;\n        if (canvas && settings.resizeCanvas !== false) {\n            if (props.p5) {\n                if (canvas.width !== canvasWidth || canvas.height !== canvasHeight) {\n                    this._isP5Resizing = true;\n                    props.p5.pixelDensity(pixelRatio);\n                    props.p5.resizeCanvas(canvasWidth / pixelRatio, canvasHeight / pixelRatio, false);\n                    this._isP5Resizing = false;\n                }\n            } else {\n                if (canvas.width !== canvasWidth) \n                    { canvas.width = canvasWidth; }\n                if (canvas.height !== canvasHeight) \n                    { canvas.height = canvasHeight; }\n            }\n            if (isBrowser() && settings.styleCanvas !== false) {\n                canvas.style.width = styleWidth + \"px\";\n                canvas.style.height = styleHeight + \"px\";\n            }\n        }\n        var newSizes = this._getSizeProps();\n        var changed = !deepEqual_1(oldSizes, newSizes);\n        if (changed) {\n            this._sizeChanged();\n        }\n        return changed;\n    };\n    SketchManager.prototype._sizeChanged = function _sizeChanged () {\n        if (this.sketch && typeof this.sketch.resize === 'function') {\n            this.sketch.resize(this.props);\n        }\n    };\n    SketchManager.prototype.animate = function animate () {\n        if (!this.props.playing) \n            { return; }\n        if (!isBrowser()) {\n            console.error('[canvas-sketch] WARN: Animation in Node.js is not yet supported');\n            return;\n        }\n        this._raf = window.requestAnimationFrame(this._animateHandler);\n        var now = browser();\n        var fps = this.props.fps;\n        var frameIntervalMS = 1000 / fps;\n        var deltaTimeMS = now - this._lastTime;\n        var duration = this.props.duration;\n        var hasDuration = typeof duration === 'number' && isFinite(duration);\n        var isNewFrame = true;\n        var playbackRate = this.settings.playbackRate;\n        if (playbackRate === 'fixed') {\n            deltaTimeMS = frameIntervalMS;\n        } else if (playbackRate === 'throttle') {\n            if (deltaTimeMS > frameIntervalMS) {\n                now = now - deltaTimeMS % frameIntervalMS;\n                this._lastTime = now;\n            } else {\n                isNewFrame = false;\n            }\n        } else {\n            this._lastTime = now;\n        }\n        var deltaTime = deltaTimeMS / 1000;\n        var newTime = this.props.time + deltaTime * this.props.timeScale;\n        if (newTime < 0 && hasDuration) {\n            newTime = duration + newTime;\n        }\n        var isFinished = false;\n        var isLoopStart = false;\n        var looping = this.settings.loop !== false;\n        if (hasDuration && newTime >= duration) {\n            if (looping) {\n                isNewFrame = true;\n                newTime = newTime % duration;\n                isLoopStart = true;\n            } else {\n                isNewFrame = false;\n                newTime = duration;\n                isFinished = true;\n            }\n            this._signalEnd();\n        }\n        if (isNewFrame) {\n            this.props.deltaTime = deltaTime;\n            this.props.time = newTime;\n            this.props.playhead = this._computePlayhead(newTime, duration);\n            var lastFrame = this.props.frame;\n            this.props.frame = this._computeCurrentFrame();\n            if (isLoopStart) \n                { this._signalBegin(); }\n            if (lastFrame !== this.props.frame) \n                { this.tick(); }\n            this.render();\n            this.props.deltaTime = 0;\n        }\n        if (isFinished) {\n            this.pause();\n        }\n    };\n    SketchManager.prototype.dispatch = function dispatch (cb) {\n        if (typeof cb !== 'function') \n            { throw new Error('must pass function into dispatch()'); }\n        cb(this.props);\n        this.render();\n    };\n    SketchManager.prototype.mount = function mount () {\n        this._appendCanvasIfNeeded();\n    };\n    SketchManager.prototype.unmount = function unmount () {\n        if (isBrowser()) {\n            window.removeEventListener('resize', this._resizeHandler);\n            this._keyboardShortcuts.detach();\n        }\n        if (this.props.canvas.parentElement) {\n            this.props.canvas.parentElement.removeChild(this.props.canvas);\n        }\n    };\n    SketchManager.prototype._appendCanvasIfNeeded = function _appendCanvasIfNeeded () {\n        if (!isBrowser()) \n            { return; }\n        if (this.settings.parent !== false && (this.props.canvas && !this.props.canvas.parentElement)) {\n            var defaultParent = this.settings.parent || document.body;\n            defaultParent.appendChild(this.props.canvas);\n        }\n    };\n    SketchManager.prototype._setupGLKey = function _setupGLKey () {\n        if (this.props.context) {\n            if (isWebGLContext(this.props.context)) {\n                this._props.gl = this.props.context;\n            } else {\n                delete this._props.gl;\n            }\n        }\n    };\n    SketchManager.prototype.getTimeProps = function getTimeProps (settings) {\n            if ( settings === void 0 ) settings = {};\n\n        var duration = settings.duration;\n        var totalFrames = settings.totalFrames;\n        var timeScale = defined(settings.timeScale, 1);\n        var fps = defined(settings.fps, 24);\n        var hasDuration = typeof duration === 'number' && isFinite(duration);\n        var hasTotalFrames = typeof totalFrames === 'number' && isFinite(totalFrames);\n        var totalFramesFromDuration = hasDuration ? Math.floor(fps * duration) : undefined;\n        var durationFromTotalFrames = hasTotalFrames ? totalFrames / fps : undefined;\n        if (hasDuration && hasTotalFrames && totalFramesFromDuration !== totalFrames) {\n            throw new Error('You should specify either duration or totalFrames, but not both. Or, they must match exactly.');\n        }\n        if (typeof settings.dimensions === 'undefined' && typeof settings.units !== 'undefined') {\n            console.warn(\"You've specified a { units } setting but no { dimension }, so the units will be ignored.\");\n        }\n        totalFrames = defined(totalFrames, totalFramesFromDuration, Infinity);\n        duration = defined(duration, durationFromTotalFrames, Infinity);\n        var startTime = settings.time;\n        var startFrame = settings.frame;\n        var hasStartTime = typeof startTime === 'number' && isFinite(startTime);\n        var hasStartFrame = typeof startFrame === 'number' && isFinite(startFrame);\n        var time = 0;\n        var frame = 0;\n        var playhead = 0;\n        if (hasStartTime && hasStartFrame) {\n            throw new Error('You should specify either start frame or time, but not both.');\n        } else if (hasStartTime) {\n            time = startTime;\n            playhead = this._computePlayhead(time, duration);\n            frame = this._computeFrame(playhead, time, totalFrames, fps);\n        } else if (hasStartFrame) {\n            frame = startFrame;\n            time = frame / fps;\n            playhead = this._computePlayhead(time, duration);\n        }\n        return {\n            playhead: playhead,\n            time: time,\n            frame: frame,\n            duration: duration,\n            totalFrames: totalFrames,\n            fps: fps,\n            timeScale: timeScale\n        };\n    };\n    SketchManager.prototype.setup = function setup (settings) {\n            var this$1 = this;\n            if ( settings === void 0 ) settings = {};\n\n        if (this.sketch) \n            { throw new Error('Multiple setup() calls not yet supported.'); }\n        this._settings = Object.assign({}, settings, this._settings);\n        checkSettings(this._settings);\n        var ref = createCanvas(this._settings);\n            var context = ref.context;\n            var canvas = ref.canvas;\n        var timeProps = this.getTimeProps(this._settings);\n        this._props = Object.assign({}, timeProps,\n            {canvas: canvas,\n            context: context,\n            deltaTime: 0,\n            started: false,\n            exporting: false,\n            playing: false,\n            recording: false,\n            settings: this.settings,\n            data: this.settings.data,\n            render: function () { return this$1.render(); },\n            togglePlay: function () { return this$1.togglePlay(); },\n            dispatch: function (cb) { return this$1.dispatch(cb); },\n            tick: function () { return this$1.tick(); },\n            resize: function () { return this$1.resize(); },\n            update: function (opt) { return this$1.update(opt); },\n            exportFrame: function (opt) { return this$1.exportFrame(opt); },\n            record: function () { return this$1.record(); },\n            play: function () { return this$1.play(); },\n            pause: function () { return this$1.pause(); },\n            stop: function () { return this$1.stop(); }});\n        this._setupGLKey();\n        this.resize();\n    };\n    SketchManager.prototype.loadAndRun = function loadAndRun (canvasSketch, newSettings) {\n            var this$1 = this;\n\n        return this.load(canvasSketch, newSettings).then(function () {\n            this$1.run();\n            return this$1;\n        });\n    };\n    SketchManager.prototype.unload = function unload () {\n            var this$1 = this;\n\n        this.pause();\n        if (!this.sketch) \n            { return; }\n        if (typeof this.sketch.unload === 'function') {\n            this._wrapContextScale(function (props) { return this$1.sketch.unload(props); });\n        }\n        this._sketch = null;\n    };\n    SketchManager.prototype.destroy = function destroy () {\n        this.unload();\n        this.unmount();\n    };\n    SketchManager.prototype.load = function load (createSketch, newSettings) {\n            var this$1 = this;\n\n        if (typeof createSketch !== 'function') {\n            throw new Error('The function must take in a function as the first parameter. Example:\\n  canvasSketcher(() => { ... }, settings)');\n        }\n        if (this.sketch) {\n            this.unload();\n        }\n        if (typeof newSettings !== 'undefined') {\n            this.update(newSettings);\n        }\n        this._preRender();\n        var preload = Promise.resolve();\n        if (this.settings.p5) {\n            if (!isBrowser()) {\n                throw new Error('[canvas-sketch] ERROR: Using p5.js in Node.js is not supported');\n            }\n            preload = new Promise(function (resolve) {\n                var P5Constructor = this$1.settings.p5;\n                var preload;\n                if (P5Constructor.p5) {\n                    preload = P5Constructor.preload;\n                    P5Constructor = P5Constructor.p5;\n                }\n                var p5Sketch = function (p5) {\n                    if (preload) \n                        { p5.preload = (function () { return preload(p5); }); }\n                    p5.setup = (function () {\n                        var props = this$1.props;\n                        var isGL = this$1.settings.context === 'webgl';\n                        var renderer = isGL ? p5.WEBGL : p5.P2D;\n                        p5.noLoop();\n                        p5.pixelDensity(props.pixelRatio);\n                        p5.createCanvas(props.viewportWidth, props.viewportHeight, renderer);\n                        if (isGL && this$1.settings.attributes) {\n                            p5.setAttributes(this$1.settings.attributes);\n                        }\n                        this$1.update({\n                            p5: p5,\n                            canvas: p5.canvas,\n                            context: p5._renderer.drawingContext\n                        });\n                        resolve();\n                    });\n                };\n                if (typeof P5Constructor === 'function') {\n                    new P5Constructor(p5Sketch);\n                } else {\n                    if (typeof window.createCanvas !== 'function') {\n                        throw new Error(\"{ p5 } setting is passed but can't find p5.js in global (window) scope. Maybe you did not create it globally?\\nnew p5(); // <-- attaches to global scope\");\n                    }\n                    p5Sketch(window);\n                }\n            });\n        }\n        return preload.then(function () {\n            var loader = createSketch(this$1.props);\n            if (!isPromise_1(loader)) {\n                loader = Promise.resolve(loader);\n            }\n            return loader;\n        }).then(function (sketch) {\n            if (!sketch) \n                { sketch = {}; }\n            this$1._sketch = sketch;\n            if (isBrowser()) {\n                this$1._keyboardShortcuts.attach();\n                window.addEventListener('resize', this$1._resizeHandler);\n            }\n            this$1._postRender();\n            this$1._sizeChanged();\n            return this$1;\n        }).catch(function (err) {\n            console.warn('Could not start sketch, the async loading function rejected with an error:\\n    Error: ' + err.message);\n            throw err;\n        });\n    };\n\n    Object.defineProperties( SketchManager.prototype, prototypeAccessors );\n\n    var CACHE = 'hot-id-cache';\n    var runtimeCollisions = [];\n    function isHotReload() {\n        var client = getClientAPI();\n        return client && client.hot;\n    }\n\n    function cacheGet(id) {\n        var client = getClientAPI();\n        if (!client) \n            { return undefined; }\n        client[CACHE] = client[CACHE] || {};\n        return client[CACHE][id];\n    }\n\n    function cachePut(id, data) {\n        var client = getClientAPI();\n        if (!client) \n            { return undefined; }\n        client[CACHE] = client[CACHE] || {};\n        client[CACHE][id] = data;\n    }\n\n    function getTimeProp(oldManager, newSettings) {\n        return newSettings.animate ? {\n            time: oldManager.props.time\n        } : undefined;\n    }\n\n    function canvasSketch(sketch, settings) {\n        if ( settings === void 0 ) settings = {};\n\n        if (settings.p5) {\n            if (settings.canvas || settings.context && typeof settings.context !== 'string') {\n                throw new Error(\"In { p5 } mode, you can't pass your own canvas or context, unless the context is a \\\"webgl\\\" or \\\"2d\\\" string\");\n            }\n            var context = typeof settings.context === 'string' ? settings.context : false;\n            settings = Object.assign({}, settings, {\n                canvas: false,\n                context: context\n            });\n        }\n        var isHot = isHotReload();\n        var hotID;\n        if (isHot) {\n            hotID = defined(settings.id, '$__DEFAULT_CANVAS_SKETCH_ID__$');\n        }\n        var isInjecting = isHot && typeof hotID === 'string';\n        if (isInjecting && runtimeCollisions.includes(hotID)) {\n            console.warn(\"Warning: You have multiple calls to canvasSketch() in --hot mode. You must pass unique { id } strings in settings to enable hot reload across multiple sketches. \", hotID);\n            isInjecting = false;\n        }\n        var preload = Promise.resolve();\n        if (isInjecting) {\n            runtimeCollisions.push(hotID);\n            var previousData = cacheGet(hotID);\n            if (previousData) {\n                var next = function () {\n                    var newProps = getTimeProp(previousData.manager, settings);\n                    previousData.manager.destroy();\n                    return newProps;\n                };\n                preload = previousData.load.then(next).catch(next);\n            }\n        }\n        return preload.then(function (newProps) {\n            var manager = new SketchManager();\n            var result;\n            if (sketch) {\n                settings = Object.assign({}, settings, newProps);\n                manager.setup(settings);\n                manager.mount();\n                result = manager.loadAndRun(sketch);\n            } else {\n                result = Promise.resolve(manager);\n            }\n            if (isInjecting) {\n                cachePut(hotID, {\n                    load: result,\n                    manager: manager\n                });\n            }\n            return result;\n        });\n    }\n\n    canvasSketch.canvasSketch = canvasSketch;\n    canvasSketch.PaperSizes = paperSizes;\n\n    return canvasSketch;\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","var defined = require('defined');\nvar units = [ 'mm', 'cm', 'm', 'pc', 'pt', 'in', 'ft', 'px' ];\n\nvar conversions = {\n  // metric\n  m: {\n    system: 'metric',\n    factor: 1\n  },\n  cm: {\n    system: 'metric',\n    factor: 1 / 100\n  },\n  mm: {\n    system: 'metric',\n    factor: 1 / 1000\n  },\n  // imperial\n  pt: {\n    system: 'imperial',\n    factor: 1 / 72\n  },\n  pc: {\n    system: 'imperial',\n    factor: 1 / 6\n  },\n  in: {\n    system: 'imperial',\n    factor: 1\n  },\n  ft: {\n    system: 'imperial',\n    factor: 12\n  }\n};\n\nconst anchors = {\n  metric: {\n    unit: 'm',\n    ratio: 1 / 0.0254\n  },\n  imperial: {\n    unit: 'in',\n    ratio: 0.0254\n  }\n};\n\nfunction round (value, decimals) {\n  return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\n}\n\nfunction convertDistance (value, fromUnit, toUnit, opts) {\n  if (typeof value !== 'number' || !isFinite(value)) throw new Error('Value must be a finite number');\n  if (!fromUnit || !toUnit) throw new Error('Must specify from and to units');\n\n  opts = opts || {};\n  var pixelsPerInch = defined(opts.pixelsPerInch, 96);\n  var precision = opts.precision;\n  var roundPixel = opts.roundPixel !== false;\n\n  fromUnit = fromUnit.toLowerCase();\n  toUnit = toUnit.toLowerCase();\n\n  if (units.indexOf(fromUnit) === -1) throw new Error('Invalid from unit \"' + fromUnit + '\", must be one of: ' + units.join(', '));\n  if (units.indexOf(toUnit) === -1) throw new Error('Invalid from unit \"' + toUnit + '\", must be one of: ' + units.join(', '));\n\n  if (fromUnit === toUnit) {\n    // We don't need to convert from A to B since they are the same already\n    return value;\n  }\n\n  var toFactor = 1;\n  var fromFactor = 1;\n  var isToPixel = false;\n\n  if (fromUnit === 'px') {\n    fromFactor = 1 / pixelsPerInch;\n    fromUnit = 'in';\n  }\n  if (toUnit === 'px') {\n    isToPixel = true;\n    toFactor = pixelsPerInch;\n    toUnit = 'in';\n  }\n\n  var fromUnitData = conversions[fromUnit];\n  var toUnitData = conversions[toUnit];\n\n  // source to anchor inside source's system\n  var anchor = value * fromUnitData.factor * fromFactor;\n\n  // if systems differ, convert one to another\n  if (fromUnitData.system !== toUnitData.system) {\n    // regular 'm' to 'in' and so forth\n    anchor *= anchors[fromUnitData.system].ratio;\n  }\n\n  var result = anchor / toUnitData.factor * toFactor;\n  if (isToPixel && roundPixel) {\n    result = Math.round(result);\n  } else if (typeof precision === 'number' && isFinite(precision)) {\n    result = round(result, precision);\n  }\n  return result;\n}\n\nmodule.exports = convertDistance;\nmodule.exports.units = units;\n","var seedRandom = require('seed-random');\nvar SimplexNoise = require('simplex-noise');\nvar defined = require('defined');\n\nfunction createRandom (defaultSeed) {\n  defaultSeed = defined(defaultSeed, null);\n  var defaultRandom = Math.random;\n  var currentSeed;\n  var currentRandom;\n  var noiseGenerator;\n  var _nextGaussian = null;\n  var _hasNextGaussian = false;\n\n  setSeed(defaultSeed);\n\n  return {\n    value: value,\n    createRandom: function (defaultSeed) {\n      return createRandom(defaultSeed);\n    },\n    setSeed: setSeed,\n    getSeed: getSeed,\n    getRandomSeed: getRandomSeed,\n    valueNonZero: valueNonZero,\n    permuteNoise: permuteNoise,\n    noise1D: noise1D,\n    noise2D: noise2D,\n    noise3D: noise3D,\n    noise4D: noise4D,\n    sign: sign,\n    boolean: boolean,\n    chance: chance,\n    range: range,\n    rangeFloor: rangeFloor,\n    pick: pick,\n    shuffle: shuffle,\n    onCircle: onCircle,\n    insideCircle: insideCircle,\n    onSphere: onSphere,\n    insideSphere: insideSphere,\n    quaternion: quaternion,\n    weighted: weighted,\n    weightedSet: weightedSet,\n    weightedSetIndex: weightedSetIndex,\n    gaussian: gaussian\n  };\n\n  function setSeed (seed, opt) {\n    if (typeof seed === 'number' || typeof seed === 'string') {\n      currentSeed = seed;\n      currentRandom = seedRandom(currentSeed, opt);\n    } else {\n      currentSeed = undefined;\n      currentRandom = defaultRandom;\n    }\n    noiseGenerator = createNoise();\n    _nextGaussian = null;\n    _hasNextGaussian = false;\n  }\n\n  function value () {\n    return currentRandom();\n  }\n\n  function valueNonZero () {\n    var u = 0;\n    while (u === 0) u = value();\n    return u;\n  }\n\n  function getSeed () {\n    return currentSeed;\n  }\n\n  function getRandomSeed () {\n    var seed = String(Math.floor(Math.random() * 1000000));\n    return seed;\n  }\n\n  function createNoise () {\n    return new SimplexNoise(currentRandom);\n  }\n\n  function permuteNoise () {\n    noiseGenerator = createNoise();\n  }\n\n  function noise1D (x, frequency, amplitude) {\n    if (!isFinite(x)) throw new TypeError('x component for noise() must be finite');\n    frequency = defined(frequency, 1);\n    amplitude = defined(amplitude, 1);\n    return amplitude * noiseGenerator.noise2D(x * frequency, 0);\n  }\n\n  function noise2D (x, y, frequency, amplitude) {\n    if (!isFinite(x)) throw new TypeError('x component for noise() must be finite');\n    if (!isFinite(y)) throw new TypeError('y component for noise() must be finite');\n    frequency = defined(frequency, 1);\n    amplitude = defined(amplitude, 1);\n    return amplitude * noiseGenerator.noise2D(x * frequency, y * frequency);\n  }\n\n  function noise3D (x, y, z, frequency, amplitude) {\n    if (!isFinite(x)) throw new TypeError('x component for noise() must be finite');\n    if (!isFinite(y)) throw new TypeError('y component for noise() must be finite');\n    if (!isFinite(z)) throw new TypeError('z component for noise() must be finite');\n    frequency = defined(frequency, 1);\n    amplitude = defined(amplitude, 1);\n    return amplitude * noiseGenerator.noise3D(\n      x * frequency,\n      y * frequency,\n      z * frequency\n    );\n  }\n\n  function noise4D (x, y, z, w, frequency, amplitude) {\n    if (!isFinite(x)) throw new TypeError('x component for noise() must be finite');\n    if (!isFinite(y)) throw new TypeError('y component for noise() must be finite');\n    if (!isFinite(z)) throw new TypeError('z component for noise() must be finite');\n    if (!isFinite(w)) throw new TypeError('w component for noise() must be finite');\n    frequency = defined(frequency, 1);\n    amplitude = defined(amplitude, 1);\n    return amplitude * noiseGenerator.noise4D(\n      x * frequency,\n      y * frequency,\n      z * frequency,\n      w * frequency\n    );\n  }\n\n  function sign () {\n    return boolean() ? 1 : -1;\n  }\n\n  function boolean () {\n    return value() > 0.5;\n  }\n\n  function chance (n) {\n    n = defined(n, 0.5);\n    if (typeof n !== 'number') throw new TypeError('expected n to be a number');\n    return value() < n;\n  }\n\n  function range (min, max) {\n    if (max === undefined) {\n      max = min;\n      min = 0;\n    }\n\n    if (typeof min !== 'number' || typeof max !== 'number') {\n      throw new TypeError('Expected all arguments to be numbers');\n    }\n\n    return value() * (max - min) + min;\n  }\n\n  function rangeFloor (min, max) {\n    if (max === undefined) {\n      max = min;\n      min = 0;\n    }\n\n    if (typeof min !== 'number' || typeof max !== 'number') {\n      throw new TypeError('Expected all arguments to be numbers');\n    }\n\n    return Math.floor(range(min, max));\n  }\n\n  function pick (array) {\n    if (array.length === 0) return undefined;\n    return array[rangeFloor(0, array.length)];\n  }\n\n  function shuffle (arr) {\n    if (!Array.isArray(arr)) {\n      throw new TypeError('Expected Array, got ' + typeof arr);\n    }\n\n    var rand;\n    var tmp;\n    var len = arr.length;\n    var ret = arr.slice();\n    while (len) {\n      rand = Math.floor(value() * len--);\n      tmp = ret[len];\n      ret[len] = ret[rand];\n      ret[rand] = tmp;\n    }\n    return ret;\n  }\n\n  function onCircle (radius, out) {\n    radius = defined(radius, 1);\n    out = out || [];\n    var theta = value() * 2.0 * Math.PI;\n    out[0] = radius * Math.cos(theta);\n    out[1] = radius * Math.sin(theta);\n    return out;\n  }\n\n  function insideCircle (radius, out) {\n    radius = defined(radius, 1);\n    out = out || [];\n    onCircle(1, out);\n    var r = radius * Math.sqrt(value());\n    out[0] *= r;\n    out[1] *= r;\n    return out;\n  }\n\n  function onSphere (radius, out) {\n    radius = defined(radius, 1);\n    out = out || [];\n    var u = value() * Math.PI * 2;\n    var v = value() * 2 - 1;\n    var phi = u;\n    var theta = Math.acos(v);\n    out[0] = radius * Math.sin(theta) * Math.cos(phi);\n    out[1] = radius * Math.sin(theta) * Math.sin(phi);\n    out[2] = radius * Math.cos(theta);\n    return out;\n  }\n\n  function insideSphere (radius, out) {\n    radius = defined(radius, 1);\n    out = out || [];\n    var u = value() * Math.PI * 2;\n    var v = value() * 2 - 1;\n    var k = value();\n\n    var phi = u;\n    var theta = Math.acos(v);\n    var r = radius * Math.cbrt(k);\n    out[0] = r * Math.sin(theta) * Math.cos(phi);\n    out[1] = r * Math.sin(theta) * Math.sin(phi);\n    out[2] = r * Math.cos(theta);\n    return out;\n  }\n\n  function quaternion (out) {\n    out = out || [];\n    var u1 = value();\n    var u2 = value();\n    var u3 = value();\n\n    var sq1 = Math.sqrt(1 - u1);\n    var sq2 = Math.sqrt(u1);\n\n    var theta1 = Math.PI * 2 * u2;\n    var theta2 = Math.PI * 2 * u3;\n\n    var x = Math.sin(theta1) * sq1;\n    var y = Math.cos(theta1) * sq1;\n    var z = Math.sin(theta2) * sq2;\n    var w = Math.cos(theta2) * sq2;\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n  }\n\n  function weightedSet (set) {\n    set = set || [];\n    if (set.length === 0) return null;\n    return set[weightedSetIndex(set)].value;\n  }\n\n  function weightedSetIndex (set) {\n    set = set || [];\n    if (set.length === 0) return -1;\n    return weighted(set.map(function (s) {\n      return s.weight;\n    }));\n  }\n\n  function weighted (weights) {\n    weights = weights || [];\n    if (weights.length === 0) return -1;\n    var totalWeight = 0;\n    var i;\n\n    for (i = 0; i < weights.length; i++) {\n      totalWeight += weights[i];\n    }\n\n    if (totalWeight <= 0) throw new Error('Weights must sum to > 0');\n\n    var random = value() * totalWeight;\n    for (i = 0; i < weights.length; i++) {\n      if (random < weights[i]) {\n        return i;\n      }\n      random -= weights[i];\n    }\n    return 0;\n  }\n\n  function gaussian (mean, standardDerivation) {\n    mean = defined(mean, 0);\n    standardDerivation = defined(standardDerivation, 1);\n\n    // https://github.com/openjdk-mirror/jdk7u-jdk/blob/f4d80957e89a19a29bb9f9807d2a28351ed7f7df/src/share/classes/java/util/Random.java#L496\n    if (_hasNextGaussian) {\n      _hasNextGaussian = false;\n      var result = _nextGaussian;\n      _nextGaussian = null;\n      return mean + standardDerivation * result;\n    } else {\n      var v1 = 0;\n      var v2 = 0;\n      var s = 0;\n      do {\n        v1 = value() * 2 - 1; // between -1 and 1\n        v2 = value() * 2 - 1; // between -1 and 1\n        s = v1 * v1 + v2 * v2;\n      } while (s >= 1 || s === 0);\n      var multiplier = Math.sqrt(-2 * Math.log(s) / s);\n      _nextGaussian = (v2 * multiplier);\n      _hasNextGaussian = true;\n      return mean + standardDerivation * (v1 * multiplier);\n    }\n  }\n}\n\nmodule.exports = createRandom();\n","'use strict';\r\n\r\nvar width = 256;// each RC4 output is 0 <= x < 256\r\nvar chunks = 6;// at least six RC4 outputs for each double\r\nvar digits = 52;// there are 52 significant digits in a double\r\nvar pool = [];// pool: entropy pool starts empty\r\nvar GLOBAL = typeof global === 'undefined' ? window : global;\r\n\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\nvar startdenom = Math.pow(width, chunks),\r\n    significance = Math.pow(2, digits),\r\n    overflow = significance * 2,\r\n    mask = width - 1;\r\n\r\n\r\nvar oldRandom = Math.random;\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\nmodule.exports = function(seed, options) {\r\n  if (options && options.global === true) {\r\n    options.global = false;\r\n    Math.random = module.exports(seed, options);\r\n    options.global = true;\r\n    return Math.random;\r\n  }\r\n  var use_entropy = (options && options.entropy) || false;\r\n  var key = [];\r\n\r\n  // Flatten the seed string or build one from local entropy if needed.\r\n  var shortseed = mixkey(flatten(\r\n    use_entropy ? [seed, tostring(pool)] :\r\n    0 in arguments ? seed : autoseed(), 3), key);\r\n\r\n  // Use the seed to initialize an ARC4 generator.\r\n  var arc4 = new ARC4(key);\r\n\r\n  // Mix the randomness into accumulated entropy.\r\n  mixkey(tostring(arc4.S), pool);\r\n\r\n  // Override Math.random\r\n\r\n  // This function returns a random double in [0, 1) that contains\r\n  // randomness in every bit of the mantissa of the IEEE 754 value.\r\n\r\n  return function() {         // Closure to return a random double:\r\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n        x = 0;                          //   and no 'extra last byte'.\r\n    while (n < significance) {          // Fill up all significant digits by\r\n      n = (n + x) * width;              //   shifting numerator and\r\n      d *= width;                       //   denominator and generating a\r\n      x = arc4.g(1);                    //   new least-significant-byte.\r\n    }\r\n    while (n >= overflow) {             // To avoid rounding up, before adding\r\n      n /= 2;                           //   last byte, shift everything\r\n      d /= 2;                           //   right using integer Math until\r\n      x >>>= 1;                         //   we have exactly the desired bits.\r\n    }\r\n    return (n + x) / d;                 // Form the number within [0, 1).\r\n  };\r\n};\r\n\r\nmodule.exports.resetGlobal = function () {\r\n  Math.random = oldRandom;\r\n};\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n/** @constructor */\r\nfunction ARC4(key) {\r\n  var t, keylen = key.length,\r\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n  // The empty key [] is treated as [0].\r\n  if (!keylen) { key = [keylen++]; }\r\n\r\n  // Set up S using the standard key scheduling algorithm.\r\n  while (i < width) {\r\n    s[i] = i++;\r\n  }\r\n  for (i = 0; i < width; i++) {\r\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n    s[j] = t;\r\n  }\r\n\r\n  // The \"g\" method returns the next (count) outputs as one number.\r\n  (me.g = function(count) {\r\n    // Using instance members instead of closure state nearly doubles speed.\r\n    var t, r = 0,\r\n        i = me.i, j = me.j, s = me.S;\r\n    while (count--) {\r\n      t = s[i = mask & (i + 1)];\r\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n    }\r\n    me.i = i; me.j = j;\r\n    return r;\r\n    // For robust unpredictability discard an initial batch of values.\r\n    // See http://www.rsa.com/rsalabs/node.asp?id=2009\r\n  })(width);\r\n}\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\nfunction flatten(obj, depth) {\r\n  var result = [], typ = (typeof obj)[0], prop;\r\n  if (depth && typ == 'o') {\r\n    for (prop in obj) {\r\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n    }\r\n  }\r\n  return (result.length ? result : typ == 's' ? obj : obj + '\\0');\r\n}\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\nfunction mixkey(seed, key) {\r\n  var stringseed = seed + '', smear, j = 0;\r\n  while (j < stringseed.length) {\r\n    key[mask & j] =\r\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n  }\r\n  return tostring(key);\r\n}\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto if available.\r\n//\r\n/** @param {Uint8Array=} seed */\r\nfunction autoseed(seed) {\r\n  try {\r\n    GLOBAL.crypto.getRandomValues(seed = new Uint8Array(width));\r\n    return tostring(seed);\r\n  } catch (e) {\r\n    return [+new Date, GLOBAL, GLOBAL.navigator && GLOBAL.navigator.plugins,\r\n            GLOBAL.screen, tostring(pool)];\r\n  }\r\n}\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\nfunction tostring(a) {\r\n  return String.fromCharCode.apply(0, a);\r\n}\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to intefere with determinstic PRNG state later,\r\n// seedrandom will not call Math.random on its own again after\r\n// initialization.\r\n//\r\nmixkey(Math.random(), pool);\r\n","/*\n * A fast javascript implementation of simplex noise by Jonas Wagner\n\nBased on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\nWhich is based on example code by Stefan Gustavson (stegu@itn.liu.se).\nWith Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\nBetter rank ordering method by Stefan Gustavson in 2012.\n\n\n Copyright (c) 2018 Jonas Wagner\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n */\n(function() {\n  'use strict';\n\n  var F2 = 0.5 * (Math.sqrt(3.0) - 1.0);\n  var G2 = (3.0 - Math.sqrt(3.0)) / 6.0;\n  var F3 = 1.0 / 3.0;\n  var G3 = 1.0 / 6.0;\n  var F4 = (Math.sqrt(5.0) - 1.0) / 4.0;\n  var G4 = (5.0 - Math.sqrt(5.0)) / 20.0;\n\n  function SimplexNoise(randomOrSeed) {\n    var random;\n    if (typeof randomOrSeed == 'function') {\n      random = randomOrSeed;\n    }\n    else if (randomOrSeed) {\n      random = alea(randomOrSeed);\n    } else {\n      random = Math.random;\n    }\n    this.p = buildPermutationTable(random);\n    this.perm = new Uint8Array(512);\n    this.permMod12 = new Uint8Array(512);\n    for (var i = 0; i < 512; i++) {\n      this.perm[i] = this.p[i & 255];\n      this.permMod12[i] = this.perm[i] % 12;\n    }\n\n  }\n  SimplexNoise.prototype = {\n    grad3: new Float32Array([1, 1, 0,\n      -1, 1, 0,\n      1, -1, 0,\n\n      -1, -1, 0,\n      1, 0, 1,\n      -1, 0, 1,\n\n      1, 0, -1,\n      -1, 0, -1,\n      0, 1, 1,\n\n      0, -1, 1,\n      0, 1, -1,\n      0, -1, -1]),\n    grad4: new Float32Array([0, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1,\n      0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1,\n      1, 0, 1, 1, 1, 0, 1, -1, 1, 0, -1, 1, 1, 0, -1, -1,\n      -1, 0, 1, 1, -1, 0, 1, -1, -1, 0, -1, 1, -1, 0, -1, -1,\n      1, 1, 0, 1, 1, 1, 0, -1, 1, -1, 0, 1, 1, -1, 0, -1,\n      -1, 1, 0, 1, -1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, -1,\n      1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0,\n      -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 0]),\n    noise2D: function(xin, yin) {\n      var permMod12 = this.permMod12;\n      var perm = this.perm;\n      var grad3 = this.grad3;\n      var n0 = 0; // Noise contributions from the three corners\n      var n1 = 0;\n      var n2 = 0;\n      // Skew the input space to determine which simplex cell we're in\n      var s = (xin + yin) * F2; // Hairy factor for 2D\n      var i = Math.floor(xin + s);\n      var j = Math.floor(yin + s);\n      var t = (i + j) * G2;\n      var X0 = i - t; // Unskew the cell origin back to (x,y) space\n      var Y0 = j - t;\n      var x0 = xin - X0; // The x,y distances from the cell origin\n      var y0 = yin - Y0;\n      // For the 2D case, the simplex shape is an equilateral triangle.\n      // Determine which simplex we are in.\n      var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n      if (x0 > y0) {\n        i1 = 1;\n        j1 = 0;\n      } // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n      else {\n        i1 = 0;\n        j1 = 1;\n      } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n      // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n      // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n      // c = (3-sqrt(3))/6\n      var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n      var y1 = y0 - j1 + G2;\n      var x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords\n      var y2 = y0 - 1.0 + 2.0 * G2;\n      // Work out the hashed gradient indices of the three simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      // Calculate the contribution from the three corners\n      var t0 = 0.5 - x0 * x0 - y0 * y0;\n      if (t0 >= 0) {\n        var gi0 = permMod12[ii + perm[jj]] * 3;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0); // (x,y) of grad3 used for 2D gradient\n      }\n      var t1 = 0.5 - x1 * x1 - y1 * y1;\n      if (t1 >= 0) {\n        var gi1 = permMod12[ii + i1 + perm[jj + j1]] * 3;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1);\n      }\n      var t2 = 0.5 - x2 * x2 - y2 * y2;\n      if (t2 >= 0) {\n        var gi2 = permMod12[ii + 1 + perm[jj + 1]] * 3;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2);\n      }\n      // Add contributions from each corner to get the final noise value.\n      // The result is scaled to return values in the interval [-1,1].\n      return 70.0 * (n0 + n1 + n2);\n    },\n    // 3D simplex noise\n    noise3D: function(xin, yin, zin) {\n      var permMod12 = this.permMod12;\n      var perm = this.perm;\n      var grad3 = this.grad3;\n      var n0, n1, n2, n3; // Noise contributions from the four corners\n      // Skew the input space to determine which simplex cell we're in\n      var s = (xin + yin + zin) * F3; // Very nice and simple skew factor for 3D\n      var i = Math.floor(xin + s);\n      var j = Math.floor(yin + s);\n      var k = Math.floor(zin + s);\n      var t = (i + j + k) * G3;\n      var X0 = i - t; // Unskew the cell origin back to (x,y,z) space\n      var Y0 = j - t;\n      var Z0 = k - t;\n      var x0 = xin - X0; // The x,y,z distances from the cell origin\n      var y0 = yin - Y0;\n      var z0 = zin - Z0;\n      // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n      // Determine which simplex we are in.\n      var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n      var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n      if (x0 >= y0) {\n        if (y0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        } // X Y Z order\n        else if (x0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        } // X Z Y order\n        else {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        } // Z X Y order\n      }\n      else { // x0<y0\n        if (y0 < z0) {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } // Z Y X order\n        else if (x0 < z0) {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } // Y Z X order\n        else {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        } // Y X Z order\n      }\n      // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n      // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n      // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n      // c = 1/6.\n      var x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords\n      var y1 = y0 - j1 + G3;\n      var z1 = z0 - k1 + G3;\n      var x2 = x0 - i2 + 2.0 * G3; // Offsets for third corner in (x,y,z) coords\n      var y2 = y0 - j2 + 2.0 * G3;\n      var z2 = z0 - k2 + 2.0 * G3;\n      var x3 = x0 - 1.0 + 3.0 * G3; // Offsets for last corner in (x,y,z) coords\n      var y3 = y0 - 1.0 + 3.0 * G3;\n      var z3 = z0 - 1.0 + 3.0 * G3;\n      // Work out the hashed gradient indices of the four simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      var kk = k & 255;\n      // Calculate the contribution from the four corners\n      var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n      if (t0 < 0) n0 = 0.0;\n      else {\n        var gi0 = permMod12[ii + perm[jj + perm[kk]]] * 3;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0 + grad3[gi0 + 2] * z0);\n      }\n      var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n      if (t1 < 0) n1 = 0.0;\n      else {\n        var gi1 = permMod12[ii + i1 + perm[jj + j1 + perm[kk + k1]]] * 3;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1 + grad3[gi1 + 2] * z1);\n      }\n      var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n      if (t2 < 0) n2 = 0.0;\n      else {\n        var gi2 = permMod12[ii + i2 + perm[jj + j2 + perm[kk + k2]]] * 3;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2 + grad3[gi2 + 2] * z2);\n      }\n      var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n      if (t3 < 0) n3 = 0.0;\n      else {\n        var gi3 = permMod12[ii + 1 + perm[jj + 1 + perm[kk + 1]]] * 3;\n        t3 *= t3;\n        n3 = t3 * t3 * (grad3[gi3] * x3 + grad3[gi3 + 1] * y3 + grad3[gi3 + 2] * z3);\n      }\n      // Add contributions from each corner to get the final noise value.\n      // The result is scaled to stay just inside [-1,1]\n      return 32.0 * (n0 + n1 + n2 + n3);\n    },\n    // 4D simplex noise, better simplex rank ordering method 2012-03-09\n    noise4D: function(x, y, z, w) {\n      var perm = this.perm;\n      var grad4 = this.grad4;\n\n      var n0, n1, n2, n3, n4; // Noise contributions from the five corners\n      // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n      var s = (x + y + z + w) * F4; // Factor for 4D skewing\n      var i = Math.floor(x + s);\n      var j = Math.floor(y + s);\n      var k = Math.floor(z + s);\n      var l = Math.floor(w + s);\n      var t = (i + j + k + l) * G4; // Factor for 4D unskewing\n      var X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\n      var Y0 = j - t;\n      var Z0 = k - t;\n      var W0 = l - t;\n      var x0 = x - X0; // The x,y,z,w distances from the cell origin\n      var y0 = y - Y0;\n      var z0 = z - Z0;\n      var w0 = w - W0;\n      // For the 4D case, the simplex is a 4D shape I won't even try to describe.\n      // To find out which of the 24 possible simplices we're in, we need to\n      // determine the magnitude ordering of x0, y0, z0 and w0.\n      // Six pair-wise comparisons are performed between each possible pair\n      // of the four coordinates, and the results are used to rank the numbers.\n      var rankx = 0;\n      var ranky = 0;\n      var rankz = 0;\n      var rankw = 0;\n      if (x0 > y0) rankx++;\n      else ranky++;\n      if (x0 > z0) rankx++;\n      else rankz++;\n      if (x0 > w0) rankx++;\n      else rankw++;\n      if (y0 > z0) ranky++;\n      else rankz++;\n      if (y0 > w0) ranky++;\n      else rankw++;\n      if (z0 > w0) rankz++;\n      else rankw++;\n      var i1, j1, k1, l1; // The integer offsets for the second simplex corner\n      var i2, j2, k2, l2; // The integer offsets for the third simplex corner\n      var i3, j3, k3, l3; // The integer offsets for the fourth simplex corner\n      // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n      // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n      // impossible. Only the 24 indices which have non-zero entries make any sense.\n      // We use a thresholding to set the coordinates in turn from the largest magnitude.\n      // Rank 3 denotes the largest coordinate.\n      i1 = rankx >= 3 ? 1 : 0;\n      j1 = ranky >= 3 ? 1 : 0;\n      k1 = rankz >= 3 ? 1 : 0;\n      l1 = rankw >= 3 ? 1 : 0;\n      // Rank 2 denotes the second largest coordinate.\n      i2 = rankx >= 2 ? 1 : 0;\n      j2 = ranky >= 2 ? 1 : 0;\n      k2 = rankz >= 2 ? 1 : 0;\n      l2 = rankw >= 2 ? 1 : 0;\n      // Rank 1 denotes the second smallest coordinate.\n      i3 = rankx >= 1 ? 1 : 0;\n      j3 = ranky >= 1 ? 1 : 0;\n      k3 = rankz >= 1 ? 1 : 0;\n      l3 = rankw >= 1 ? 1 : 0;\n      // The fifth corner has all coordinate offsets = 1, so no need to compute that.\n      var x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\n      var y1 = y0 - j1 + G4;\n      var z1 = z0 - k1 + G4;\n      var w1 = w0 - l1 + G4;\n      var x2 = x0 - i2 + 2.0 * G4; // Offsets for third corner in (x,y,z,w) coords\n      var y2 = y0 - j2 + 2.0 * G4;\n      var z2 = z0 - k2 + 2.0 * G4;\n      var w2 = w0 - l2 + 2.0 * G4;\n      var x3 = x0 - i3 + 3.0 * G4; // Offsets for fourth corner in (x,y,z,w) coords\n      var y3 = y0 - j3 + 3.0 * G4;\n      var z3 = z0 - k3 + 3.0 * G4;\n      var w3 = w0 - l3 + 3.0 * G4;\n      var x4 = x0 - 1.0 + 4.0 * G4; // Offsets for last corner in (x,y,z,w) coords\n      var y4 = y0 - 1.0 + 4.0 * G4;\n      var z4 = z0 - 1.0 + 4.0 * G4;\n      var w4 = w0 - 1.0 + 4.0 * G4;\n      // Work out the hashed gradient indices of the five simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      var kk = k & 255;\n      var ll = l & 255;\n      // Calculate the contribution from the five corners\n      var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\n      if (t0 < 0) n0 = 0.0;\n      else {\n        var gi0 = (perm[ii + perm[jj + perm[kk + perm[ll]]]] % 32) * 4;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad4[gi0] * x0 + grad4[gi0 + 1] * y0 + grad4[gi0 + 2] * z0 + grad4[gi0 + 3] * w0);\n      }\n      var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\n      if (t1 < 0) n1 = 0.0;\n      else {\n        var gi1 = (perm[ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]]] % 32) * 4;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad4[gi1] * x1 + grad4[gi1 + 1] * y1 + grad4[gi1 + 2] * z1 + grad4[gi1 + 3] * w1);\n      }\n      var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\n      if (t2 < 0) n2 = 0.0;\n      else {\n        var gi2 = (perm[ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]]] % 32) * 4;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad4[gi2] * x2 + grad4[gi2 + 1] * y2 + grad4[gi2 + 2] * z2 + grad4[gi2 + 3] * w2);\n      }\n      var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\n      if (t3 < 0) n3 = 0.0;\n      else {\n        var gi3 = (perm[ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]]] % 32) * 4;\n        t3 *= t3;\n        n3 = t3 * t3 * (grad4[gi3] * x3 + grad4[gi3 + 1] * y3 + grad4[gi3 + 2] * z3 + grad4[gi3 + 3] * w3);\n      }\n      var t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\n      if (t4 < 0) n4 = 0.0;\n      else {\n        var gi4 = (perm[ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]]] % 32) * 4;\n        t4 *= t4;\n        n4 = t4 * t4 * (grad4[gi4] * x4 + grad4[gi4 + 1] * y4 + grad4[gi4 + 2] * z4 + grad4[gi4 + 3] * w4);\n      }\n      // Sum up and scale the result to cover the range [-1,1]\n      return 27.0 * (n0 + n1 + n2 + n3 + n4);\n    }\n  };\n\n  function buildPermutationTable(random) {\n    var i;\n    var p = new Uint8Array(256);\n    for (i = 0; i < 256; i++) {\n      p[i] = i;\n    }\n    for (i = 0; i < 255; i++) {\n      var r = i + ~~(random() * (256 - i));\n      var aux = p[i];\n      p[i] = p[r];\n      p[r] = aux;\n    }\n    return p;\n  }\n  SimplexNoise._buildPermutationTable = buildPermutationTable;\n\n  function alea() {\n    // Johannes Baagøe <baagoe@baagoe.com>, 2010\n    var s0 = 0;\n    var s1 = 0;\n    var s2 = 0;\n    var c = 1;\n\n    var mash = masher();\n    s0 = mash(' ');\n    s1 = mash(' ');\n    s2 = mash(' ');\n\n    for (var i = 0; i < arguments.length; i++) {\n      s0 -= mash(arguments[i]);\n      if (s0 < 0) {\n        s0 += 1;\n      }\n      s1 -= mash(arguments[i]);\n      if (s1 < 0) {\n        s1 += 1;\n      }\n      s2 -= mash(arguments[i]);\n      if (s2 < 0) {\n        s2 += 1;\n      }\n    }\n    mash = null;\n    return function() {\n      var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n      s0 = s1;\n      s1 = s2;\n      return s2 = t - (c = t | 0);\n    };\n  }\n  function masher() {\n    var n = 0xefc8249d;\n    return function(data) {\n      data = data.toString();\n      for (var i = 0; i < data.length; i++) {\n        n += data.charCodeAt(i);\n        var h = 0.02519603282416938 * n;\n        n = h >>> 0;\n        h -= n;\n        h *= n;\n        n = h >>> 0;\n        h -= n;\n        n += h * 0x100000000; // 2^32\n      }\n      return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n    };\n  }\n\n  // amd\n  if (typeof define !== 'undefined' && define.amd) define(function() {return SimplexNoise;});\n  // common js\n  if (typeof exports !== 'undefined') exports.SimplexNoise = SimplexNoise;\n  // browser\n  else if (typeof window !== 'undefined') window.SimplexNoise = SimplexNoise;\n  // nodejs\n  if (typeof module !== 'undefined') {\n    module.exports = SimplexNoise;\n  }\n\n})();\n","var defined = require('defined');\nvar EPSILON = Number.EPSILON;\n\nfunction clamp (value, min, max) {\n  return min < max\n    ? (value < min ? min : value > max ? max : value)\n    : (value < max ? max : value > min ? min : value);\n}\n\nfunction clamp01 (v) {\n  return clamp(v, 0, 1);\n}\n\nfunction lerp (min, max, t) {\n  return min * (1 - t) + max * t;\n}\n\nfunction inverseLerp (min, max, t) {\n  if (Math.abs(min - max) < EPSILON) return 0;\n  else return (t - min) / (max - min);\n}\n\nfunction smoothstep (min, max, t) {\n  var x = clamp(inverseLerp(min, max, t), 0, 1);\n  return x * x * (3 - 2 * x);\n}\n\nfunction toFinite (n, defaultValue) {\n  defaultValue = defined(defaultValue, 0);\n  return typeof n === 'number' && isFinite(n) ? n : defaultValue;\n}\n\nfunction expandVector (dims) {\n  if (typeof dims !== 'number') throw new TypeError('Expected dims argument');\n  return function (p, defaultValue) {\n    defaultValue = defined(defaultValue, 0);\n    var scalar;\n    if (p == null) {\n      // No vector, create a default one\n      scalar = defaultValue;\n    } else if (typeof p === 'number' && isFinite(p)) {\n      // Expand single channel to multiple vector\n      scalar = p;\n    }\n\n    var out = [];\n    var i;\n    if (scalar == null) {\n      for (i = 0; i < dims; i++) {\n        out[i] = toFinite(p[i], defaultValue);\n      }\n    } else {\n      for (i = 0; i < dims; i++) {\n        out[i] = scalar;\n      }\n    }\n    return out;\n  };\n}\n\nfunction lerpArray (min, max, t, out) {\n  out = out || [];\n  if (min.length !== max.length) {\n    throw new TypeError('min and max array are expected to have the same length');\n  }\n  for (var i = 0; i < min.length; i++) {\n    out[i] = lerp(min[i], max[i], t);\n  }\n  return out;\n}\n\nfunction newArray (n, initialValue) {\n  n = defined(n, 0);\n  if (typeof n !== 'number') throw new TypeError('Expected n argument to be a number');\n  var out = [];\n  for (var i = 0; i < n; i++) out.push(initialValue);\n  return out;\n}\n\nfunction linspace (n, opts) {\n  n = defined(n, 0);\n  if (typeof n !== 'number') throw new TypeError('Expected n argument to be a number');\n  opts = opts || {};\n  if (typeof opts === 'boolean') {\n    opts = { endpoint: true };\n  }\n  var offset = defined(opts.offset, 0);\n  if (opts.endpoint) {\n    return newArray(n).map(function (_, i) {\n      return n <= 1 ? 0 : ((i + offset) / (n - 1));\n    });\n  } else {\n    return newArray(n).map(function (_, i) {\n      return (i + offset) / n;\n    });\n  }\n}\n\nfunction lerpFrames (values, t, out) {\n  t = clamp(t, 0, 1);\n\n  var len = values.length - 1;\n  var whole = t * len;\n  var frame = Math.floor(whole);\n  var fract = whole - frame;\n\n  var nextFrame = Math.min(frame + 1, len);\n  var a = values[frame % values.length];\n  var b = values[nextFrame % values.length];\n  if (typeof a === 'number' && typeof b === 'number') {\n    return lerp(a, b, fract);\n  } else if (Array.isArray(a) && Array.isArray(b)) {\n    return lerpArray(a, b, fract, out);\n  } else {\n    throw new TypeError('Mismatch in value type of two array elements: ' + frame + ' and ' + nextFrame);\n  }\n}\n\nfunction mod (a, b) {\n  return ((a % b) + b) % b;\n}\n\nfunction degToRad (n) {\n  return n * Math.PI / 180;\n}\n\nfunction radToDeg (n) {\n  return n * 180 / Math.PI;\n}\n\nfunction fract (n) {\n  return n - Math.floor(n);\n}\n\nfunction sign (n) {\n  if (n > 0) return 1;\n  else if (n < 0) return -1;\n  else return 0;\n}\n\nfunction wrap (value, from, to) {\n  if (typeof from !== 'number' || typeof to !== 'number') {\n    throw new TypeError('Must specify \"to\" and \"from\" arguments as numbers');\n  }\n  // algorithm from http://stackoverflow.com/a/5852628/599884\n  if (from > to) {\n    var t = from;\n    from = to;\n    to = t;\n  }\n  var cycle = to - from;\n  if (cycle === 0) {\n    return to;\n  }\n  return value - cycle * Math.floor((value - from) / cycle);\n}\n\n// Specific function from Unity / ofMath, not sure its needed?\n// function lerpWrap (a, b, t, min, max) {\n//   return wrap(a + wrap(b - a, min, max) * t, min, max)\n// }\n\nfunction pingPong (t, length) {\n  t = mod(t, length * 2);\n  return length - Math.abs(t - length);\n}\n\nfunction damp (a, b, lambda, dt) {\n  return lerp(a, b, 1 - Math.exp(-lambda * dt));\n}\n\nfunction dampArray (a, b, lambda, dt, out) {\n  out = out || [];\n  for (var i = 0; i < a.length; i++) {\n    out[i] = damp(a[i], b[i], lambda, dt);\n  }\n  return out;\n}\n\nfunction mapRange (value, inputMin, inputMax, outputMin, outputMax, clamp) {\n  // Reference:\n  // https://openframeworks.cc/documentation/math/ofMath/\n  if (Math.abs(inputMin - inputMax) < EPSILON) {\n    return outputMin;\n  } else {\n    var outVal = ((value - inputMin) / (inputMax - inputMin) * (outputMax - outputMin) + outputMin);\n    if (clamp) {\n      if (outputMax < outputMin) {\n        if (outVal < outputMax) outVal = outputMax;\n        else if (outVal > outputMin) outVal = outputMin;\n      } else {\n        if (outVal > outputMax) outVal = outputMax;\n        else if (outVal < outputMin) outVal = outputMin;\n      }\n    }\n    return outVal;\n  }\n}\n\nmodule.exports = {\n  mod: mod,\n  fract: fract,\n  sign: sign,\n  degToRad: degToRad,\n  radToDeg: radToDeg,\n  wrap: wrap,\n  pingPong: pingPong,\n  linspace: linspace,\n  lerp: lerp,\n  lerpArray: lerpArray,\n  inverseLerp: inverseLerp,\n  lerpFrames: lerpFrames,\n  clamp: clamp,\n  clamp01: clamp01,\n  smoothstep: smoothstep,\n  damp: damp,\n  dampArray: dampArray,\n  mapRange: mapRange,\n  expand2D: expandVector(2),\n  expand3D: expandVector(3),\n  expand4D: expandVector(4)\n};\n"],"sourceRoot":""}